openapi: 3.0.0
info:
  title: Kitsu API Docs
  description: >-
    Kitsu is a modern anime discovery platform that helps you track the

    anime you're watching, discover new anime and socialize with other

    fans.


    With the Kitsu API you can do everything the client can do and much

    more.


    API path: `https://kitsu.io/api/edge`


    <!-- # Versioning


    Every year, we release a new version of the API, numbered by the

    last two digits of the current year. For example, the root URL of

    this (the 2017) release is `https://kitsu.io/api/17/`.


    No fields, endpoints, or resources will be removed until the next

    year's release, but may be changed to return empty values (arrays,

    empty strings, etc.) before then. Fields, endpoints, and resources

    may be added throughout the lifetime of a release.


    In addition to these versioned APIs, there is access to the same API

    our website uses. However, this offers no guarantees: anything could

    change at any time. We suggest you don't use this, but if you need

    to, it can be accessed at `https://kitsu.io/api/edge/`.


    ## Life Cycle


    Upon release of a new version, the previous version will be

    maintained for one year or until usage drops below 2% of API

    traffic.


    During this period, it will not be updated to have any new fields,

    endpoints, or resources. You are expected to keep your applications

    running on the latest version of the API. For most applications,

    upgrading should take no more than a few hours of work.

    -->


    # JSON API


    The Kitsu API implements the JSON API specification. This means

    there are some notable semantics to how you consume it, but

    understanding it will take a lot of the work of using it out of your

    hands.


    These docs will include a short overview of the capabilities, but

    you can consult the [JSON API Specification][jsonapi] for more

    information.


    You can be more specific about the data you want to retrieve by

    using URL parameters and are outlined below.


    **Note:** This documentation will display parameters with brackets

    (`[` and `]`) for readability, but actual URLs will need to be

    percent-encoded (`%5B` and `%5D`).


    ## Request Headers


    As per the JSON API specification, all requests to the API should

    contain these headers:


    ```

    Accept: application/vnd.api+json

    Content-Type: application/vnd.api+json

    ```


    ## Filtering and Search


    Filtering lets you query data that contains certain matching

    attributes or relationships. These take the form of

    `filter[attribute]=value`. For example, you can request all the

    anime of the Adventure category:


    ```

    /anime?filter[categories]=adventure

    ```


    For some models, you can also search based on the query text:


    ```

    /anime?filter[text]=cowboy%20bebop

    ```


    ## Pagination


    You can choose how much of a resource to receive by specifying

    pagination parameters. Pagination is supported via `limit` and

    `offset`. Resources are paginated in groups of `10` by default and can be

    increased to a maximum of `20`.


    `/anime?page[limit]=5&page[offset]=0`


    The response will include URLs for the first, next and last page of

    resources in the `links` object based on your request.


    ```

    "links": {
        "first": "https://kitsu.io/api/edge/anime?page[limit]=5&page[offset]=0",
        "next": "https://kitsu.io/api/edge/anime?page[limit]=5&page[offset]=5",
        "last": "https://kitsu.io/api/edge/anime?page[limit]=5&page[offset]=12062"
    }

    ```


    ## Sorting


    Sorting by attributes is also supported. By default, sorts are

    applied in ascending order. You can request a descending order by

    prepending `-` to the parameter. You can use a comma-delimited list

    to sort by multiple attributes.


    `/users?sort=-followersCount,-followingCount`


    ## Includes


    You can include related resources with `include=[relationship]`.

    You can also specify successive relationships using a `.`. A

    comma-delimited list can be used to request multiple relationships.


    `/anime?include=categories,mediaRelationships.destination`


    ## Sparse Fieldsets


    You can request a resource to only return a specific set of fields

    in its response. For example, to only receive a user's name and

    creation date:


    `/users?fields[users]=name,createdAt`


    ## Client Implementations


    JSON API has a great advantage in that since its standardised,

    API-agnostic tools can be made to abstract away the semantics of

    consuming and working with the data. It is recommended that you use

    a JSON API client to implement the Kitsu API for this reason.


    Many implementations in over 13 languages can be found on the

    [JSON API website][jsonapi-client].


    # HTTP Methods


    Method   | Description

    -------- | -----------

    `GET`    | Fetch - retrieve resources

    `POST`   | Create - create new resources

    `PATCH`  | Update - (partially) modify existing resources

    `DELETE` | Delete - remove resources


    # Status Codes


    Code  | Description

    ----- | -----------

    `200` | OK - request succeeded (GET, PATCH, DELETE)

    `201` | Created - new resource created (POST)

    `204` | No Content - request succeeded (DELETE)

    `400` | Bad Request - malformed request

    `401` | Unauthorized - invalid or no authentication details provided

    `404` | Not Found - resource does not exist

    `406` | Not Acceptable - invalid `Accept` header

    `5xx` | Server Error


    # Tutorials


    - [You and your Kitsu Anime library](https://github.com/pheyvaer/kitsu-tutorial/blob/master/index.md)


    # Questions?


    If you have any questions you can:


    - Join our [Discord server][discord]


    - Join our Slack by sending an email to josh@kitsu.io


    - Ping [@wopian][wopian], [@matthewdias][matthewdias] or [@nuck][nuck] on Kitsu.


    [jsonapi]:http://jsonapi.org/format/

    [jsonapi-client]:http://jsonapi.org/implementations/#client-libraries

    [wopian]:https://kitsu.io/users/wopian

    [matthewdias]:https://kitsu.io/users/matthewdias

    [nuck]:https://kitsu.io/users/nuck

    [discord]:https://invite.gg/kitsu
  contact: {}
  version: '1.0'
servers:
- url: https://kitsu.io/api/edge
  variables: {}
paths:
  /anime:
    get:
      tags:
      - Anime
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `season` | `winter`, `spring`, `summer`, `fall`

        `seasonYear` | `2017`, `2005,2006`

        `streamers` | `Crunchyroll`

        `ageRating` | `G`, `PG,R,R18`
      operationId: FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: anime
                  links:
                    self: https://kitsu.io/api/edge/anime/1
                  attributes:
                    createdAt: 2013-02-20T16:00:13.609Z
                    updatedAt: 2017-12-20T00:00:09.270Z
                    slug: cowboy-bebop
                    synopsis: In the year 2071, humanity has colonoized several of the planets and moons...
                    coverImageTopOffset: 400
                    titles:
                      en: Cowboy Bebop
                      en_jp: Cowbop Bebop
                      ja_jp: カウボーイビバップ
                    canonicalTitle: Cowboy Bebop
                    abbreviatedTitles:
                    - COWBOY BEBOP
                    averageRating: 88.55
                    ratingFrequencies:
                      2: 83
                      3: 0
                      4: 296
                      5: 0
                      6: 67
                      7: 2
                      8: 200
                      9: 1
                      10: 271
                      11: 3
                      12: 1414
                      13: 11
                      14: 1709
                      15: 35
                      16: 3917
                      17: 56
                      18: 4638
                      19: 69
                      20: 14276
                    userCount: 43409
                    favoritesCount: 3485
                    startDate: 1998-04-03
                    endDate: 1999-04-24
                    popularityRank: 10
                    ratingRank: 10
                    ageRating: R
                    ageRatingGuide: 17+ (violence & profanity)
                    subtype: TV
                    status: finished
                    tba: ''
                    posterImage:
                      tiny: https://media.kitsu.io/anime/poster_images/1/tiny.jpg?1431697256
                      small: https://media.kitsu.io/anime/poster_images/1/small.jpg?1431697256
                      medium: https://media.kitsu.io/anime/poster_images/1/medium.jpg?1431697256
                      large: https://media.kitsu.io/anime/poster_images/1/large.jpg?1431697256
                      original: https://media.kitsu.io/anime/poster_images/1/original.jpg?1431697256
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    coverImage:
                      tiny: https://media.kitsu.io/anime/cover_images/1/tiny.jpg?1416336000
                      small: https://media.kitsu.io/anime/cover_images/1/small.jpg?1416336000
                      large: https://media.kitsu.io/anime/cover_images/1/large.jpg?1416336000
                      original: https://media.kitsu.io/anime/cover_images/1/original.jpg?1416336000
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    episodeCount: 26
                    episodeLength: 25
                    youtubeVideoId: qig4KOK2R2g
                    showType: TV
                    nsfw: false
                  relationships:
                    genres:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/genres
                        related: https://kitsu.io/api/edge/anime/1/genres
                    categories:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/categories
                        related: https://kitsu.io/api/edge/anime/1/categories
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/castings
                        related: https://kitsu.io/api/edge/anime/1/castings
                    installments:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/installments
                        related: https://kitsu.io/api/edge/anime/1/installments
                    mappings:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/mappings
                        related: https://kitsu.io/api/edge/anime/1/mappings
                    reviews:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/reviews
                        related: https://kitsu.io/api/edge/anime/1/reviews
                    mediaRelationships:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/media-relationships
                        related: https://kitsu.io/api/edge/anime/1/media-relationships
                    episodes:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/episodes
                        related: https://kitsu.io/api/edge/anime/1/episodes
                    streamingLinks:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/streaming-links
                        related: https://kitsu.io/api/edge/anime/1/streaming-links
                    animeProductions:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-productions
                        related: https://kitsu.io/api/edge/anime/1/anime-productions
                    animeCharacters:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-characters
                        related: https://kitsu.io/api/edge/anime/1/anime-characters
                    animeStaff:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-staff
                        related: https://kitsu.io/api/edge/anime/1/anime-staff
                meta:
                  count: 13797
                links:
                  first: https://kitsu.io/api/edge/anime?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/anime?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/anime?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/anime?page%5Blimit%5D=10&page%5Boffset%5D=13787
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /anime/{id}:
    get:
      tags:
      - Anime
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `season` | `winter`, `spring`, `summer`, `fall`

        `seasonYear` | `2017`, `2005,2006`

        `streamers` | `Crunchyroll`

        `ageRating` | `G`, `PG,R,R18`
      operationId: FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: anime
                  links:
                    self: https://kitsu.io/api/edge/anime/1
                  attributes:
                    createdAt: 2013-02-20T16:00:13.609Z
                    updatedAt: 2017-12-20T00:00:09.270Z
                    slug: cowboy-bebop
                    synopsis: In the year 2071, humanity has colonoized several of the planets and moons...
                    coverImageTopOffset: 400
                    titles:
                      en: Cowboy Bebop
                      en_jp: Cowbop Bebop
                      ja_jp: カウボーイビバップ
                    canonicalTitle: Cowboy Bebop
                    abbreviatedTitles:
                    - COWBOY BEBOP
                    averageRating: 88.55
                    ratingFrequencies:
                      2: 83
                      3: 0
                      4: 296
                      5: 0
                      6: 67
                      7: 2
                      8: 200
                      9: 1
                      10: 271
                      11: 3
                      12: 1414
                      13: 11
                      14: 1709
                      15: 35
                      16: 3917
                      17: 56
                      18: 4638
                      19: 69
                      20: 14276
                    userCount: 43409
                    favoritesCount: 3485
                    startDate: 1998-04-03
                    endDate: 1999-04-24
                    popularityRank: 10
                    ratingRank: 10
                    ageRating: R
                    ageRatingGuide: 17+ (violence & profanity)
                    subtype: TV
                    status: finished
                    tba: ''
                    posterImage:
                      tiny: https://media.kitsu.io/anime/poster_images/1/tiny.jpg?1431697256
                      small: https://media.kitsu.io/anime/poster_images/1/small.jpg?1431697256
                      medium: https://media.kitsu.io/anime/poster_images/1/medium.jpg?1431697256
                      large: https://media.kitsu.io/anime/poster_images/1/large.jpg?1431697256
                      original: https://media.kitsu.io/anime/poster_images/1/original.jpg?1431697256
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    coverImage:
                      tiny: https://media.kitsu.io/anime/cover_images/1/tiny.jpg?1416336000
                      small: https://media.kitsu.io/anime/cover_images/1/small.jpg?1416336000
                      large: https://media.kitsu.io/anime/cover_images/1/large.jpg?1416336000
                      original: https://media.kitsu.io/anime/cover_images/1/original.jpg?1416336000
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    episodeCount: 26
                    episodeLength: 25
                    youtubeVideoId: qig4KOK2R2g
                    showType: TV
                    nsfw: false
                  relationships:
                    genres:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/genres
                        related: https://kitsu.io/api/edge/anime/1/genres
                    categories:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/categories
                        related: https://kitsu.io/api/edge/anime/1/categories
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/castings
                        related: https://kitsu.io/api/edge/anime/1/castings
                    installments:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/installments
                        related: https://kitsu.io/api/edge/anime/1/installments
                    mappings:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/mappings
                        related: https://kitsu.io/api/edge/anime/1/mappings
                    reviews:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/reviews
                        related: https://kitsu.io/api/edge/anime/1/reviews
                    mediaRelationships:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/media-relationships
                        related: https://kitsu.io/api/edge/anime/1/media-relationships
                    episodes:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/episodes
                        related: https://kitsu.io/api/edge/anime/1/episodes
                    streamingLinks:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/streaming-links
                        related: https://kitsu.io/api/edge/anime/1/streaming-links
                    animeProductions:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-productions
                        related: https://kitsu.io/api/edge/anime/1/anime-productions
                    animeCharacters:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-characters
                        related: https://kitsu.io/api/edge/anime/1/anime-characters
                    animeStaff:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-staff
                        related: https://kitsu.io/api/edge/anime/1/anime-staff
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /episodes:
    get:
      tags:
      - Anime
      summary: Episodes_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `number` |
      operationId: Episodes_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 28
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Episodes_FetchCollectionresponse'
              example:
                data:
                - id: 28
                  type: episodes
                  links:
                    self: https://kitsu.io/api/edge/episodes/28
                  attributes:
                    createdAt: 2013-02-20T18:20:39.003Z
                    updatedAt: 2014-11-18T16:20:14.856Z
                    titles:
                      en_jp: The $$60 Billion Man
                    canonicalTitle: The $$60 Billion Man
                    seasonNumber: 1
                    number: 1
                    relativeNumber: 1
                    synopsis: There are many rumors circulating...
                    airdate: 1998-04-01
                    length: 
                    thumbnail:
                      original: https://media.kitsu.io/episodes/thumbnails/28/original.jpg?1416327614
                      meta:
                        dimensions: {}
                  relationships:
                    media:
                      links:
                        self: https://kitsu.io/api/edge/episodes/28/relationships/media
                        related: https://kitsu.io/api/edge/episodes/28/media
                    videos:
                      links:
                        self: https://kitsu.io/api/edge/episodes/28/relationships/videos
                        related: https://kitsu.io/api/edge/episodes/28/videos
                meta:
                  count: 212384
                links:
                  first: https://kitsu.io/api/edge/episodes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/episodes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/episodes?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/episodes?page%5Blimit%5D=10&page%5Boffset%5D=212374
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /episodes/{id}:
    get:
      tags:
      - Anime
      summary: Episodes_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `number` |
      operationId: Episodes_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 28
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Episodes_FetchResourceresponse'
              example:
                data:
                  id: 28
                  type: episodes
                  links:
                    self: https://kitsu.io/api/edge/episodes/28
                  attributes:
                    createdAt: 2013-02-20T18:20:39.003Z
                    updatedAt: 2014-11-18T16:20:14.856Z
                    titles:
                      en_jp: The $$60 Billion Man
                    canonicalTitle: The $$60 Billion Man
                    seasonNumber: 1
                    number: 1
                    relativeNumber: 1
                    synopsis: There are many rumors circulating...
                    airdate: 1998-04-01
                    length: 
                    thumbnail:
                      original: https://media.kitsu.io/episodes/thumbnails/28/original.jpg?1416327614
                      meta:
                        dimensions: {}
                  relationships:
                    media:
                      links:
                        self: https://kitsu.io/api/edge/episodes/28/relationships/media
                        related: https://kitsu.io/api/edge/episodes/28/media
                    videos:
                      links:
                        self: https://kitsu.io/api/edge/episodes/28/relationships/videos
                        related: https://kitsu.io/api/edge/episodes/28/videos
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /trending/anime:
    get:
      tags:
      - Anime
      summary: Trending Anime_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: TrendingAnime_FetchCollection
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TrendingAnime_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: anime
                  links:
                    self: https://kitsu.io/api/edge/anime/1
                  attributes:
                    createdAt: 2013-02-20T16:00:13.609Z
                    updatedAt: 2017-12-20T00:00:09.270Z
                    slug: cowboy-bebop
                    synopsis: In the year 2071, humanity has colonoized several of the planets and moons...
                    coverImageTopOffset: 400
                    titles:
                      en: Cowboy Bebop
                      en_jp: Cowbop Bebop
                      ja_jp: カウボーイビバップ
                    canonicalTitle: Cowboy Bebop
                    abbreviatedTitles:
                    - COWBOY BEBOP
                    averageRating: 88.55
                    ratingFrequencies:
                      2: 83
                      3: 0
                      4: 296
                      5: 0
                      6: 67
                      7: 2
                      8: 200
                      9: 1
                      10: 271
                      11: 3
                      12: 1414
                      13: 11
                      14: 1709
                      15: 35
                      16: 3917
                      17: 56
                      18: 4638
                      19: 69
                      20: 14276
                    userCount: 43409
                    favoritesCount: 3485
                    startDate: 1998-04-03
                    endDate: 1999-04-24
                    popularityRank: 10
                    ratingRank: 10
                    ageRating: R
                    ageRatingGuide: 17+ (violence & profanity)
                    subtype: TV
                    status: finished
                    tba: ''
                    posterImage:
                      tiny: https://media.kitsu.io/anime/poster_images/1/tiny.jpg?1431697256
                      small: https://media.kitsu.io/anime/poster_images/1/small.jpg?1431697256
                      medium: https://media.kitsu.io/anime/poster_images/1/medium.jpg?1431697256
                      large: https://media.kitsu.io/anime/poster_images/1/large.jpg?1431697256
                      original: https://media.kitsu.io/anime/poster_images/1/original.jpg?1431697256
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    coverImage:
                      tiny: https://media.kitsu.io/anime/cover_images/1/tiny.jpg?1416336000
                      small: https://media.kitsu.io/anime/cover_images/1/small.jpg?1416336000
                      large: https://media.kitsu.io/anime/cover_images/1/large.jpg?1416336000
                      original: https://media.kitsu.io/anime/cover_images/1/original.jpg?1416336000
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    episodeCount: 26
                    episodeLength: 25
                    youtubeVideoId: qig4KOK2R2g
                    showType: TV
                    nsfw: false
                  relationships:
                    genres:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/genres
                        related: https://kitsu.io/api/edge/anime/1/genres
                    categories:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/categories
                        related: https://kitsu.io/api/edge/anime/1/categories
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/castings
                        related: https://kitsu.io/api/edge/anime/1/castings
                    installments:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/installments
                        related: https://kitsu.io/api/edge/anime/1/installments
                    mappings:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/mappings
                        related: https://kitsu.io/api/edge/anime/1/mappings
                    reviews:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/reviews
                        related: https://kitsu.io/api/edge/anime/1/reviews
                    mediaRelationships:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/media-relationships
                        related: https://kitsu.io/api/edge/anime/1/media-relationships
                    episodes:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/episodes
                        related: https://kitsu.io/api/edge/anime/1/episodes
                    streamingLinks:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/streaming-links
                        related: https://kitsu.io/api/edge/anime/1/streaming-links
                    animeProductions:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-productions
                        related: https://kitsu.io/api/edge/anime/1/anime-productions
                    animeCharacters:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-characters
                        related: https://kitsu.io/api/edge/anime/1/anime-characters
                    animeStaff:
                      links:
                        self: https://kitsu.io/api/edge/anime/1/relationships/anime-staff
                        related: https://kitsu.io/api/edge/anime/1/anime-staff
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /manga:
    get:
      tags:
      - Manga
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `chapterCount` |
      operationId: GetFetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 14916
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse1'
              example:
                data:
                - id: 14916
                  type: manga
                  links:
                    self: https://kitsu.io/api/edge/manga/14916
                  attributes:
                    createdAt: 2013-12-18T13:59:39.232Z
                    updatedAt: 2017-12-24T00:00:19.819Z
                    slug: shingeki-no-kyojin
                    synopsis: Several hundred years ago...
                    coverImageTopOffset: 112
                    titles:
                      en: Attack on Titan
                      en_jp: Shingeki no Kyojin
                      ja_jp: 進撃の巨人
                    canonicalTitle: Attack on Titan
                    abbreviatedTitles: 
                    averageRating: 82.47
                    ratingFrequencies:
                      2: 39
                      3: 0
                      4: 18
                      5: 0
                      6: 27
                      7: 4
                      8: 126
                      9: 0
                      10: 85
                      11: 4
                      12: 192
                      13: 5
                      14: 635
                      15: 3
                      16: 528
                      17: 12
                      18: 534
                      19: 2
                      20: 1379
                    userCount: 7137
                    favoritesCount: 758
                    startDate: 2009-09-09
                    endDate: 
                    popularityRank: 2
                    ratingRank: 138
                    ageRating: R
                    ageRatingGuide: Horror
                    subtype: manga
                    status: finished
                    tba: ''
                    posterImage:
                      tiny: https://media.kitsu.io/manga/poster_images/14916/tiny.jpg?1491099787
                      small: https://media.kitsu.io/manga/poster_images/14916/small.jpg?1491099787
                      medium: https://media.kitsu.io/manga/poster_images/14916/medium.jpg?1491099787
                      large: https://media.kitsu.io/manga/poster_images/14916/large.jpg?1491099787
                      original: https://media.kitsu.io/manga/poster_images/14916/original.jpg?1491099787
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    coverImage:
                      tiny: https://media.kitsu.io/manga/cover_images/14916/tiny.jpg?1471880895
                      small: https://media.kitsu.io/manga/cover_images/14916/small.jpg?1471880895
                      large: https://media.kitsu.io/manga/cover_images/14916/large.jpg?1471880895
                      original: https://media.kitsu.io/manga/cover_images/14916/original.jpg?1471880895
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    chapterCount: 
                    volumeCount: 0
                    serialization: Bessatsu Shounen Magazine
                    mangaType: manga
                  relationships:
                    genres:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/genres
                        related: https://kitsu.io/api/edge/manga/1/genres
                    categories:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/categories
                        related: https://kitsu.io/api/edge/manga/1/categories
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/castings
                        related: https://kitsu.io/api/edge/manga/1/castings
                    installments:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/installments
                        related: https://kitsu.io/api/edge/manga/1/installments
                    mappings:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/mappings
                        related: https://kitsu.io/api/edge/manga/1/mappings
                    reviews:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/reviews
                        related: https://kitsu.io/api/edge/manga/1/reviews
                    mediaRelationships:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/media-relationships
                        related: https://kitsu.io/api/edge/manga/1/media-relationships
                    chapters:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/chapters
                        related: https://kitsu.io/api/edge/manga/1/chapters
                    mangaCharacters:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/manga-characters
                        related: https://kitsu.io/api/edge/manga/1/manga-characters
                    mangaStaff:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/manga-staff
                        related: https://kitsu.io/api/edge/manga/1/manga-staff
                meta:
                  count: 40278
                links:
                  first: https://kitsu.io/api/edge/manga?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/manga?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/manga?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/manga?page%5Blimit%5D=10&page%5Boffset%5D=40268
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /manga/{id}:
    get:
      tags:
      - Manga
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `chapterCount` |
      operationId: GetFetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 14916
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse1'
              example:
                data:
                  id: 14916
                  type: manga
                  links:
                    self: https://kitsu.io/api/edge/manga/14916
                  attributes:
                    createdAt: 2013-12-18T13:59:39.232Z
                    updatedAt: 2017-12-24T00:00:19.819Z
                    slug: shingeki-no-kyojin
                    synopsis: Several hundred years ago...
                    coverImageTopOffset: 112
                    titles:
                      en: Attack on Titan
                      en_jp: Shingeki no Kyojin
                      ja_jp: 進撃の巨人
                    canonicalTitle: Attack on Titan
                    abbreviatedTitles: 
                    averageRating: 82.47
                    ratingFrequencies:
                      2: 39
                      3: 0
                      4: 18
                      5: 0
                      6: 27
                      7: 4
                      8: 126
                      9: 0
                      10: 85
                      11: 4
                      12: 192
                      13: 5
                      14: 635
                      15: 3
                      16: 528
                      17: 12
                      18: 534
                      19: 2
                      20: 1379
                    userCount: 7137
                    favoritesCount: 758
                    startDate: 2009-09-09
                    endDate: 
                    popularityRank: 2
                    ratingRank: 138
                    ageRating: R
                    ageRatingGuide: Horror
                    subtype: manga
                    status: finished
                    tba: ''
                    posterImage:
                      tiny: https://media.kitsu.io/manga/poster_images/14916/tiny.jpg?1491099787
                      small: https://media.kitsu.io/manga/poster_images/14916/small.jpg?1491099787
                      medium: https://media.kitsu.io/manga/poster_images/14916/medium.jpg?1491099787
                      large: https://media.kitsu.io/manga/poster_images/14916/large.jpg?1491099787
                      original: https://media.kitsu.io/manga/poster_images/14916/original.jpg?1491099787
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    coverImage:
                      tiny: https://media.kitsu.io/manga/cover_images/14916/tiny.jpg?1471880895
                      small: https://media.kitsu.io/manga/cover_images/14916/small.jpg?1471880895
                      large: https://media.kitsu.io/manga/cover_images/14916/large.jpg?1471880895
                      original: https://media.kitsu.io/manga/cover_images/14916/original.jpg?1471880895
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    chapterCount: 
                    volumeCount: 0
                    serialization: Bessatsu Shounen Magazine
                    mangaType: manga
                  relationships:
                    genres:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/genres
                        related: https://kitsu.io/api/edge/manga/1/genres
                    categories:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/categories
                        related: https://kitsu.io/api/edge/manga/1/categories
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/castings
                        related: https://kitsu.io/api/edge/manga/1/castings
                    installments:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/installments
                        related: https://kitsu.io/api/edge/manga/1/installments
                    mappings:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/mappings
                        related: https://kitsu.io/api/edge/manga/1/mappings
                    reviews:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/reviews
                        related: https://kitsu.io/api/edge/manga/1/reviews
                    mediaRelationships:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/media-relationships
                        related: https://kitsu.io/api/edge/manga/1/media-relationships
                    chapters:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/chapters
                        related: https://kitsu.io/api/edge/manga/1/chapters
                    mangaCharacters:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/manga-characters
                        related: https://kitsu.io/api/edge/manga/1/manga-characters
                    mangaStaff:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/manga-staff
                        related: https://kitsu.io/api/edge/manga/1/manga-staff
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /chapters:
    get:
      tags:
      - Manga
      summary: Chapters_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mangaId` | `2`, `8,987`

        `number` |
      operationId: Chapters_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 403830
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Chapters_FetchCollectionresponse'
              example:
                data:
                - id: 403830
                  type: chapters
                  links:
                    self: https://kitsu.io/api/edge/chapters/403830
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    titles:
                      en_jp: 'Mission 01: Magical Five'
                    canonicalTitle: 'Mission 01: Magical Five'
                    volumeNumber: 1
                    number: 1
                    synopsis: ''
                    published: 2015-06-25
                    length: 80
                    thumbnail:
                      original: https://media.kitsu.io/chapters/thumbnails/403830/original.jpg?1501195665
                      meta:
                        dimensions: {}
                  relationships:
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/chapters/403830/relationships/manga
                        related: https://kitsu.io/api/edge/chapters/403830/manga
                meta:
                  count: 652186
                links:
                  first: https://kitsu.io/api/edge/chapters?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/chapters?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/chapters?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/chapters?page%5Blimit%5D=10&page%5Boffset%5D=652176
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /chapters/{id}:
    get:
      tags:
      - Manga
      summary: Chapters_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mangaId` | `2`, `8,987`

        `number` |
      operationId: Chapters_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 403830
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Chapters_FetchResourceresponse'
              example:
                data:
                  id: 403830
                  type: chapters
                  links:
                    self: https://kitsu.io/api/edge/chapters/403830
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    titles:
                      en_jp: 'Mission 01: Magical Five'
                    canonicalTitle: 'Mission 01: Magical Five'
                    volumeNumber: 1
                    number: 1
                    synopsis: ''
                    published: 2015-06-25
                    length: 80
                    thumbnail:
                      original: https://media.kitsu.io/chapters/thumbnails/403830/original.jpg?1501195665
                      meta:
                        dimensions: {}
                  relationships:
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/chapters/403830/relationships/manga
                        related: https://kitsu.io/api/edge/chapters/403830/manga
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /trending/manga:
    get:
      tags:
      - Manga
      summary: Trending Manga_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: TrendingManga_FetchCollection
      parameters: []
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TrendingManga_FetchCollectionresponse'
              example:
                data:
                - id: 14916
                  type: manga
                  links:
                    self: https://kitsu.io/api/edge/manga/14916
                  attributes:
                    createdAt: 2013-12-18T13:59:39.232Z
                    updatedAt: 2017-12-24T00:00:19.819Z
                    slug: shingeki-no-kyojin
                    synopsis: Several hundred years ago...
                    coverImageTopOffset: 112
                    titles:
                      en: Attack on Titan
                      en_jp: Shingeki no Kyojin
                      ja_jp: 進撃の巨人
                    canonicalTitle: Attack on Titan
                    abbreviatedTitles: 
                    averageRating: 82.47
                    ratingFrequencies:
                      2: 39
                      3: 0
                      4: 18
                      5: 0
                      6: 27
                      7: 4
                      8: 126
                      9: 0
                      10: 85
                      11: 4
                      12: 192
                      13: 5
                      14: 635
                      15: 3
                      16: 528
                      17: 12
                      18: 534
                      19: 2
                      20: 1379
                    userCount: 7137
                    favoritesCount: 758
                    startDate: 2009-09-09
                    endDate: 
                    popularityRank: 2
                    ratingRank: 138
                    ageRating: R
                    ageRatingGuide: Horror
                    subtype: manga
                    status: finished
                    tba: ''
                    posterImage:
                      tiny: https://media.kitsu.io/manga/poster_images/14916/tiny.jpg?1491099787
                      small: https://media.kitsu.io/manga/poster_images/14916/small.jpg?1491099787
                      medium: https://media.kitsu.io/manga/poster_images/14916/medium.jpg?1491099787
                      large: https://media.kitsu.io/manga/poster_images/14916/large.jpg?1491099787
                      original: https://media.kitsu.io/manga/poster_images/14916/original.jpg?1491099787
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    coverImage:
                      tiny: https://media.kitsu.io/manga/cover_images/14916/tiny.jpg?1471880895
                      small: https://media.kitsu.io/manga/cover_images/14916/small.jpg?1471880895
                      large: https://media.kitsu.io/manga/cover_images/14916/large.jpg?1471880895
                      original: https://media.kitsu.io/manga/cover_images/14916/original.jpg?1471880895
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    chapterCount: 
                    volumeCount: 0
                    serialization: Bessatsu Shounen Magazine
                    mangaType: manga
                  relationships:
                    genres:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/genres
                        related: https://kitsu.io/api/edge/manga/1/genres
                    categories:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/categories
                        related: https://kitsu.io/api/edge/manga/1/categories
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/castings
                        related: https://kitsu.io/api/edge/manga/1/castings
                    installments:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/installments
                        related: https://kitsu.io/api/edge/manga/1/installments
                    mappings:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/mappings
                        related: https://kitsu.io/api/edge/manga/1/mappings
                    reviews:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/reviews
                        related: https://kitsu.io/api/edge/manga/1/reviews
                    mediaRelationships:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/media-relationships
                        related: https://kitsu.io/api/edge/manga/1/media-relationships
                    chapters:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/chapters
                        related: https://kitsu.io/api/edge/manga/1/chapters
                    mangaCharacters:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/manga-characters
                        related: https://kitsu.io/api/edge/manga/1/manga-characters
                    mangaStaff:
                      links:
                        self: https://kitsu.io/api/edge/manga/1/relationships/manga-staff
                        related: https://kitsu.io/api/edge/manga/1/manga-staff
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /categories:
    get:
      tags:
      - Categories
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `parentId` | `1`

        `slug` | |

        `nsfw` | `true`, `false`


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: GetFetchCollection1
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 10
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse2'
              example:
                data:
                - id: 10
                  type: categories
                  links:
                    self: https://kitsu.io/api/edge/categories/10
                  attributes:
                    createdAt: 2017-05-31T06:38:31.311Z
                    updatedAt: 2017-05-31T06:39:36.873Z
                    title: Elf
                    description: The origin of Elves (Norse; álfar(elves), álfr(elf)) can be found in ancient Norse mythology...
                    totalMediaCount: 40
                    slug: elf
                    nsfw: false
                    childCount: 0
                    image:
                      tiny: https://media.kitsu.io/categories/images/10/tiny.jpg?1496212711
                      small: https://media.kitsu.io/categories/images/10/small.jpg?1496212711
                      medium: https://media.kitsu.io/categories/images/10/medium.jpg?1496212711
                      large: https://media.kitsu.io/categories/images/10/large.jpg?1496212711
                      original: https://media.kitsu.io/categories/images/10/original.jpg?1496212711
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                  relationships:
                    parent:
                      links:
                        self: https://kitsu.io/api/edge/categories/10/relationships/parent
                        related: https://kitsu.io/api/edge/categories/10/parent
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/categories/10/relationships/anime
                        related: https://kitsu.io/api/edge/categories/10/anime
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/categories/10/relationships/drama
                        related: https://kitsu.io/api/edge/categories/10/drama
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/categories/10/relationships/manga
                        related: https://kitsu.io/api/edge/categories/10/manga
                meta:
                  count: 229
                links:
                  first: https://kitsu.io/api/edge/categories?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/categories?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/categories?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/categories?page%5Blimit%5D=10&page%5Boffset%5D=219
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /categories/{id}:
    get:
      tags:
      - Categories
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `parentId` | `1`

        `slug` | |

        `nsfw` | `true`, `false`


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: GetFetchResource1
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 10
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse2'
              example:
                data:
                  id: 10
                  type: categories
                  links:
                    self: https://kitsu.io/api/edge/categories/10
                  attributes:
                    createdAt: 2017-05-31T06:38:31.311Z
                    updatedAt: 2017-05-31T06:39:36.873Z
                    title: Elf
                    description: The origin of Elves (Norse; álfar(elves), álfr(elf)) can be found in ancient Norse mythology...
                    totalMediaCount: 40
                    slug: elf
                    nsfw: false
                    childCount: 0
                    image:
                      tiny: https://media.kitsu.io/categories/images/10/tiny.jpg?1496212711
                      small: https://media.kitsu.io/categories/images/10/small.jpg?1496212711
                      medium: https://media.kitsu.io/categories/images/10/medium.jpg?1496212711
                      large: https://media.kitsu.io/categories/images/10/large.jpg?1496212711
                      original: https://media.kitsu.io/categories/images/10/original.jpg?1496212711
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                  relationships:
                    parent:
                      links:
                        self: https://kitsu.io/api/edge/categories/10/relationships/parent
                        related: https://kitsu.io/api/edge/categories/10/parent
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/categories/10/relationships/anime
                        related: https://kitsu.io/api/edge/categories/10/anime
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/categories/10/relationships/drama
                        related: https://kitsu.io/api/edge/categories/10/drama
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/categories/10/relationships/manga
                        related: https://kitsu.io/api/edge/categories/10/manga
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /category-favorites:
    get:
      tags:
      - Categories
      summary: Category Favorites_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `categoryId` |
      operationId: CategoryFavorites_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 2
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CategoryFavorites_FetchCollectionresponse'
              example:
                data:
                - id: 2
                  type: categoryFavorites
                  links:
                    self: https://kitsu.io/api/edge/category-favorites/2
                  attributes:
                    createdAt: 2017-05-31T13:32:16.323Z
                    updatedAt: 2017-05-31T13:32:16.323Z
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/category-favorites/2/relationships/user
                        related: https://kitsu.io/api/edge/category-favorites/2/user
                    category:
                      links:
                        self: https://kitsu.io/api/edge/category-favorites/2/relationships/category
                        related: https://kitsu.io/api/edge/category-favorites/2/category
                meta:
                  count: 3018
                links:
                  first: https://kitsu.io/api/edge/category-favorites?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/category-favorites?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/category-favorites?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/category-favorites?page%5Blimit%5D=10&page%5Boffset%5D=3008
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Categories
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `categoryId` |
      operationId: CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 2
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /category-favorites/{id}:
    get:
      tags:
      - Categories
      summary: Category Favorites_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `categoryId` |
      operationId: CategoryFavorites_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 2
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CategoryFavorites_FetchResourceresponse'
              example:
                data:
                  id: 2
                  type: categoryFavorites
                  links:
                    self: https://kitsu.io/api/edge/category-favorites/2
                  attributes:
                    createdAt: 2017-05-31T13:32:16.323Z
                    updatedAt: 2017-05-31T13:32:16.323Z
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/category-favorites/2/relationships/user
                        related: https://kitsu.io/api/edge/category-favorites/2/user
                    category:
                      links:
                        self: https://kitsu.io/api/edge/category-favorites/2/relationships/category
                        related: https://kitsu.io/api/edge/category-favorites/2/category
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Categories
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `categoryId` |
      operationId: UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 2
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Categories
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `categoryId` |
      operationId: DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 2
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-relationships:
    get:
      tags:
      - Media Relations
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `role` | | Values of the `role` attribute

        `sourceType` |

        `sourceId` |

        `destinationId` |
      operationId: GetFetchCollection12
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse3'
              example:
                data:
                - id: 1
                  type: mediaRelationships
                  links:
                    self: https://kitsu.io/api/edge/media-relationships/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: prequel
                  relationships:
                    source:
                      links:
                        self: https://kitsu.io/api/edge/media-relationships/1/relationships/source
                        related: https://kitsu.io/api/edge/media-relationships/1/source
                    destination:
                      links:
                        self: https://kitsu.io/api/edge/media-relationships/1/relationships/destination
                        related: https://kitsu.io/api/edge/media-relationships/1/destination
                meta:
                  count: 19573
                links:
                  first: https://kitsu.io/api/edge/media-relationships?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/media-relationships?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/media-relationships?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/media-relationships?page%5Blimit%5D=10&page%5Boffset%5D=19563
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-relationships/{id}:
    get:
      tags:
      - Media Relations
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `role` | | Values of the `role` attribute

        `sourceType` |

        `sourceId` |

        `destinationId` |
      operationId: GetFetchResource12
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse3'
              example:
                data:
                  id: 1
                  type: mediaRelationships
                  links:
                    self: https://kitsu.io/api/edge/media-relationships/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: prequel
                  relationships:
                    source:
                      links:
                        self: https://kitsu.io/api/edge/media-relationships/1/relationships/source
                        related: https://kitsu.io/api/edge/media-relationships/1/source
                    destination:
                      links:
                        self: https://kitsu.io/api/edge/media-relationships/1/relationships/destination
                        related: https://kitsu.io/api/edge/media-relationships/1/destination
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /mappings:
    get:
      tags:
      - Media Relations
      summary: Mappings_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `externalSite` | `myanimelist/anime`

        `externalId` |
      operationId: Mappings_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Mappings_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: mappings
                  links:
                    self: https://kitsu.io/api/edge/mappings/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    externalSite: myanimelist/anime
                    externalId: 31608
                  relationships:
                    item:
                      links:
                        self: https://kitsu.io/api/edge/mappings/1/relationships/item
                        related: https://kitsu.io/api/edge/mappings/1/item
                meta:
                  count: 67654
                links:
                  first: https://kitsu.io/api/edge/mappings?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/mappings?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/mappings?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/mappings?page%5Blimit%5D=10&page%5Boffset%5D=67644
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /mappings/{id}:
    get:
      tags:
      - Media Relations
      summary: Mappings_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `externalSite` | `myanimelist/anime`

        `externalId` |
      operationId: Mappings_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Mappings_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: mappings
                  links:
                    self: https://kitsu.io/api/edge/mappings/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    externalSite: myanimelist/anime
                    externalId: 31608
                  relationships:
                    item:
                      links:
                        self: https://kitsu.io/api/edge/mappings/1/relationships/item
                        related: https://kitsu.io/api/edge/mappings/1/item
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /franchises:
    get:
      tags:
      - Media Relations
      summary: Franchises_Fetch Collection
      description: >-
        **Status**: Deprecated. Use `media-relationships` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: Franchises_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Franchises_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: franchises
                  links:
                    self: https://kitsu.io/api/edge/franchises/1
                  attributes:
                    createdAt: 2013-07-07T07:44:54.484Z
                    updatedAt: 2013-07-07T07:44:54.484Z
                    titles:
                      en: Darker than Black
                      en_jp: 
                    canonicalTitle: 
                  relationships:
                    installments:
                      links:
                        self: https://kitsu.io/api/edge/franchises/1/relationships/installments
                        related: https://kitsu.io/api/edge/franchises/1/installments
                meta:
                  count: 1332
                links:
                  first: https://kitsu.io/api/edge/franchises?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/franchises?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/franchises?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/franchises?page%5Blimit%5D=10&page%5Boffset%5D=1322
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /franchises/{id}:
    get:
      tags:
      - Media Relations
      summary: Franchises_Fetch Resource
      description: >-
        **Status**: Deprecated. Use `media-relationships` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: Franchises_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Franchises_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: franchises
                  links:
                    self: https://kitsu.io/api/edge/franchises/1
                  attributes:
                    createdAt: 2013-07-07T07:44:54.484Z
                    updatedAt: 2013-07-07T07:44:54.484Z
                    titles:
                      en: Darker than Black
                      en_jp: 
                    canonicalTitle: 
                  relationships:
                    installments:
                      links:
                        self: https://kitsu.io/api/edge/franchises/1/relationships/installments
                        related: https://kitsu.io/api/edge/franchises/1/installments
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /installments:
    get:
      tags:
      - Media Relations
      summary: Installments_Fetch Collection
      description: >-
        **Status**: Deprecated. Use `media-relationships` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`
      operationId: Installments_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installments_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: installments
                  links:
                    self: https://kitsu.io/api/edge/installments/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    tag: 
                    position: 0
                  relationships:
                    franchise:
                      media: {}
                      links:
                        self: https://kitsu.io/api/edge/installments/1/relationships/media
                        related: https://kitsu.io/api/edge/installments/1/media
                meta:
                  count: 5903
                links:
                  first: https://kitsu.io/api/edge/installments?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/installments?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/installments?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/installments?page%5Blimit%5D=10&page%5Boffset%5D=5893
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /installments/{id}:
    get:
      tags:
      - Media Relations
      summary: Installments_Fetch Resource
      description: >-
        **Status**: Deprecated. Use `media-relationships` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`
      operationId: Installments_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Installments_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: installments
                  links:
                    self: https://kitsu.io/api/edge/installments/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    tag: 
                    position: 0
                  relationships:
                    franchise:
                      media: {}
                      links:
                        self: https://kitsu.io/api/edge/installments/1/relationships/media
                        related: https://kitsu.io/api/edge/installments/1/media
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-follows:
    get:
      tags:
      - Media Follows
      summary: Fetch Collection
      description: ''
      operationId: GetFetchCollection123
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse4'
              example:
                data:
                - createdAt: 2017-07-27T22:21:26.824Z
                  updatedAt: 2017-07-27T22:47:45.129Z
                  id: 1
                  type: mediaFollows
                  links:
                    self: '`https://kitsu.io/api/edge/media'
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/media-follows/1/relationships/user
                        related: https://kitsu.io/api/edge/media-follows/1/user
                    media:
                      links:
                        self: https://kitsu.io/api/edge/media-follows/1/relationships/media
                        related: https://kitsu.io/api/edge/media-follows/1/media
                meta:
                  count: 10256
                links:
                  first: https://kitsu.io/api/edge/media-follows?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/media-follows?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/media-follows?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/media-follows?page%5Blimit%5D=10&page%5Boffset%5D=10246
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Media Follows
      summary: Create Resource
      description: ''
      operationId: PostCreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-follows/{id}:
    get:
      tags:
      - Media Follows
      summary: Fetch Resource
      description: ''
      operationId: GetFetchResource123
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse4'
              example:
                data:
                  createdAt: 2017-07-27T22:21:26.824Z
                  updatedAt: 2017-07-27T22:47:45.129Z
                  id: 1
                  type: mediaFollows
                  links:
                    self: '`https://kitsu.io/api/edge/media'
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/media-follows/1/relationships/user
                        related: https://kitsu.io/api/edge/media-follows/1/user
                    media:
                      links:
                        self: https://kitsu.io/api/edge/media-follows/1/relationships/media
                        related: https://kitsu.io/api/edge/media-follows/1/media
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Media Follows
      summary: Update Resource
      description: ''
      operationId: PatchUpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Media Follows
      summary: Delete Resource
      description: ''
      operationId: DeleteResource1
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-attributes:
    get:
      tags:
      - Media Follows
      summary: Media Attributes_Fetch Collection
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: MediaAttributes_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MediaAttributes_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: mediaAttributes
                  links:
                    self: https://kitsu.io/api/edge/media-attributes/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    title: ''
                    highTitle: ''
                    neutralTitle: ''
                    lowTitle: ''
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/media-attributes/1/relationships/anime
                        related: https://kitsu.io/api/edge/media-attributes/1/anime
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/media-attributes/1/relationships/drama
                        related: https://kitsu.io/api/edge/media-attributes/1/drama
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/media-attributes/1/relationships/manga
                        related: https://kitsu.io/api/edge/media-attributes/1/manga
                meta:
                  count: 0
                links:
                  first: https://kitsu.io/api/edge/media-attributes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/media-attributes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/media-attributes?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/media-attributes?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-attributes/{id}:
    get:
      tags:
      - Media Follows
      summary: Media Attributes_Fetch Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: MediaAttributes_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MediaAttributes_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: mediaAttributes
                  links:
                    self: https://kitsu.io/api/edge/media-attributes/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    title: ''
                    highTitle: ''
                    neutralTitle: ''
                    lowTitle: ''
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/media-attributes/1/relationships/anime
                        related: https://kitsu.io/api/edge/media-attributes/1/anime
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/media-attributes/1/relationships/drama
                        related: https://kitsu.io/api/edge/media-attributes/1/drama
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/media-attributes/1/relationships/manga
                        related: https://kitsu.io/api/edge/media-attributes/1/manga
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-attribute-votes:
    get:
      tags:
      - Media Follows
      summary: Media Attribute Votes_Fetch Collection
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `userId` | `42603`, `2,7`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`
      operationId: MediaAttributeVotes_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MediaAttributeVotes_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: mediaAttributeVotes
                  links:
                    self: https://kitsu.io/api/edge/media-attribute-votes/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    vote: 1
                  relationships:
                    animeMediaAttribute:
                      links:
                        self: https://kitsu.io/api/edge/media-attribute-votes/1/relationships/anime-media-attribute
                        related: https://kitsu.io/api/edge/media-attribute-votes/1/anime-media-attribute
                    mangaMediaAttribute:
                      links:
                        self: https://kitsu.io/api/edge/media-attribute-votes/1/relationships/manga-media-attribute
                        related: https://kitsu.io/api/edge/media-attribute-votes/1/manga-media-attribute
                    dramasMediaAttribute:
                      links:
                        self: https://kitsu.io/api/edge/media-attribute-votes/1/relationships/dramas-media-attribute
                        related: https://kitsu.io/api/edge/media-attribute-votes/1/dramas-media-attribute
                    user:
                      links:
                        self: https://kitsu.io/api/edge/media-attribute-votes/1/relationships/user
                        related: https://kitsu.io/api/edge/media-attribute-votes/1/user
                meta:
                  count: 0
                links:
                  first: https://kitsu.io/api/edge/media-attribute-votes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/media-attribute-votes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/media-attribute-votes?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/media-attribute-votes?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Media Follows
      summary: Media Attribute Votes_Create Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `userId` | `42603`, `2,7`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`
      operationId: MediaAttributeVotes_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-attribute-votes/{id}:
    get:
      tags:
      - Media Follows
      summary: Media Attribute Votes_Fetch Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `userId` | `42603`, `2,7`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`
      operationId: MediaAttributeVotes_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MediaAttributeVotes_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: mediaAttributeVotes
                  links:
                    self: https://kitsu.io/api/edge/media-attribute-votes/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    vote: 1
                  relationships:
                    animeMediaAttribute:
                      links:
                        self: https://kitsu.io/api/edge/media-attribute-votes/1/relationships/anime-media-attribute
                        related: https://kitsu.io/api/edge/media-attribute-votes/1/anime-media-attribute
                    mangaMediaAttribute:
                      links:
                        self: https://kitsu.io/api/edge/media-attribute-votes/1/relationships/manga-media-attribute
                        related: https://kitsu.io/api/edge/media-attribute-votes/1/manga-media-attribute
                    dramasMediaAttribute:
                      links:
                        self: https://kitsu.io/api/edge/media-attribute-votes/1/relationships/dramas-media-attribute
                        related: https://kitsu.io/api/edge/media-attribute-votes/1/dramas-media-attribute
                    user:
                      links:
                        self: https://kitsu.io/api/edge/media-attribute-votes/1/relationships/user
                        related: https://kitsu.io/api/edge/media-attribute-votes/1/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Media Follows
      summary: Media Attribute Votes_Update Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `userId` | `42603`, `2,7`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`
      operationId: MediaAttributeVotes_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Media Follows
      summary: Media Attribute Votes_Delete Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `userId` | `42603`, `2,7`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`
      operationId: MediaAttributeVotes_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /streamers:
    get:
      tags:
      - Streamers
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: GetFetchCollection1234
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse5'
              example:
                data:
                - id: 1
                  type: streamers
                  links:
                    self: https://kitsu.io/api/edge/streamers/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    siteName: Hulu
                    streamingLinksCount: 760
                    logo: 
                  relationships:
                    streamingLinks:
                      links:
                        self: https://kitsu.io/api/edge/streamers/1/relationships/streaming-links
                        related: https://kitsu.io/api/edge/streamers/1/streaming-links
                    videos:
                      links:
                        self: https://kitsu.io/api/edge/streamers/1/relationships/videos
                        related: https://kitsu.io/api/edge/streamers/1/videos
                meta:
                  count: 6
                links:
                  first: https://kitsu.io/api/edge/streamers?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/streamers?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/streamers?page%5Blimit%5D=10&page%5Boffset%5D=0
                  last: https://kitsu.io/api/edge/streamers?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /streamers/{id}:
    get:
      tags:
      - Streamers
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: GetFetchResource1234
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse5'
              example:
                data:
                  id: 1
                  type: streamers
                  links:
                    self: https://kitsu.io/api/edge/streamers/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    siteName: Hulu
                    streamingLinksCount: 760
                    logo: 
                  relationships:
                    streamingLinks:
                      links:
                        self: https://kitsu.io/api/edge/streamers/1/relationships/streaming-links
                        related: https://kitsu.io/api/edge/streamers/1/streaming-links
                    videos:
                      links:
                        self: https://kitsu.io/api/edge/streamers/1/relationships/videos
                        related: https://kitsu.io/api/edge/streamers/1/videos
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /streaming-links:
    get:
      tags:
      - Streamers
      summary: Streaming Links_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: StreamingLinks_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StreamingLinks_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: streamingLinks
                  links:
                    self: https://kitsu.io/api/edge/streaming-links/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    url: http://www.hulu.com/hacklegend-of-the-twilight
                    subs:
                    - en
                    dubs:
                    - ja
                  relationships:
                    streamer:
                      links:
                        self: https://kitsu.io/api/edge/streaming-links/1/relationships/streamer
                        related: https://kitsu.io/api/edge/streaming-links/1/streamer
                    media:
                      links:
                        self: https://kitsu.io/api/edge/streaming-links/1/relationships/media
                        related: https://kitsu.io/api/edge/streaming-links/1/media
                meta:
                  count: 2076
                links:
                  first: https://kitsu.io/api/edge/streaming-links?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/streaming-links?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/streaming-links?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/streaming-links?page%5Blimit%5D=10&page%5Boffset%5D=2066
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /streaming-links/{id}:
    get:
      tags:
      - Streamers
      summary: Streaming Links_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: StreamingLinks_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StreamingLinks_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: streamingLinks
                  links:
                    self: https://kitsu.io/api/edge/streaming-links/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    url: http://www.hulu.com/hacklegend-of-the-twilight
                    subs:
                    - en
                    dubs:
                    - ja
                  relationships:
                    streamer:
                      links:
                        self: https://kitsu.io/api/edge/streaming-links/1/relationships/streamer
                        related: https://kitsu.io/api/edge/streaming-links/1/streamer
                    media:
                      links:
                        self: https://kitsu.io/api/edge/streaming-links/1/relationships/media
                        related: https://kitsu.io/api/edge/streaming-links/1/media
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /blocks:
    get:
      tags:
      - Users
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `user` |
      operationId: GetFetchCollection12345
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse6'
              example:
                data:
                - id: 1
                  type: blocks
                  links:
                    self: https://kitsu.io/api/edge/blocks/1
                  attributes:
                    createdAt: 2017-09-23T00:00:37.565Z
                    updatedAt: 2017-09-23T00:00:37.565Z
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/blocks/1/relationships/user
                        related: https://kitsu.io/api/edge/blocks/1/user
                    blocked:
                      links:
                        self: https://kitsu.io/api/edge/blocks/1/relationships/blocked
                        related: https://kitsu.io/api/edge/blocks/1/blocked
                meta:
                  count: 1
                links:
                  first: https://kitsu.io/api/edge/blocks?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/blocks?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/blocks?page%5Blimit%5D=10&page%5Boffset%5D=1
                  last: https://kitsu.io/api/edge/blocks?page%5Blimit%5D=10&page%5Boffset%5D=1
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Users
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `user` |
      operationId: PostCreateResource1
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /blocks/{id}:
    get:
      tags:
      - Users
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `user` |
      operationId: GetFetchResource12345
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse6'
              example:
                data:
                  id: 1
                  type: blocks
                  links:
                    self: https://kitsu.io/api/edge/blocks/1
                  attributes:
                    createdAt: 2017-09-23T00:00:37.565Z
                    updatedAt: 2017-09-23T00:00:37.565Z
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/blocks/1/relationships/user
                        related: https://kitsu.io/api/edge/blocks/1/user
                    blocked:
                      links:
                        self: https://kitsu.io/api/edge/blocks/1/relationships/blocked
                        related: https://kitsu.io/api/edge/blocks/1/blocked
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Users
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `user` |
      operationId: PatchUpdateResource1
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `user` |
      operationId: DeleteResource12
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /favorites:
    get:
      tags:
      - Users
      summary: Favorites_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `itemType` | `Media`, `Character`, `Person`

        `itemId` |
      operationId: Favorites_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Favorites_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: favorites
                  links:
                    self: https://kitsu.io/api/edge/favorites/1
                  attributes:
                    createdAt: 2013-09-06T17:25:17.578Z
                    updatedAt: 2017-02-05T14:15:58.435Z
                    favRank: 10
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/favorites/1/relationships/user
                        related: https://kitsu.io/api/edge/favorites/1/user
                    item:
                      links:
                        self: https://kitsu.io/api/edge/favorites/1/relationships/item
                        related: https://kitsu.io/api/edge/favorites/1/item
                meta:
                  count: 493326
                links:
                  first: https://kitsu.io/api/edge/favorites?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/favorites?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/favorites?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/favorites?page%5Blimit%5D=10&page%5Boffset%5D=493316
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Users
      summary: Favorites_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `itemType` | `Media`, `Character`, `Person`

        `itemId` |
      operationId: Favorites_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /favorites/{id}:
    get:
      tags:
      - Users
      summary: Favorites_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `itemType` | `Media`, `Character`, `Person`

        `itemId` |
      operationId: Favorites_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Favorites_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: favorites
                  links:
                    self: https://kitsu.io/api/edge/favorites/1
                  attributes:
                    createdAt: 2013-09-06T17:25:17.578Z
                    updatedAt: 2017-02-05T14:15:58.435Z
                    favRank: 10
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/favorites/1/relationships/user
                        related: https://kitsu.io/api/edge/favorites/1/user
                    item:
                      links:
                        self: https://kitsu.io/api/edge/favorites/1/relationships/item
                        related: https://kitsu.io/api/edge/favorites/1/item
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Users
      summary: Favorites_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `itemType` | `Media`, `Character`, `Person`

        `itemId` |
      operationId: Favorites_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: Favorites_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `itemType` | `Media`, `Character`, `Person`

        `itemId` |
      operationId: Favorites_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /follows:
    get:
      tags:
      - Users
      summary: Follows_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `follower` |

        `followed` |
      operationId: Follows_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 3
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Follows_FetchCollectionresponse'
              example:
                data:
                - id: 3
                  type: follows
                  links:
                    self: https://kitsu.io/api/edge/follows/3
                  attributes:
                    createdAt: 2013-05-05T18:10:52.800Z
                    updatedAt: 2013-05-05T18:10:52.800Z
                  relationships:
                    follower:
                      links:
                        self: https://kitsu.io/api/edge/follows/3/relationships/follower
                        related: https://kitsu.io/api/edge/follows/3/follower
                    followed:
                      links:
                        self: https://kitsu.io/api/edge/follows/3/relationships/followed
                        related: https://kitsu.io/api/edge/follows/3/followed
                meta:
                  count: 392871
                links:
                  first: https://kitsu.io/api/edge/follows?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/follows?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/follows?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/follows?page%5Blimit%5D=10&page%5Boffset%5D=392861
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Users
      summary: Follows_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `follower` |

        `followed` |
      operationId: Follows_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 3
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /follows/{id}:
    get:
      tags:
      - Users
      summary: Follows_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `follower` |

        `followed` |
      operationId: Follows_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 3
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Follows_FetchResourceresponse'
              example:
                data:
                  id: 3
                  type: follows
                  links:
                    self: https://kitsu.io/api/edge/follows/3
                  attributes:
                    createdAt: 2013-05-05T18:10:52.800Z
                    updatedAt: 2013-05-05T18:10:52.800Z
                  relationships:
                    follower:
                      links:
                        self: https://kitsu.io/api/edge/follows/3/relationships/follower
                        related: https://kitsu.io/api/edge/follows/3/follower
                    followed:
                      links:
                        self: https://kitsu.io/api/edge/follows/3/relationships/followed
                        related: https://kitsu.io/api/edge/follows/3/followed
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Users
      summary: Follows_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `follower` |

        `followed` |
      operationId: Follows_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 3
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: Follows_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `follower` |

        `followed` |
      operationId: Follows_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 3
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /linked-accounts:
    get:
      tags:
      - Users
      summary: Linked Accounts_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: LinkedAccounts_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1911
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LinkedAccounts_FetchCollectionresponse'
              example:
                data:
                - id: 1911
                  type: linkedAccounts
                  links:
                    self: https://kitsu.io/api/edge/linked-accounts/1911
                  attributes:
                    createdAt: 2017-08-22T20:36:46.580Z
                    updatedAt: 2017-08-22T20:36:46.580Z
                    kind: my-anime-list
                    externalUserId: synthtech
                    token:
                      resource_owner_id: 29629
                      scopes:
                      - public
                      expires_in_seconds: 2592000
                      application:
                        uid: ''
                      created_at: 1508818017
                    shareTo: false
                    shareFrom: false
                    syncTo: true
                    disabledReason: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/linked-accounts/1911/relationships/user
                        related: https://kitsu.io/api/edge/linked-accounts/1911/user
                    libraryEntryLogs:
                      links:
                        self: https://kitsu.io/api/edge/linked-accounts/1911/relationships/library-entry-logs
                        related: https://kitsu.io/api/edge/linked-accounts/1911/library-entry-logs
                meta:
                  count: 1
                links:
                  first: https://kitsu.io/api/edge/follows?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/follows?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/follows?page%5Blimit%5D=10&page%5Boffset%5D=1
                  last: https://kitsu.io/api/edge/follows?page%5Blimit%5D=10&page%5Boffset%5D=1
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Users
      summary: Linked Accounts_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: LinkedAccounts_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1911
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /linked-accounts/{id}:
    get:
      tags:
      - Users
      summary: Linked Accounts_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: LinkedAccounts_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1911
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LinkedAccounts_FetchResourceresponse'
              example:
                data:
                  id: 1911
                  type: linkedAccounts
                  links:
                    self: https://kitsu.io/api/edge/linked-accounts/1911
                  attributes:
                    createdAt: 2017-08-22T20:36:46.580Z
                    updatedAt: 2017-08-22T20:36:46.580Z
                    kind: my-anime-list
                    externalUserId: synthtech
                    token:
                      resource_owner_id: 29629
                      scopes:
                      - public
                      expires_in_seconds: 2592000
                      application:
                        uid: ''
                      created_at: 1508818017
                    shareTo: false
                    shareFrom: false
                    syncTo: true
                    disabledReason: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/linked-accounts/1911/relationships/user
                        related: https://kitsu.io/api/edge/linked-accounts/1911/user
                    libraryEntryLogs:
                      links:
                        self: https://kitsu.io/api/edge/linked-accounts/1911/relationships/library-entry-logs
                        related: https://kitsu.io/api/edge/linked-accounts/1911/library-entry-logs
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Users
      summary: Linked Accounts_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: LinkedAccounts_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1911
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: Linked Accounts_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: LinkedAccounts_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1911
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /profile-link-sites:
    get:
      tags:
      - Users
      summary: Profile Link Sites_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: ProfileLinkSites_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProfileLinkSites_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: profileLinkSites
                  links:
                    self: https://kitsu.io/api/edge/profile-link-sites/1
                  attributes:
                    createdAt: 2017-01-11T03:41:35.005Z
                    updatedAt: 2017-02-09T00:03:02.975Z
                    name: Twitter
                meta:
                  count: 29
                links:
                  first: https://kitsu.io/api/edge/profile-link-sites?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/profile-link-sites?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/profile-link-sites?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/profile-link-sites?page%5Blimit%5D=10&page%5Boffset%5D=19
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /profile-link-sites/{id}:
    get:
      tags:
      - Users
      summary: Profile Link Sites_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: ProfileLinkSites_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProfileLinkSites_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: profileLinkSites
                  links:
                    self: https://kitsu.io/api/edge/profile-link-sites/1
                  attributes:
                    createdAt: 2017-01-11T03:41:35.005Z
                    updatedAt: 2017-02-09T00:03:02.975Z
                    name: Twitter
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /profile-links:
    get:
      tags:
      - Users
      summary: Profile Links_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: ProfileLinks_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProfileLinks_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: profileLinks
                  links:
                    self: https://kitsu.io/api/edge/profile-links/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    url: https://github.com/vevix
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/profile-links/1/relationships/user
                        related: https://kitsu.io/api/edge/profile-links/1/user
                    profileLinkSite:
                      links:
                        self: https://kitsu.io/api/edge/profile-links/1/relationships/profile-link-site
                        related: https://kitsu.io/api/edge/profile-links/1/profile-link-site
                meta:
                  count: 14827
                links:
                  first: https://kitsu.io/api/edge/profile-links?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/profile-links?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/profile-links?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/profile-links?page%5Blimit%5D=10&page%5Boffset%5D=14817
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Users
      summary: Profile Links_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: ProfileLinks_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /profile-links/{id}:
    get:
      tags:
      - Users
      summary: Profile Links_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: ProfileLinks_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProfileLinks_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: profileLinks
                  links:
                    self: https://kitsu.io/api/edge/profile-links/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    url: https://github.com/vevix
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/profile-links/1/relationships/user
                        related: https://kitsu.io/api/edge/profile-links/1/user
                    profileLinkSite:
                      links:
                        self: https://kitsu.io/api/edge/profile-links/1/relationships/profile-link-site
                        related: https://kitsu.io/api/edge/profile-links/1/profile-link-site
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Users
      summary: Profile Links_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: ProfileLinks_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: Profile Links_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: ProfileLinks_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /roles:
    get:
      tags:
      - Users
      summary: Roles_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: Roles_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Roles_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: roles
                  links:
                    self: https://kitsu.io/api/edge/roles/1
                  attributes:
                    createdAt: 2016-12-12T14:32:06.707Z
                    updatedAt: 2016-12-12T14:32:06.707Z
                    name: admin
                    resourceId: 
                    resourceType: 
                  relationships:
                    userRoles:
                      links:
                        self: https://kitsu.io/api/edge/roles/1/relationships/user-roles
                        related: https://kitsu.io/api/edge/roles/1/user-roles
                    resource:
                      links:
                        self: https://kitsu.io/api/edge/roles/1/relationships/resource
                        related: https://kitsu.io/api/edge/roles/1/resource
                meta:
                  count: 9
                links:
                  first: https://kitsu.io/api/edge/roles?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/roles?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/roles?page%5Blimit%5D=10&page%5Boffset%5D=0
                  last: https://kitsu.io/api/edge/roles?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Users
      summary: Roles_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: Roles_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /roles/{id}:
    get:
      tags:
      - Users
      summary: Roles_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: Roles_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Roles_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: roles
                  links:
                    self: https://kitsu.io/api/edge/roles/1
                  attributes:
                    createdAt: 2016-12-12T14:32:06.707Z
                    updatedAt: 2016-12-12T14:32:06.707Z
                    name: admin
                    resourceId: 
                    resourceType: 
                  relationships:
                    userRoles:
                      links:
                        self: https://kitsu.io/api/edge/roles/1/relationships/user-roles
                        related: https://kitsu.io/api/edge/roles/1/user-roles
                    resource:
                      links:
                        self: https://kitsu.io/api/edge/roles/1/relationships/resource
                        related: https://kitsu.io/api/edge/roles/1/resource
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Users
      summary: Roles_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: Roles_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: Roles_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: Roles_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /stats:
    get:
      tags:
      - Users
      summary: Stats_Fetch Collection
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: Stats_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 587798
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Stats_FetchCollectionresponse'
              example:
                data:
                - id: 587798
                  type: stats
                  links:
                    self: https://kitsu.io/api/edge/stats/587798
                  attributes:
                    createdAt: 2017-07-28T02:14:07.389Z
                    updatedAt: 2017-10-20T19:07:02.241Z
                    kind: anime-category-breakdown
                    statsData:
                      total: 1500
                      total_media: 343
                      activity:
                      - id: 231341
                        event: updated
                        user_id: 18097
                        anime_id: 41
                        drama_id: 
                        manga_id: 
                        created_at: 2017-06-13T05:12:24.186Z
                        updated_at: 2017-06-13T05:12:24.186Z
                        changed_data:
                          status:
                          - planned
                          - current
                          started_at:
                          - null
                          - 2017-06-13T05:12:24.169Z
                          updated_at:
                          - 2017-06-01T19:34:37.663Z
                          - 2017-06-13T05:12:24.170Z
                        library_entry_id: 17413724
                      all_categories:
                        war: 13
                        asia: 106
                        cops: 10
                        idol: 4
                        mars: 2
                        navy: 3
                        past: 11
                        alien: 21
                        angel: 2
                        angst: 32
                        china: 1
                        crime: 10
                        deity: 6
                        demon: 6
                      all_time:
                        total_time: 144734
                        total_media: 273
                        total_progress: 5728
                      all_years:
                        2004: 1
                        2013: 1
                        2016: 2
                        2017: 8
                        2018: 1
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/stats/587798/relationships/user
                        related: https://kitsu.io/api/edge/stats/587798/user
                meta:
                  count: 570652
                links:
                  first: https://kitsu.io/api/edge/stats?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/stats?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/stats?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/stats?page%5Blimit%5D=10&page%5Boffset%5D=570642
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /stats/{id}:
    get:
      tags:
      - Users
      summary: Stats_Fetch Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: Stats_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 587798
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Stats_FetchResourceresponse'
              example:
                data:
                  id: 587798
                  type: stats
                  links:
                    self: https://kitsu.io/api/edge/stats/587798
                  attributes:
                    createdAt: 2017-07-28T02:14:07.389Z
                    updatedAt: 2017-10-20T19:07:02.241Z
                    kind: anime-category-breakdown
                    statsData:
                      total: 1500
                      total_media: 343
                      activity:
                      - id: 231341
                        event: updated
                        user_id: 18097
                        anime_id: 41
                        drama_id: 
                        manga_id: 
                        created_at: 2017-06-13T05:12:24.186Z
                        updated_at: 2017-06-13T05:12:24.186Z
                        changed_data:
                          status:
                          - planned
                          - current
                          started_at:
                          - null
                          - 2017-06-13T05:12:24.169Z
                          updated_at:
                          - 2017-06-01T19:34:37.663Z
                          - 2017-06-13T05:12:24.170Z
                        library_entry_id: 17413724
                      all_categories:
                        war: 13
                        asia: 106
                        cops: 10
                        idol: 4
                        mars: 2
                        navy: 3
                        past: 11
                        alien: 21
                        angel: 2
                        angst: 32
                        china: 1
                        crime: 10
                        deity: 6
                        demon: 6
                      all_time:
                        total_time: 144734
                        total_media: 273
                        total_progress: 5728
                      all_years:
                        2004: 1
                        2013: 1
                        2016: 2
                        2017: 8
                        2018: 1
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/stats/587798/relationships/user
                        related: https://kitsu.io/api/edge/stats/587798/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: Stats_Delete Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: Stats_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 587798
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /user-roles:
    get:
      tags:
      - Users
      summary: User Roles_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: UserRoles_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserRoles_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: userRoles
                  links:
                    self: https://kitsu.io/api/edge/user-roles/1
                  attributes:
                    createdAt: 2016-12-12T14:32:06.707Z
                    updatedAt: 2016-12-12T14:32:06.707Z
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/user-roles/1/relationships/user
                        related: https://kitsu.io/api/edge/user-roles/1/user
                    role:
                      links:
                        self: https://kitsu.io/api/edge/user-roles/1/relationships/role
                        related: https://kitsu.io/api/edge/user-roles/1/role
                meta:
                  count: 115
                links:
                  first: https://kitsu.io/api/edge/user-roles?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/user-roles?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/user-roles?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/user-roles?page%5Blimit%5D=10&page%5Boffset%5D=105
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Users
      summary: User Roles_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: UserRoles_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /user-roles/{id}:
    get:
      tags:
      - Users
      summary: User Roles_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: UserRoles_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserRoles_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: userRoles
                  links:
                    self: https://kitsu.io/api/edge/user-roles/1
                  attributes:
                    createdAt: 2016-12-12T14:32:06.707Z
                    updatedAt: 2016-12-12T14:32:06.707Z
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/user-roles/1/relationships/user
                        related: https://kitsu.io/api/edge/user-roles/1/user
                    role:
                      links:
                        self: https://kitsu.io/api/edge/user-roles/1/relationships/role
                        related: https://kitsu.io/api/edge/user-roles/1/role
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: User Roles_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: UserRoles_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /users:
    get:
      tags:
      - Users
      summary: Users_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | Y    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | | Get a user by slug (case insensitive)

        `name` | | Get a user by display name (non-unique)

        `self` | `true` | Get the currently logged in user

        `query` | | Search resource
      operationId: Users_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Users_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: users
                  links:
                    self: https://kitsu.io/api/edge/users/1
                  attributes:
                    createdAt: 2013-02-20T16:21:01.289Z
                    updatedAt: 2017-06-06T20:17:07.447Z
                    name: vikhyat
                    pastNames: []
                    slug: vikhyat
                    about: Co-founder of Hummingbird. Obsessed with Gumi.
                    location: Seattle, WA
                    waifuOrHusbando: Waifu
                    followersCount: 1716
                    followingCount: 2031
                    lifeSpentOnAnime: 45474
                    birthday: 
                    gender: 
                    commentsCount: 0
                    favoritesCount: 4
                    likesGivenCount: 34
                    reviewsCount: 0
                    likesReceivedCount: 7
                    postsCount: 1
                    ratingsCount: 0
                    mediaReactionsCount: 0
                    proExpiresAt: 2015-01-30T16:49:35.173Z
                    title: 
                    profileCompleted: false
                    feedCompleted: true
                    website: http://twitter.com/vikhyatk
                    proTier: pro
                    avatar:
                      tiny: https://media.kitsu.io/users/avatars/1/tiny.jpg?1434087646
                      small: https://media.kitsu.io/users/avatars/1/small.jpg?1434087646
                      medium: https://media.kitsu.io/users/avatars/1/medium.jpg?1434087646
                      large: https://media.kitsu.io/users/avatars/1/large.jpg?1434087646
                      original: https://media.kitsu.io/users/avatars/1/original.jpg?1434087646
                      meta:
                        dimensions:
                          tiny:
                            width: 40
                            height: 40
                          small:
                            width: 64
                            height 64: 0
                          medium:
                            width: 100
                            height: 100
                          large:
                            width: 200
                            height: 200
                    coverImage:
                      tiny: https://media.kitsu.io/users/cover_images/1/small.jpg
                      small: https://media.kitsu.io/users/cover_images/1/small.jpg
                      large: https://media.kitsu.io/users/cover_images/1/small.jpg
                      original: https://media.kitsu.io/users/cover_images/1/original.jpeg
                      meta:
                        dimensions:
                          tiny:
                            width: 840
                            height: 200
                          small:
                            width: 1680
                            height: 400
                          large:
                            width: 3360
                            height: 800
                    email: ''
                    password: 
                    confirmed: true
                    previousEmail: 
                    language: 
                    timeZone: 
                    country: US
                    shareToGlobal: true
                    titleLanguagePreference canonical: canonical
                    sfwFilter: false
                    ratingSystem: advanced
                    theme: light
                    facebookId: 
                    hasPassword: true
                    status: registered
                    subscribedToNewsletter: true
                    aoPro: 
                  relationships:
                    waifu:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/waifu
                        related: https://kitsu.io/api/edge/users/1/waifu
                    pinnedPost:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/pinned-post
                        related: https://kitsu.io/api/edge/users/1/pinned-post
                    followers:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/followers
                        related: https://kitsu.io/api/edge/users/1/followers
                    following:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/following
                        related: https://kitsu.io/api/edge/users/1/following
                    blocks:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/blocks
                        related: https://kitsu.io/api/edge/users/1/blocks
                    linkedAccounts:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/linked-accounts
                        related: https://kitsu.io/api/edge/users/1/linked-accounts
                    profileLinks:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/profile-links
                        related: https://kitsu.io/api/edge/users/1/profile-links
                    userRoles:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/user-roles
                        related: https://kitsu.io/api/edge/users/1/user-roles
                    libraryEntries:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/library-entries
                        related: https://kitsu.io/api/edge/users/1/library-entries
                    favorites:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/favorites
                        related: https://kitsu.io/api/edge/users/1/favorites
                    reviews:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/reviews
                        related: https://kitsu.io/api/edge/users/1/reviews
                    stats:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/stats
                        related: https://kitsu.io/api/edge/users/1/stats
                    notificationSettings:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/notification-settings
                        related: https://kitsu.io/api/edge/users/1/notification-settings
                    oneSignalPlayers:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/one-signal-players
                        related: https://kitsu.io/api/edge/users/1/one-signal-players
                meta:
                  count: 155476
                links:
                  first: https://kitsu.io/api/edge/users?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/users?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/users?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/users?page%5Blimit%5D=10&page%5Boffset%5D=155466
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Users
      summary: Users_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | Y    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | | Get a user by slug (case insensitive)

        `name` | | Get a user by display name (non-unique)

        `self` | `true` | Get the currently logged in user

        `query` | | Search resource
      operationId: Users_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /users/{id}:
    get:
      tags:
      - Users
      summary: Users_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | Y    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | | Get a user by slug (case insensitive)

        `name` | | Get a user by display name (non-unique)

        `self` | `true` | Get the currently logged in user

        `query` | | Search resource
      operationId: Users_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Users_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: users
                  links:
                    self: https://kitsu.io/api/edge/users/1
                  attributes:
                    createdAt: 2013-02-20T16:21:01.289Z
                    updatedAt: 2017-06-06T20:17:07.447Z
                    name: vikhyat
                    pastNames: []
                    slug: vikhyat
                    about: Co-founder of Hummingbird. Obsessed with Gumi.
                    location: Seattle, WA
                    waifuOrHusbando: Waifu
                    followersCount: 1716
                    followingCount: 2031
                    lifeSpentOnAnime: 45474
                    birthday: 
                    gender: 
                    commentsCount: 0
                    favoritesCount: 4
                    likesGivenCount: 34
                    reviewsCount: 0
                    likesReceivedCount: 7
                    postsCount: 1
                    ratingsCount: 0
                    mediaReactionsCount: 0
                    proExpiresAt: 2015-01-30T16:49:35.173Z
                    title: 
                    profileCompleted: false
                    feedCompleted: true
                    website: http://twitter.com/vikhyatk
                    proTier: pro
                    avatar:
                      tiny: https://media.kitsu.io/users/avatars/1/tiny.jpg?1434087646
                      small: https://media.kitsu.io/users/avatars/1/small.jpg?1434087646
                      medium: https://media.kitsu.io/users/avatars/1/medium.jpg?1434087646
                      large: https://media.kitsu.io/users/avatars/1/large.jpg?1434087646
                      original: https://media.kitsu.io/users/avatars/1/original.jpg?1434087646
                      meta:
                        dimensions:
                          tiny:
                            width: 40
                            height: 40
                          small:
                            width: 64
                            height 64: 0
                          medium:
                            width: 100
                            height: 100
                          large:
                            width: 200
                            height: 200
                    coverImage:
                      tiny: https://media.kitsu.io/users/cover_images/1/small.jpg
                      small: https://media.kitsu.io/users/cover_images/1/small.jpg
                      large: https://media.kitsu.io/users/cover_images/1/small.jpg
                      original: https://media.kitsu.io/users/cover_images/1/original.jpeg
                      meta:
                        dimensions:
                          tiny:
                            width: 840
                            height: 200
                          small:
                            width: 1680
                            height: 400
                          large:
                            width: 3360
                            height: 800
                    email: ''
                    password: 
                    confirmed: true
                    previousEmail: 
                    language: 
                    timeZone: 
                    country: US
                    shareToGlobal: true
                    titleLanguagePreference canonical: canonical
                    sfwFilter: false
                    ratingSystem: advanced
                    theme: light
                    facebookId: 
                    hasPassword: true
                    status: registered
                    subscribedToNewsletter: true
                    aoPro: 
                  relationships:
                    waifu:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/waifu
                        related: https://kitsu.io/api/edge/users/1/waifu
                    pinnedPost:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/pinned-post
                        related: https://kitsu.io/api/edge/users/1/pinned-post
                    followers:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/followers
                        related: https://kitsu.io/api/edge/users/1/followers
                    following:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/following
                        related: https://kitsu.io/api/edge/users/1/following
                    blocks:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/blocks
                        related: https://kitsu.io/api/edge/users/1/blocks
                    linkedAccounts:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/linked-accounts
                        related: https://kitsu.io/api/edge/users/1/linked-accounts
                    profileLinks:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/profile-links
                        related: https://kitsu.io/api/edge/users/1/profile-links
                    userRoles:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/user-roles
                        related: https://kitsu.io/api/edge/users/1/user-roles
                    libraryEntries:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/library-entries
                        related: https://kitsu.io/api/edge/users/1/library-entries
                    favorites:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/favorites
                        related: https://kitsu.io/api/edge/users/1/favorites
                    reviews:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/reviews
                        related: https://kitsu.io/api/edge/users/1/reviews
                    stats:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/stats
                        related: https://kitsu.io/api/edge/users/1/stats
                    notificationSettings:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/notification-settings
                        related: https://kitsu.io/api/edge/users/1/notification-settings
                    oneSignalPlayers:
                      links:
                        self: https://kitsu.io/api/edge/users/1/relationships/one-signal-players
                        related: https://kitsu.io/api/edge/users/1/one-signal-players
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Users
      summary: Users_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | Y    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | | Get a user by slug (case insensitive)

        `name` | | Get a user by display name (non-unique)

        `self` | `true` | Get the currently logged in user

        `query` | | Search resource
      operationId: Users_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Users
      summary: Users_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | Y    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | | Get a user by slug (case insensitive)

        `name` | | Get a user by display name (non-unique)

        `self` | `true` | Get the currently logged in user

        `query` | | Search resource
      operationId: Users_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /library-entries:
    get:
      tags:
      - User Libraries
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y*  | N    | N     | N

        Yes           | None      | Y*† | Y    | Y     | Y

        Yes           | Admin     | Y*  | N    | N     | N


        \* Resources with `private: true` are not accessible, unless

        authenticated as the user associated with the library entry


        † Adult content will only be shown if enabled in the authenticated

        user's settings


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `following` |

        `kind` | `anime`, `anime,manga` | Filter by the related media type

        `mangaId` | `2`, `8,987`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `since` | `2017-01-28`, `2013-03-25T00:00:00.000Z` | Returns entries updated since the supplied ISO 8601 date

        `status` | `current`, `onHold` | Values of the `status` attribute

        `title` | | Search resource

        `userId` | `42603`, `2,7`


        **Pagination**


        The maximum page limit is `500` for this resource.
      operationId: GetFetchCollection123456
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1644
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse7'
              example:
                data:
                - id: 1644
                  type: libraryEntries
                  attributes:
                    createdAt: 2013-03-03T23:07:42.713Z
                    updatedAt: 2016-01-15T05:53:48.037Z
                    status: completed
                    progress: 13
                    volumesOwned: 0
                    reconsuming: false
                    reconsumeCount: 0
                    notes: 
                    private: false
                    reactionSkipped: unskipped
                    progressedAt: 2016-01-15T05:53:48.037Z
                    startedAt: 
                    finishedAt: 2016-01-15T05:53:48.037Z
                    rating: 3.5
                    ratingTwenty: 14
                  links:
                    self: https://kitsu.io/api/edge/library-entries/1644
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/user
                        related: https://kitsu.io/api/edge/library-entries/1644/user
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/anime
                        related: https://kitsu.io/api/edge/library-entries/1644/anime
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/manga
                        related: https://kitsu.io/api/edge/library-entries/1644/manga
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/drama
                        related: https://kitsu.io/api/edge/library-entries/1644/drama
                    review:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/review
                        related: https://kitsu.io/api/edge/library-entries/1644/review
                    mediaReaction:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/media-reaction
                        related: https://kitsu.io/api/edge/library-entries/1644/media-reaction
                    media:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/media
                        related: https://kitsu.io/api/edge/library-entries/1644/media
                    unit:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/unit
                        related: https://kitsu.io/api/edge/library-entries/1644/unit
                    nextUnit:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/next-unit
                        related: https://kitsu.io/api/edge/library-entries/1644/next-unit
                meta:
                  statusCounts:
                    current: 102
                    planned: 346
                    completed: 266
                    onHold: 130
                    dropped: 3
                  count: 0
                links:
                  first: https://kitsu.io/api/edge/library-entries?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/library-entries?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/library-entries?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/library-entries?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - User Libraries
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y*  | N    | N     | N

        Yes           | None      | Y*† | Y    | Y     | Y

        Yes           | Admin     | Y*  | N    | N     | N


        \* Resources with `private: true` are not accessible, unless

        authenticated as the user associated with the library entry


        † Adult content will only be shown if enabled in the authenticated

        user's settings


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `following` |

        `kind` | `anime`, `anime,manga` | Filter by the related media type

        `mangaId` | `2`, `8,987`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `since` | `2017-01-28`, `2013-03-25T00:00:00.000Z` | Returns entries updated since the supplied ISO 8601 date

        `status` | `current`, `onHold` | Values of the `status` attribute

        `title` | | Search resource

        `userId` | `42603`, `2,7`


        **Pagination**


        The maximum page limit is `500` for this resource.
      operationId: PostCreateResource12
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1644
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /library-entries/{id}:
    get:
      tags:
      - User Libraries
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y*  | N    | N     | N

        Yes           | None      | Y*† | Y    | Y     | Y

        Yes           | Admin     | Y*  | N    | N     | N


        \* Resources with `private: true` are not accessible, unless

        authenticated as the user associated with the library entry


        † Adult content will only be shown if enabled in the authenticated

        user's settings


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `following` |

        `kind` | `anime`, `anime,manga` | Filter by the related media type

        `mangaId` | `2`, `8,987`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `since` | `2017-01-28`, `2013-03-25T00:00:00.000Z` | Returns entries updated since the supplied ISO 8601 date

        `status` | `current`, `onHold` | Values of the `status` attribute

        `title` | | Search resource

        `userId` | `42603`, `2,7`


        **Pagination**


        The maximum page limit is `500` for this resource.
      operationId: GetFetchResource123456
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1644
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse7'
              example:
                data:
                  id: 1644
                  type: libraryEntries
                  attributes:
                    createdAt: 2013-03-03T23:07:42.713Z
                    updatedAt: 2016-01-15T05:53:48.037Z
                    status: completed
                    progress: 13
                    volumesOwned: 0
                    reconsuming: false
                    reconsumeCount: 0
                    notes: 
                    private: false
                    reactionSkipped: unskipped
                    progressedAt: 2016-01-15T05:53:48.037Z
                    startedAt: 
                    finishedAt: 2016-01-15T05:53:48.037Z
                    rating: 3.5
                    ratingTwenty: 14
                  links:
                    self: https://kitsu.io/api/edge/library-entries/1644
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/user
                        related: https://kitsu.io/api/edge/library-entries/1644/user
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/anime
                        related: https://kitsu.io/api/edge/library-entries/1644/anime
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/manga
                        related: https://kitsu.io/api/edge/library-entries/1644/manga
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/drama
                        related: https://kitsu.io/api/edge/library-entries/1644/drama
                    review:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/review
                        related: https://kitsu.io/api/edge/library-entries/1644/review
                    mediaReaction:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/media-reaction
                        related: https://kitsu.io/api/edge/library-entries/1644/media-reaction
                    media:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/media
                        related: https://kitsu.io/api/edge/library-entries/1644/media
                    unit:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/unit
                        related: https://kitsu.io/api/edge/library-entries/1644/unit
                    nextUnit:
                      links:
                        self: https://kitsu.io/api/edge/library-entries/1644/relationships/next-unit
                        related: https://kitsu.io/api/edge/library-entries/1644/next-unit
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - User Libraries
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y*  | N    | N     | N

        Yes           | None      | Y*† | Y    | Y     | Y

        Yes           | Admin     | Y*  | N    | N     | N


        \* Resources with `private: true` are not accessible, unless

        authenticated as the user associated with the library entry


        † Adult content will only be shown if enabled in the authenticated

        user's settings


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `following` |

        `kind` | `anime`, `anime,manga` | Filter by the related media type

        `mangaId` | `2`, `8,987`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `since` | `2017-01-28`, `2013-03-25T00:00:00.000Z` | Returns entries updated since the supplied ISO 8601 date

        `status` | `current`, `onHold` | Values of the `status` attribute

        `title` | | Search resource

        `userId` | `42603`, `2,7`


        **Pagination**


        The maximum page limit is `500` for this resource.
      operationId: PatchUpdateResource12
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1644
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - User Libraries
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y*  | N    | N     | N

        Yes           | None      | Y*† | Y    | Y     | Y

        Yes           | Admin     | Y*  | N    | N     | N


        \* Resources with `private: true` are not accessible, unless

        authenticated as the user associated with the library entry


        † Adult content will only be shown if enabled in the authenticated

        user's settings


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `following` |

        `kind` | `anime`, `anime,manga` | Filter by the related media type

        `mangaId` | `2`, `8,987`

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `since` | `2017-01-28`, `2013-03-25T00:00:00.000Z` | Returns entries updated since the supplied ISO 8601 date

        `status` | `current`, `onHold` | Values of the `status` attribute

        `title` | | Search resource

        `userId` | `42603`, `2,7`


        **Pagination**


        The maximum page limit is `500` for this resource.
      operationId: DeleteResource123
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1644
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /library-entry-logs:
    get:
      tags:
      - User Libraries
      summary: Library Entry Logs_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `linkedAccountId` |

        `syncStatus` | `pending`, `success`, `error`


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: LibraryEntryLogs_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 917564
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LibraryEntryLogs_FetchCollectionresponse'
              example:
                data:
                - id: 917564
                  type: libraryEntryLogs
                  links:
                    self: https://kitsu.io/api/edge/library-entry-logs/917564
                  attributes:
                    createdAt: 2017-09-23T00:00:37.565Z
                    updatedAt: 2017-09-23T00:00:38.677Z
                    progress: 8
                    rating: 14
                    reconsumeCount: 0
                    reconsuming: false
                    status: current
                    volumesOwned: 0
                    actionPerformed: update
                    syncStatus: success
                    errorMessage: 
                  relationships:
                    linkedAccount:
                      links:
                        self: https://kitsu.io/api/edge/library-entry-logs/917564/relationships/linked-account
                        related: https://kitsu.io/api/edge/library-entry-logs/917564/linked-account
                    media:
                      links:
                        self: https://kitsu.io/api/edge/library-entry-logs/917564/relationships/media
                        related: https://kitsu.io/api/edge/library-entry-logs/917564/media
                meta:
                  count: 159818
                links:
                  first: https://kitsu.io/api/edge/library-entry-logs?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/library-entry-logs?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/library-entry-logs?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/library-entry-logs?page%5Blimit%5D=10&page%5Boffset%5D=159808
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - User Libraries
      summary: Library Entry Logs_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `linkedAccountId` |

        `syncStatus` | `pending`, `success`, `error`


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: LibraryEntryLogs_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 917564
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /library-entry-logs/{id}:
    get:
      tags:
      - User Libraries
      summary: Library Entry Logs_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `linkedAccountId` |

        `syncStatus` | `pending`, `success`, `error`


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: LibraryEntryLogs_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 917564
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LibraryEntryLogs_FetchResourceresponse'
              example:
                data:
                  id: 917564
                  type: libraryEntryLogs
                  links:
                    self: https://kitsu.io/api/edge/library-entry-logs/917564
                  attributes:
                    createdAt: 2017-09-23T00:00:37.565Z
                    updatedAt: 2017-09-23T00:00:38.677Z
                    progress: 8
                    rating: 14
                    reconsumeCount: 0
                    reconsuming: false
                    status: current
                    volumesOwned: 0
                    actionPerformed: update
                    syncStatus: success
                    errorMessage: 
                  relationships:
                    linkedAccount:
                      links:
                        self: https://kitsu.io/api/edge/library-entry-logs/917564/relationships/linked-account
                        related: https://kitsu.io/api/edge/library-entry-logs/917564/linked-account
                    media:
                      links:
                        self: https://kitsu.io/api/edge/library-entry-logs/917564/relationships/media
                        related: https://kitsu.io/api/edge/library-entry-logs/917564/media
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - User Libraries
      summary: Library Entry Logs_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `linkedAccountId` |

        `syncStatus` | `pending`, `success`, `error`


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: LibraryEntryLogs_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 917564
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - User Libraries
      summary: Library Entry Logs_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `linkedAccountId` |

        `syncStatus` | `pending`, `success`, `error`


        **Pagination**


        The maximum page limit is unlimited for this resource.
      operationId: LibraryEntryLogs_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 917564
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /library-events:
    get:
      tags:
      - User Libraries
      summary: Library Events_Fetch Collection
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `createdAt` |
      operationId: LibraryEvents_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LibraryEvents_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: libraryEvents
                  links:
                    self: https://kitsu.io/api/edge/library-events/1
                  attributes:
                    createdAt: 2017-09-23T00:00:37.565Z
                    updatedAt: 2017-09-23T00:00:37.565Z
                    notes: 
                    nsfw: false
                    private: false
                    progress: 2
                    rating: 14
                    reconsuming: false
                    reconsumeCount: 0
                    volumesOwned: 0
                    timeSpent: 0
                    status: completed
                    event: updated
                    changedData: {}
                  relationships:
                    libraryEntry:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/library-entry
                        related: https://kitsu.io/api/edge/library-events/1/library-entry
                    user:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/user
                        related: https://kitsu.io/api/edge/library-events/1/user
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/anime
                        related: https://kitsu.io/api/edge/library-events/1/anime
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/manga
                        related: https://kitsu.io/api/edge/library-events/1/manga
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/drama
                        related: https://kitsu.io/api/edge/library-events/1/drama
                meta:
                  count: 0
                links:
                  first: https://kitsu.io/api/edge/library-events?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/library-events?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/library-events?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/library-events?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /library-events/{id}:
    get:
      tags:
      - User Libraries
      summary: Library Events_Fetch Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `createdAt` |
      operationId: LibraryEvents_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LibraryEvents_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: libraryEvents
                  links:
                    self: https://kitsu.io/api/edge/library-events/1
                  attributes:
                    createdAt: 2017-09-23T00:00:37.565Z
                    updatedAt: 2017-09-23T00:00:37.565Z
                    notes: 
                    nsfw: false
                    private: false
                    progress: 2
                    rating: 14
                    reconsuming: false
                    reconsumeCount: 0
                    volumesOwned: 0
                    timeSpent: 0
                    status: completed
                    event: updated
                    changedData: {}
                  relationships:
                    libraryEntry:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/library-entry
                        related: https://kitsu.io/api/edge/library-events/1/library-entry
                    user:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/user
                        related: https://kitsu.io/api/edge/library-events/1/user
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/anime
                        related: https://kitsu.io/api/edge/library-events/1/anime
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/manga
                        related: https://kitsu.io/api/edge/library-events/1/manga
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/library-events/1/relationships/drama
                        related: https://kitsu.io/api/edge/library-events/1/drama
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - User Libraries
      summary: Library Events_Delete Resource
      description: >-
        **Status**: In development.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `createdAt` |
      operationId: LibraryEvents_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /list-imports:
    get:
      tags:
      - User Libraries
      summary: List Imports_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | N

        Yes           | Admin     | N   | Y    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: ListImports_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 8665
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ListImports_FetchCollectionresponse'
              example:
                data:
                - id: 8665
                  type: listImports
                  links:
                    self: https://kitsu.io/api/edge/list-imports/8665
                  attributes:
                    createdAt: 2017-08-22T20:37:04.815Z
                    updatedAt: 2017-08-22T20:41:29.814Z
                    kind: my-anime-list-xml
                    inputText: 
                    strategy: greater
                    inputFile:
                      original: https://media.kitsu.io/list_import/my_anime_list_xmls/input_files/8665/original.gz?1503434224
                      meta:
                        dimensions: {}
                    progress: 388
                    status: completed
                    total: 388
                    errorMessage: 
                    errorTrace: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/list-imports/8665/relationships/user
                        related: https://kitsu.io/api/edge/list-imports/8665/user
                meta:
                  count: 2
                links:
                  first: https://kitsu.io/api/edge/list-imports?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/list-imports?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/list-imports?page%5Blimit%5D=10&page%5Boffset%5D=2
                  last: https://kitsu.io/api/edge/list-imports?page%5Blimit%5D=10&page%5Boffset%5D=2
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - User Libraries
      summary: List Imports_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | N

        Yes           | Admin     | N   | Y    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: ListImports_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 8665
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /list-imports/{id}:
    get:
      tags:
      - User Libraries
      summary: List Imports_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | N

        Yes           | Admin     | N   | Y    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`
      operationId: ListImports_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 8665
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ListImports_FetchResourceresponse'
              example:
                data:
                  id: 8665
                  type: listImports
                  links:
                    self: https://kitsu.io/api/edge/list-imports/8665
                  attributes:
                    createdAt: 2017-08-22T20:37:04.815Z
                    updatedAt: 2017-08-22T20:41:29.814Z
                    kind: my-anime-list-xml
                    inputText: 
                    strategy: greater
                    inputFile:
                      original: https://media.kitsu.io/list_import/my_anime_list_xmls/input_files/8665/original.gz?1503434224
                      meta:
                        dimensions: {}
                    progress: 388
                    status: completed
                    total: 388
                    errorMessage: 
                    errorTrace: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/list-imports/8665/relationships/user
                        related: https://kitsu.io/api/edge/list-imports/8665/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-reaction-votes:
    get:
      tags:
      - Reactions
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaReactionId` | `1`, `24334`

        `userId` | `42603`, `2,7`
      operationId: GetFetchCollection1234567
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse8'
              example:
                data:
                - id: 1
                  type: mediaReactionVotes
                  links:
                    self: https://kitsu.io/api/edge/media-reaction-votes/1
                  attributes:
                    createdAt: 2017-07-25T09:42:00.190Z
                    updatedAt: 2017-07-25T09:42:00.190Z
                  relationships:
                    mediaReaction:
                      links:
                        self: https://kitsu.io/api/edge/media-reaction-votes/1/relationships/media-reaction
                        related: https://kitsu.io/api/edge/media-reaction-votes/1/media-reaction
                    user:
                      links:
                        self: https://kitsu.io/api/edge/media-reaction-votes/1/relationships/user
                        related: https://kitsu.io/api/edge/media-reaction-votes/1/user
                meta:
                  count: 16647
                links:
                  first: https://kitsu.io/api/edge/media-reaction-votes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/media-reaction-votes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/media-reaction-votes?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/media-reaction-votes?page%5Blimit%5D=10&page%5Boffset%5D=16637
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Reactions
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaReactionId` | `1`, `24334`

        `userId` | `42603`, `2,7`
      operationId: PostCreateResource123
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-reaction-votes/{id}:
    get:
      tags:
      - Reactions
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaReactionId` | `1`, `24334`

        `userId` | `42603`, `2,7`
      operationId: GetFetchResource1234567
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse8'
              example:
                data:
                  id: 1
                  type: mediaReactionVotes
                  links:
                    self: https://kitsu.io/api/edge/media-reaction-votes/1
                  attributes:
                    createdAt: 2017-07-25T09:42:00.190Z
                    updatedAt: 2017-07-25T09:42:00.190Z
                  relationships:
                    mediaReaction:
                      links:
                        self: https://kitsu.io/api/edge/media-reaction-votes/1/relationships/media-reaction
                        related: https://kitsu.io/api/edge/media-reaction-votes/1/media-reaction
                    user:
                      links:
                        self: https://kitsu.io/api/edge/media-reaction-votes/1/relationships/user
                        related: https://kitsu.io/api/edge/media-reaction-votes/1/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Reactions
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaReactionId` | `1`, `24334`

        `userId` | `42603`, `2,7`
      operationId: PatchUpdateResource123
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Reactions
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaReactionId` | `1`, `24334`

        `userId` | `42603`, `2,7`
      operationId: DeleteResource1234
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-reactions:
    get:
      tags:
      - Reactions
      summary: Media Reactions_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `upVotesCount` | `2`, `7`

        `userId` | `42603`, `2,7`

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `mangaId` | `2`, `8,987`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`
      operationId: MediaReactions_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 4
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MediaReactions_FetchCollectionresponse'
              example:
                data:
                - id: 4
                  type: mediaReactions
                  links:
                    self: https://kitsu.io/api/edge/media-reactions/4
                  attributes:
                    createdAt: 2017-07-25T09:40:43.455Z
                    updatedAt: 2017-07-25T09:40:43.455Z
                    reaction: A well-crafted story of paradoxical pain and suffering. Not as painful however as the slow pace of chapter releases.
                    upVotesCount: 4
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/anime
                        related: https://kitsu.io/api/edge/media-reactions/4/anime
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/drama
                        related: https://kitsu.io/api/edge/media-reactions/4/drama
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/manga
                        related: https://kitsu.io/api/edge/media-reactions/4/manga
                    user:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/user
                        related: https://kitsu.io/api/edge/media-reactions/4/user
                    libraryEntry:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/library-entry
                        related: https://kitsu.io/api/edge/media-reactions/4/library-entry
                    votes:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/votes
                        related: https://kitsu.io/api/edge/media-reactions/4/votes
                meta:
                  count: 24334
                links:
                  first: https://kitsu.io/api/edge/media-reactions?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/media-reactions?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/media-reactions?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/media-reactions?page%5Blimit%5D=10&page%5Boffset%5D=24324
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Reactions
      summary: Media Reactions_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `upVotesCount` | `2`, `7`

        `userId` | `42603`, `2,7`

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `mangaId` | `2`, `8,987`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`
      operationId: MediaReactions_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 4
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /media-reactions/{id}:
    get:
      tags:
      - Reactions
      summary: Media Reactions_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `upVotesCount` | `2`, `7`

        `userId` | `42603`, `2,7`

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `mangaId` | `2`, `8,987`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`
      operationId: MediaReactions_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 4
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MediaReactions_FetchResourceresponse'
              example:
                data:
                  id: 4
                  type: mediaReactions
                  links:
                    self: https://kitsu.io/api/edge/media-reactions/4
                  attributes:
                    createdAt: 2017-07-25T09:40:43.455Z
                    updatedAt: 2017-07-25T09:40:43.455Z
                    reaction: A well-crafted story of paradoxical pain and suffering. Not as painful however as the slow pace of chapter releases.
                    upVotesCount: 4
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/anime
                        related: https://kitsu.io/api/edge/media-reactions/4/anime
                    drama:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/drama
                        related: https://kitsu.io/api/edge/media-reactions/4/drama
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/manga
                        related: https://kitsu.io/api/edge/media-reactions/4/manga
                    user:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/user
                        related: https://kitsu.io/api/edge/media-reactions/4/user
                    libraryEntry:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/library-entry
                        related: https://kitsu.io/api/edge/media-reactions/4/library-entry
                    votes:
                      links:
                        self: https://kitsu.io/api/edge/media-reactions/4/relationships/votes
                        related: https://kitsu.io/api/edge/media-reactions/4/votes
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Reactions
      summary: Media Reactions_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `upVotesCount` | `2`, `7`

        `userId` | `42603`, `2,7`

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `mangaId` | `2`, `8,987`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`
      operationId: MediaReactions_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 4
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Reactions
      summary: Media Reactions_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `createdAt` |

        `upVotesCount` | `2`, `7`

        `userId` | `42603`, `2,7`

        `animeId` | `1`, `43,2,300`

        `dramaId` |

        `mangaId` | `2`, `8,987`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`
      operationId: MediaReactions_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 4
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /review-likes:
    get:
      tags:
      - Reactions
      summary: Review Likes_Fetch Collection
      description: >-
        **Status**: Deprecated. Use `media-reaction-votes` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `reviewId` | `4`, `14792`

        `userId` | `42603`, `2,7`
      operationId: ReviewLikes_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReviewLikes_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: reviewLikes
                  links:
                    self: https://kitsu.io/api/edge/review-likes/1
                  attributes:
                    createdAt: 2014-01-04T06:21:44.394Z
                    updatedAt: 2014-01-04T06:21:44.394Z
                  relationships:
                    review:
                      links:
                        self: https://kitsu.io/api/edge/review-likes/1/relationships/review
                        related: https://kitsu.io/api/edge/review-likes/1/review
                    user:
                      links:
                        self: https://kitsu.io/api/edge/review-likes/1/relationships/user
                        related: https://kitsu.io/api/edge/review-likes/1/user
                meta:
                  count: 27689
                links:
                  first: https://kitsu.io/api/edge/review-likes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/review-likes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/review-likes?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/review-likes?page%5Blimit%5D=10&page%5Boffset%5D=27679
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Reactions
      summary: Review Likes_Create Resource
      description: >-
        **Status**: Deprecated. Use `media-reaction-votes` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `reviewId` | `4`, `14792`

        `userId` | `42603`, `2,7`
      operationId: ReviewLikes_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /review-likes/{id}:
    get:
      tags:
      - Reactions
      summary: Review Likes_Fetch Resource
      description: >-
        **Status**: Deprecated. Use `media-reaction-votes` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `reviewId` | `4`, `14792`

        `userId` | `42603`, `2,7`
      operationId: ReviewLikes_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReviewLikes_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: reviewLikes
                  links:
                    self: https://kitsu.io/api/edge/review-likes/1
                  attributes:
                    createdAt: 2014-01-04T06:21:44.394Z
                    updatedAt: 2014-01-04T06:21:44.394Z
                  relationships:
                    review:
                      links:
                        self: https://kitsu.io/api/edge/review-likes/1/relationships/review
                        related: https://kitsu.io/api/edge/review-likes/1/review
                    user:
                      links:
                        self: https://kitsu.io/api/edge/review-likes/1/relationships/user
                        related: https://kitsu.io/api/edge/review-likes/1/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Reactions
      summary: Review Likes_Update Resource
      description: >-
        **Status**: Deprecated. Use `media-reaction-votes` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `reviewId` | `4`, `14792`

        `userId` | `42603`, `2,7`
      operationId: ReviewLikes_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Reactions
      summary: Review Likes_Delete Resource
      description: >-
        **Status**: Deprecated. Use `media-reaction-votes` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `reviewId` | `4`, `14792`

        `userId` | `42603`, `2,7`
      operationId: ReviewLikes_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /reviews:
    get:
      tags:
      - Reactions
      summary: Reviews_Fetch Collection
      description: >-
        **Status**: Deprecated. Use `media-reactions` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `userId` | `42603`, `2,7`
      operationId: Reviews_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 4
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reviews_FetchCollectionresponse'
              example:
                data:
                - id: 4
                  type: reviews
                  links:
                    self: https://kitsu.io/api/edge/reviews/4
                  attributes:
                    createdAt: 2013-03-04T18:29:01.441Z
                    updatedAt: 2016-12-19T08:01:58.532Z
                    content: The Anime \"Seinfeld\". Seriously, I love this show. It shines in it's dialog, and if you...
                    contentFormatted: <p>The Anime \"Seinfeld\". Seriously, I love this show. It shines in it's dialog, and if you...
                    likesCount: 3
                    progress: 
                    rating: 20
                    source: hummingbird
                    spoiler: false
                  relationships:
                    libraryEntry:
                      links:
                        self: https://kitsu.io/api/edge/reviews/4/relationships/library-entry
                        related: https://kitsu.io/api/edge/reviews/4/library-entry
                    media:
                      links:
                        self: https://kitsu.io/api/edge/reviews/4/relationships/media
                        related: https://kitsu.io/api/edge/reviews/4/media
                    user:
                      links:
                        self: https://kitsu.io/api/edge/reviews/4/relationships/user
                        related: https://kitsu.io/api/edge/reviews/4/user
                meta:
                  count: 14802
                links:
                  first: https://kitsu.io/api/edge/reviews?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/reviews?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/reviews?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/reviews?page%5Blimit%5D=10&page%5Boffset%5D=14792
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Reactions
      summary: Reviews_Create Resource
      description: >-
        **Status**: Deprecated. Use `media-reactions` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `userId` | `42603`, `2,7`
      operationId: Reviews_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 4
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /reviews/{id}:
    get:
      tags:
      - Reactions
      summary: Reviews_Fetch Resource
      description: >-
        **Status**: Deprecated. Use `media-reactions` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `userId` | `42603`, `2,7`
      operationId: Reviews_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 4
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reviews_FetchResourceresponse'
              example:
                data:
                  id: 4
                  type: reviews
                  links:
                    self: https://kitsu.io/api/edge/reviews/4
                  attributes:
                    createdAt: 2013-03-04T18:29:01.441Z
                    updatedAt: 2016-12-19T08:01:58.532Z
                    content: The Anime \"Seinfeld\". Seriously, I love this show. It shines in it's dialog, and if you...
                    contentFormatted: <p>The Anime \"Seinfeld\". Seriously, I love this show. It shines in it's dialog, and if you...
                    likesCount: 3
                    progress: 
                    rating: 20
                    source: hummingbird
                    spoiler: false
                  relationships:
                    libraryEntry:
                      links:
                        self: https://kitsu.io/api/edge/reviews/4/relationships/library-entry
                        related: https://kitsu.io/api/edge/reviews/4/library-entry
                    media:
                      links:
                        self: https://kitsu.io/api/edge/reviews/4/relationships/media
                        related: https://kitsu.io/api/edge/reviews/4/media
                    user:
                      links:
                        self: https://kitsu.io/api/edge/reviews/4/relationships/user
                        related: https://kitsu.io/api/edge/reviews/4/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Reactions
      summary: Reviews_Update Resource
      description: >-
        **Status**: Deprecated. Use `media-reactions` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `userId` | `42603`, `2,7`
      operationId: Reviews_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 4
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Reactions
      summary: Reviews_Delete Resource
      description: >-
        **Status**: Deprecated. Use `media-reactions` instead.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `userId` | `42603`, `2,7`
      operationId: Reviews_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 4
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /posts:
    get:
      tags:
      - Posts
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Post owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GetFetchCollection12345678
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 167585
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse9'
              example:
                data:
                - id: 167585
                  type: posts
                  links:
                    self: https://kitsu.io/api/edge/posts/167585
                  attributes:
                    createdAt: 2013-06-21T20:15:54.522Z
                    updatedAt: 2017-06-27T14:08:22.843Z
                    content: I like cats. http://i.imgur.com/mJBJfzf.jpg
                    contentFormatted: I like cats. <a href="http://i.imgur.com/mJBJfzf.jpg" target="_blank">...
                    commentsCount: 13
                    postLikesCount: 2
                    spoiler: false
                    nsfw: false
                    blocked: false
                    deletedAt: 
                    topLevelCommentsCount: 12
                    editedAt: 
                    targetInterest: 
                    embed: 
                    embedUrl: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/user
                        related: https://kitsu.io/api/edge/posts/167585/user
                    targetUser:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/target-user
                        related: https://kitsu.io/api/edge/posts/167585/target-user
                    targetGroup:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/target-group
                        related: https://kitsu.io/api/edge/posts/167585/target-group
                    media:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/media
                        related: https://kitsu.io/api/edge/posts/167585/media
                    spoiledUnit:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/spoiled-unit
                        related: https://kitsu.io/api/edge/posts/167585/spoiled-unit
                    ama:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/ama
                        related: https://kitsu.io/api/edge/posts/167585/ama
                    postLikes:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/post-likes
                        related: https://kitsu.io/api/edge/posts/167585/post-likes
                    comments:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/comments
                        related: https://kitsu.io/api/edge/posts/167585/comments
                    uploads:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/uploads
                        related: https://kitsu.io/api/edge/posts/167585/uploads
                meta:
                  count: 945189
                links:
                  first: https://kitsu.io/api/edge/posts?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/posts?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/posts?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/posts?page%5Blimit%5D=10&page%5Boffset%5D=945179
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Posts
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Post owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: PostCreateResource1234
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 167585
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /posts/{id}:
    get:
      tags:
      - Posts
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Post owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GetFetchResource12345678
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 167585
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse9'
              example:
                data:
                  id: 167585
                  type: posts
                  links:
                    self: https://kitsu.io/api/edge/posts/167585
                  attributes:
                    createdAt: 2013-06-21T20:15:54.522Z
                    updatedAt: 2017-06-27T14:08:22.843Z
                    content: I like cats. http://i.imgur.com/mJBJfzf.jpg
                    contentFormatted: I like cats. <a href="http://i.imgur.com/mJBJfzf.jpg" target="_blank">...
                    commentsCount: 13
                    postLikesCount: 2
                    spoiler: false
                    nsfw: false
                    blocked: false
                    deletedAt: 
                    topLevelCommentsCount: 12
                    editedAt: 
                    targetInterest: 
                    embed: 
                    embedUrl: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/user
                        related: https://kitsu.io/api/edge/posts/167585/user
                    targetUser:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/target-user
                        related: https://kitsu.io/api/edge/posts/167585/target-user
                    targetGroup:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/target-group
                        related: https://kitsu.io/api/edge/posts/167585/target-group
                    media:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/media
                        related: https://kitsu.io/api/edge/posts/167585/media
                    spoiledUnit:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/spoiled-unit
                        related: https://kitsu.io/api/edge/posts/167585/spoiled-unit
                    ama:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/ama
                        related: https://kitsu.io/api/edge/posts/167585/ama
                    postLikes:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/post-likes
                        related: https://kitsu.io/api/edge/posts/167585/post-likes
                    comments:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/comments
                        related: https://kitsu.io/api/edge/posts/167585/comments
                    uploads:
                      links:
                        self: https://kitsu.io/api/edge/posts/167585/relationships/uploads
                        related: https://kitsu.io/api/edge/posts/167585/uploads
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Posts
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Post owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: PatchUpdateResource1234
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 167585
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Posts
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Post owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: DeleteResource12345
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 167585
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /post-likes:
    get:
      tags:
      - Posts
      summary: Post Likes_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `userId` | `42603`, `2,7`
      operationId: PostLikes_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PostLikes_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: postLikes
                  links:
                    self: https://kitsu.io/api/edge/post-likes/1
                  attributes:
                    createdAt: 2016-11-02T00:20:19.057Z
                    updatedAt: 2016-11-02T00:20:19.057Z
                  relationships:
                    post:
                      links:
                        self: https://kitsu.io/api/edge/post-likes/1/relationships/post
                        related: https://kitsu.io/api/edge/post-likes/1/post
                    user:
                      links:
                        self: https://kitsu.io/api/edge/post-likes/1/relationships/user
                        related: https://kitsu.io/api/edge/post-likes/1/user
                meta:
                  count: 1774249
                links:
                  first: https://kitsu.io/api/edge/post-likes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/post-likes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/post-likes?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/post-likes?page%5Blimit%5D=10&page%5Boffset%5D=1774239
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Posts
      summary: Post Likes_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `userId` | `42603`, `2,7`
      operationId: PostLikes_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /post-likes/{id}:
    get:
      tags:
      - Posts
      summary: Post Likes_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `userId` | `42603`, `2,7`
      operationId: PostLikes_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PostLikes_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: postLikes
                  links:
                    self: https://kitsu.io/api/edge/post-likes/1
                  attributes:
                    createdAt: 2016-11-02T00:20:19.057Z
                    updatedAt: 2016-11-02T00:20:19.057Z
                  relationships:
                    post:
                      links:
                        self: https://kitsu.io/api/edge/post-likes/1/relationships/post
                        related: https://kitsu.io/api/edge/post-likes/1/post
                    user:
                      links:
                        self: https://kitsu.io/api/edge/post-likes/1/relationships/user
                        related: https://kitsu.io/api/edge/post-likes/1/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Posts
      summary: Post Likes_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `userId` | `42603`, `2,7`
      operationId: PostLikes_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /post-follows:
    get:
      tags:
      - Posts
      summary: Post Follows_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `userId` | `42603`, `2,7`
      operationId: PostFollows_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 3
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PostFollows_FetchCollectionresponse'
              example:
                data:
                - id: 3
                  type: postFollows
                  links:
                    self: https://kitsu.io/api/edge/post-follows/3
                  attributes:
                    createdAt: 2017-05-04T03:53:54.049Z
                    updatedAt: 2017-05-04T03:53:54.049Z
                  relationships:
                    post:
                      links:
                        self: https://kitsu.io/api/edge/post-follows/3/relationships/post
                        related: https://kitsu.io/api/edge/post-follows/3/post
                    user:
                      links:
                        self: https://kitsu.io/api/edge/post-follows/3/relationships/user
                        related: https://kitsu.io/api/edge/post-follows/3/user
                meta:
                  count: 2261
                links:
                  first: https://kitsu.io/api/edge/post-follows?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/post-follows?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/post-follows?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/post-follows?page%5Blimit%5D=10&page%5Boffset%5D=2251
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Posts
      summary: Post Follows_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `userId` | `42603`, `2,7`
      operationId: PostFollows_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 3
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /post-follows/{id}:
    get:
      tags:
      - Posts
      summary: Post Follows_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `userId` | `42603`, `2,7`
      operationId: PostFollows_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 3
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PostFollows_FetchResourceresponse'
              example:
                data:
                  id: 3
                  type: postFollows
                  links:
                    self: https://kitsu.io/api/edge/post-follows/3
                  attributes:
                    createdAt: 2017-05-04T03:53:54.049Z
                    updatedAt: 2017-05-04T03:53:54.049Z
                  relationships:
                    post:
                      links:
                        self: https://kitsu.io/api/edge/post-follows/3/relationships/post
                        related: https://kitsu.io/api/edge/post-follows/3/post
                    user:
                      links:
                        self: https://kitsu.io/api/edge/post-follows/3/relationships/user
                        related: https://kitsu.io/api/edge/post-follows/3/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Posts
      summary: Post Follows_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `userId` | `42603`, `2,7`
      operationId: PostFollows_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 3
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /comments:
    get:
      tags:
      - Comments
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Comment owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `parentId` | `1`
      operationId: GetFetchCollection123456789
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 7760392
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse10'
              example:
                data:
                - id: 7760392
                  type: comments
                  links:
                    self: https://kitsu.io/api/edge/comments/7760392
                  attributes:
                    createdAt: 2014-08-07T19:08:14.364Z
                    updatedAt: 2014-08-07T19:08:14.364Z
                    content: This is a test.
                    contentFormatted: This is a test.
                    blocked: false
                    deletedAt: 
                    likesCount: 0
                    repliesCount: 0
                    editedAt: 
                    embed: 
                    embedUrl: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/user
                        related: https://kitsu.io/api/edge/comments/7760392/user
                    post:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/post
                        related: https://kitsu.io/api/edge/comments/7760392/post
                    parent:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/parent
                        related: https://kitsu.io/api/edge/comments/7760392/parent
                    likes:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/likes
                        related: https://kitsu.io/api/edge/comments/7760392/likes
                    replies:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/replies
                        related: https://kitsu.io/api/edge/comments/7760392/replies
                    uploads:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/uploads
                        related: https://kitsu.io/api/edge/comments/7760392/uploads
                meta:
                  count: 1380356
                links:
                  first: https://kitsu.io/api/edge/comments?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/comments?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/comments?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/comments?page%5Blimit%5D=10&page%5Boffset%5D=1380346
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Comments
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Comment owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `parentId` | `1`
      operationId: PostCreateResource12345
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 7760392
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /comments/{id}:
    get:
      tags:
      - Comments
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Comment owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `parentId` | `1`
      operationId: GetFetchResource123456789
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 7760392
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse10'
              example:
                data:
                  id: 7760392
                  type: comments
                  links:
                    self: https://kitsu.io/api/edge/comments/7760392
                  attributes:
                    createdAt: 2014-08-07T19:08:14.364Z
                    updatedAt: 2014-08-07T19:08:14.364Z
                    content: This is a test.
                    contentFormatted: This is a test.
                    blocked: false
                    deletedAt: 
                    likesCount: 0
                    repliesCount: 0
                    editedAt: 
                    embed: 
                    embedUrl: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/user
                        related: https://kitsu.io/api/edge/comments/7760392/user
                    post:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/post
                        related: https://kitsu.io/api/edge/comments/7760392/post
                    parent:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/parent
                        related: https://kitsu.io/api/edge/comments/7760392/parent
                    likes:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/likes
                        related: https://kitsu.io/api/edge/comments/7760392/likes
                    replies:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/replies
                        related: https://kitsu.io/api/edge/comments/7760392/replies
                    uploads:
                      links:
                        self: https://kitsu.io/api/edge/comments/7760392/relationships/uploads
                        related: https://kitsu.io/api/edge/comments/7760392/uploads
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Comments
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Comment owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `parentId` | `1`
      operationId: PatchUpdateResource12345
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 7760392
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Comments
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y*    | Y

        Yes           | Admin     | Y   | N    | Y     | Y


        \* Comment owner has 30 minutes from creation to edit the resource


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `postId` | `1`

        `parentId` | `1`
      operationId: DeleteResource123456
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 7760392
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /comment-likes:
    get:
      tags:
      - Comments
      summary: Comment Likes_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `commentId` | `1`

        `userId` | `42603`, `2,7`
      operationId: CommentLikes_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 3
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CommentLikes_FetchCollectionresponse'
              example:
                data:
                - id: 3
                  type: commentLikes
                  links:
                    self: https://kitsu.io/api/edge/comment-likes/3
                  attributes:
                    createdAt: 2016-12-12T14:42:03.440Z
                    updatedAt: 2016-12-12T14:42:03.440Z
                  relationships:
                    comment:
                      links:
                        self: https://kitsu.io/api/edge/comment-likes/3/relationships/comment
                        related: https://kitsu.io/api/edge/comment-likes/3/comment
                    user:
                      links:
                        self: https://kitsu.io/api/edge/comment-likes/3/relationships/user
                        related: https://kitsu.io/api/edge/comment-likes/3/user
                meta:
                  count: 206579
                links:
                  first: https://kitsu.io/api/edge/comment-likes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/comment-likes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/comment-likes?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/comment-likes?page%5Blimit%5D=10&page%5Boffset%5D=206569
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Comments
      summary: Comment Likes_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `commentId` | `1`

        `userId` | `42603`, `2,7`
      operationId: CommentLikes_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 3
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /comment-likes/{id}:
    get:
      tags:
      - Comments
      summary: Comment Likes_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `commentId` | `1`

        `userId` | `42603`, `2,7`
      operationId: CommentLikes_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 3
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CommentLikes_FetchResourceresponse'
              example:
                data:
                  id: 3
                  type: commentLikes
                  links:
                    self: https://kitsu.io/api/edge/comment-likes/3
                  attributes:
                    createdAt: 2016-12-12T14:42:03.440Z
                    updatedAt: 2016-12-12T14:42:03.440Z
                  relationships:
                    comment:
                      links:
                        self: https://kitsu.io/api/edge/comment-likes/3/relationships/comment
                        related: https://kitsu.io/api/edge/comment-likes/3/comment
                    user:
                      links:
                        self: https://kitsu.io/api/edge/comment-likes/3/relationships/user
                        related: https://kitsu.io/api/edge/comment-likes/3/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Comments
      summary: Comment Likes_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `commentId` | `1`

        `userId` | `42603`, `2,7`
      operationId: CommentLikes_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 3
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /anime-characters:
    get:
      tags:
      - Characters
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`
      operationId: GetFetchCollection12345678910
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse11'
              example:
                data:
                - id: 1
                  type: animeCharacters
                  links:
                    self: https://kitsu.io/api/edge/anime-characters/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: main
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/anime-characters/1/relationships/anime
                        related: https://kitsu.io/api/edge/anime-characters/1/anime
                    character: {}
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/anime-characters/1/relationships/castings
                        related: https://kitsu.io/api/edge/anime-characters/1/castings
                meta:
                  count: 109379
                links:
                  first: https://kitsu.io/api/edge/anime-characters?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/anime-characters?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/anime-characters?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/anime-characters?page%5Blimit%5D=10&page%5Boffset%5D=109369
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Characters
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`
      operationId: PostCreateResource123456
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /anime-characters/{id}:
    get:
      tags:
      - Characters
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`
      operationId: GetFetchResource12345678910
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse11'
              example:
                data:
                  id: 1
                  type: animeCharacters
                  links:
                    self: https://kitsu.io/api/edge/anime-characters/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: main
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/anime-characters/1/relationships/anime
                        related: https://kitsu.io/api/edge/anime-characters/1/anime
                    character: {}
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/anime-characters/1/relationships/castings
                        related: https://kitsu.io/api/edge/anime-characters/1/castings
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Characters
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`
      operationId: PatchUpdateResource123456
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Characters
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`
      operationId: DeleteResource1234567
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /manga-characters:
    get:
      tags:
      - Characters
      summary: Manga Characters_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mangaId` | `2`, `8,987`
      operationId: MangaCharacters_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MangaCharacters_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: mangaCharacters
                  links:
                    self: https://kitsu.io/api/edge/manga-characters/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: main
                  relationships:
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/manga-characters/1/relationships/manga
                        related: https://kitsu.io/api/edge/manga-characters/1/manga
                    character:
                      links:
                        self: https://kitsu.io/api/edge/manga-characters/1/relationships/character
                        related: https://kitsu.io/api/edge/manga-characters/1/character
                meta:
                  count: 3
                links:
                  first: https://kitsu.io/api/edge/manga-characters?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/manga-characters?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/manga-characters?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/manga-characters?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Characters
      summary: Manga Characters_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mangaId` | `2`, `8,987`
      operationId: MangaCharacters_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /manga-characters/{id}:
    get:
      tags:
      - Characters
      summary: Manga Characters_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mangaId` | `2`, `8,987`
      operationId: MangaCharacters_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MangaCharacters_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: mangaCharacters
                  links:
                    self: https://kitsu.io/api/edge/manga-characters/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: main
                  relationships:
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/manga-characters/1/relationships/manga
                        related: https://kitsu.io/api/edge/manga-characters/1/manga
                    character:
                      links:
                        self: https://kitsu.io/api/edge/manga-characters/1/relationships/character
                        related: https://kitsu.io/api/edge/manga-characters/1/character
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Characters
      summary: Manga Characters_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mangaId` | `2`, `8,987`
      operationId: MangaCharacters_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Characters
      summary: Manga Characters_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mangaId` | `2`, `8,987`
      operationId: MangaCharacters_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /characters:
    get:
      tags:
      - Characters
      summary: Characters_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |

        `name` | |
      operationId: Characters_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Characters_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: characters
                  links:
                    self: https://kitsu.io/api/edge/characters/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    slug: jet
                    name: Jet Black
                    malId: 3
                    description: Jet, known on his home satellite as the \"Black Dog\"...
                    image:
                      original: https://media.kitsu.io/characters/images/1/original.jpg?1483096805
                  relationships:
                    primaryMedia:
                      links:
                        self: https://kitsu.io/api/edge/characters/1/relationships/primary-media
                        related: https://kitsu.io/api/edge/characters/1/primary-media
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/characters/1/relationships/castings
                        related: https://kitsu.io/api/edge/characters/1/castings
                meta:
                  count: 950090
                links:
                  first: https://kitsu.io/api/edge/characters?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/characters?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/characters?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/characters?page%5Blimit%5D=10&page%5Boffset%5D=94999
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Characters
      summary: Characters_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |

        `name` | |
      operationId: Characters_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /characters/{id}:
    get:
      tags:
      - Characters
      summary: Characters_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |

        `name` | |
      operationId: Characters_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Characters_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: characters
                  links:
                    self: https://kitsu.io/api/edge/characters/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    slug: jet
                    name: Jet Black
                    malId: 3
                    description: Jet, known on his home satellite as the \"Black Dog\"...
                    image:
                      original: https://media.kitsu.io/characters/images/1/original.jpg?1483096805
                  relationships:
                    primaryMedia:
                      links:
                        self: https://kitsu.io/api/edge/characters/1/relationships/primary-media
                        related: https://kitsu.io/api/edge/characters/1/primary-media
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/characters/1/relationships/castings
                        related: https://kitsu.io/api/edge/characters/1/castings
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Characters
      summary: Characters_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |

        `name` | |
      operationId: Characters_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Characters
      summary: Characters_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |

        `name` | |
      operationId: Characters_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /anime-productions:
    get:
      tags:
      - Producers & Staff
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `producerId` | `1`, `2,3`

        `role` | | Values of the `role` attribute
      operationId: GetFetchCollection1234567891011
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse12'
              example:
                data:
                - id: 1
                  type: animeProductions
                  links:
                    self: https://kitsu.io/api/edge/anime-productions/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: producer
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/anime-productions/1/relationships/anime
                        related: https://kitsu.io/api/edge/anime-productions/1/anime
                    producer:
                      links:
                        self: https://kitsu.io/api/edge/anime-productions/1/relationships/producer
                        related: https://kitsu.io/api/edge/anime-productions/1/producer
                meta:
                  count: 28401
                links:
                  first: https://kitsu.io/api/edge/anime-productions?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/anime-productions?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/anime-productions?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/anime-productions?page%5Blimit%5D=10&page%5Boffset%5D=28391
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Producers & Staff
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `producerId` | `1`, `2,3`

        `role` | | Values of the `role` attribute
      operationId: PostCreateResource1234567
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /anime-productions/{id}:
    get:
      tags:
      - Producers & Staff
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `producerId` | `1`, `2,3`

        `role` | | Values of the `role` attribute
      operationId: GetFetchResource1234567891011
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse12'
              example:
                data:
                  id: 1
                  type: animeProductions
                  links:
                    self: https://kitsu.io/api/edge/anime-productions/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: producer
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/anime-productions/1/relationships/anime
                        related: https://kitsu.io/api/edge/anime-productions/1/anime
                    producer:
                      links:
                        self: https://kitsu.io/api/edge/anime-productions/1/relationships/producer
                        related: https://kitsu.io/api/edge/anime-productions/1/producer
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Producers & Staff
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `producerId` | `1`, `2,3`

        `role` | | Values of the `role` attribute
      operationId: PatchUpdateResource1234567
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Producers & Staff
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `animeId` | `1`, `43,2,300`

        `producerId` | `1`, `2,3`

        `role` | | Values of the `role` attribute
      operationId: DeleteResource12345678
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /anime-staff:
    get:
      tags:
      - Producers & Staff
      summary: Anime Staff_Fetch Collection
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: AnimeStaff_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AnimeStaff_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: animeStaff
                  links:
                    self: https://kitsu.io/api/edge/anime-staff/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: Producer
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/anime-staff/1/relationships/anime
                        related: https://kitsu.io/api/edge/anime-staff/1/anime
                    person:
                      links:
                        self: https://kitsu.io/api/edge/anime-staff/1/relationships/person
                        related: https://kitsu.io/api/edge/anime-staff/1/person
                meta:
                  count: 88543
                links:
                  first: https://kitsu.io/api/edge/anime-staff?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/anime-staff?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/anime-staff?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/anime-staff?page%5Blimit%5D=10&page%5Boffset%5D=88533
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Producers & Staff
      summary: Anime Staff_Create Resource
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: AnimeStaff_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /anime-staff/{id}:
    get:
      tags:
      - Producers & Staff
      summary: Anime Staff_Fetch Resource
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: AnimeStaff_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AnimeStaff_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: animeStaff
                  links:
                    self: https://kitsu.io/api/edge/anime-staff/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: Producer
                  relationships:
                    anime:
                      links:
                        self: https://kitsu.io/api/edge/anime-staff/1/relationships/anime
                        related: https://kitsu.io/api/edge/anime-staff/1/anime
                    person:
                      links:
                        self: https://kitsu.io/api/edge/anime-staff/1/relationships/person
                        related: https://kitsu.io/api/edge/anime-staff/1/person
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Producers & Staff
      summary: Anime Staff_Update Resource
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: AnimeStaff_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Producers & Staff
      summary: Anime Staff_Delete Resource
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: AnimeStaff_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /manga-staff:
    get:
      tags:
      - Producers & Staff
      summary: Manga Staff_Fetch Collection
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: MangaStaff_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MangaStaff_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: mangaStaff
                  links:
                    self: https://kitsu.io/api/edge/manga-staff/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: producer
                  relationships:
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/manga-staff/1/relationships/manga
                        related: https://kitsu.io/api/edge/manga-staff/1/manga
                    person:
                      links:
                        self: https://kitsu.io/api/edge/manga-staff/1/relationships/person
                        related: https://kitsu.io/api/edge/manga-staff/1/person
                meta:
                  count: 1
                links:
                  first: https://kitsu.io/api/edge/manga-staff?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/manga-staff?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/manga-staff?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/manga-staff?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Producers & Staff
      summary: Manga Staff_Create Resource
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: MangaStaff_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /manga-staff/{id}:
    get:
      tags:
      - Producers & Staff
      summary: Manga Staff_Fetch Resource
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: MangaStaff_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MangaStaff_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: mangaStaff
                  links:
                    self: https://kitsu.io/api/edge/manga-staff/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: producer
                  relationships:
                    manga:
                      links:
                        self: https://kitsu.io/api/edge/manga-staff/1/relationships/manga
                        related: https://kitsu.io/api/edge/manga-staff/1/manga
                    person:
                      links:
                        self: https://kitsu.io/api/edge/manga-staff/1/relationships/person
                        related: https://kitsu.io/api/edge/manga-staff/1/person
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Producers & Staff
      summary: Manga Staff_Update Resource
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: MangaStaff_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Producers & Staff
      summary: Manga Staff_Delete Resource
      description: >-
        **Status**: In development. Replaces `castings`.


        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: MangaStaff_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /producers:
    get:
      tags:
      - Producers & Staff
      summary: Producers_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: Producers_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Producers_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: producers
                  links:
                    self: https://kitsu.io/api/edge/producers/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    slug: sunrise
                    name: Sunrise
                  relationships:
                    animeProductions:
                      links:
                        self: https://kitsu.io/api/edge/producers/1/relationships/anime-productions
                        related: https://kitsu.io/api/edge/producers/1/anime-productions
                meta:
                  count: 1333
                links:
                  first: https://kitsu.io/api/edge/producers?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/producers?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/producers?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/producers?page%5Blimit%5D=10&page%5Boffset%5D=1323
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Producers & Staff
      summary: Producers_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: Producers_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /producers/{id}:
    get:
      tags:
      - Producers & Staff
      summary: Producers_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: Producers_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Producers_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: producers
                  links:
                    self: https://kitsu.io/api/edge/producers/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    slug: sunrise
                    name: Sunrise
                  relationships:
                    animeProductions:
                      links:
                        self: https://kitsu.io/api/edge/producers/1/relationships/anime-productions
                        related: https://kitsu.io/api/edge/producers/1/anime-productions
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Producers & Staff
      summary: Producers_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: Producers_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Producers & Staff
      summary: Producers_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: Producers_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /people:
    get:
      tags:
      - Producers & Staff
      summary: People_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: People_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/People_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: people
                  links:
                    self: https://kitsu.io/api/edge/people/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    image: https://media.kitsu.io/people/images/1/original.jpg?1416260317
                    name: Masahiko Minami
                    malId: 6519
                  relationships:
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/people/1/relationships/castings
                        related: https://kitsu.io/api/edge/people/1/castings
                meta:
                  count: 27957
                links:
                  first: https://kitsu.io/api/edge/people?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/people?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/people?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/people?page%5Blimit%5D=10&page%5Boffset%5D=27947
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Producers & Staff
      summary: People_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: People_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /people/{id}:
    get:
      tags:
      - Producers & Staff
      summary: People_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: People_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/People_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: people
                  links:
                    self: https://kitsu.io/api/edge/people/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    image: https://media.kitsu.io/people/images/1/original.jpg?1416260317
                    name: Masahiko Minami
                    malId: 6519
                  relationships:
                    castings:
                      links:
                        self: https://kitsu.io/api/edge/people/1/relationships/castings
                        related: https://kitsu.io/api/edge/people/1/castings
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Producers & Staff
      summary: People_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: People_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Producers & Staff
      summary: People_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: People_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /castings:
    get:
      tags:
      - Producers & Staff
      summary: Castings_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `language` | `Japanese`, `English`

        `featured` | `true`, `false`

        `isCharacter` | `true`, `false`
      operationId: Castings_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Castings_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: castings
                  links:
                    self: https://kitsu.io/api/edge/castings/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: producer
                    voiceActor: false
                    featured: false
                    language: English
                  relationships:
                    media:
                      links:
                        self: https://kitsu.io/api/edge/castings/1/relationships/media
                        related: https://kitsu.io/api/edge/castings/1/media
                    character:
                      links:
                        self: https://kitsu.io/api/edge/castings/1/relationships/character
                        related: https://kitsu.io/api/edge/castings/1/character
                    person:
                      links:
                        self: https://kitsu.io/api/edge/castings/1/relationships/person
                        related: https://kitsu.io/api/edge/castings/1/person
                meta:
                  count: 244549
                links:
                  first: https://kitsu.io/api/edge/castings?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/castings?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/castings?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/castings?page%5Blimit%5D=10&page%5Boffset%5D=244539
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Producers & Staff
      summary: Castings_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `language` | `Japanese`, `English`

        `featured` | `true`, `false`

        `isCharacter` | `true`, `false`
      operationId: Castings_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /castings/{id}:
    get:
      tags:
      - Producers & Staff
      summary: Castings_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `language` | `Japanese`, `English`

        `featured` | `true`, `false`

        `isCharacter` | `true`, `false`
      operationId: Castings_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Castings_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: castings
                  links:
                    self: https://kitsu.io/api/edge/castings/1
                  attributes:
                    createdAt: 2017-07-27T22:21:26.824Z
                    updatedAt: 2017-07-27T22:47:45.129Z
                    role: producer
                    voiceActor: false
                    featured: false
                    language: English
                  relationships:
                    media:
                      links:
                        self: https://kitsu.io/api/edge/castings/1/relationships/media
                        related: https://kitsu.io/api/edge/castings/1/media
                    character:
                      links:
                        self: https://kitsu.io/api/edge/castings/1/relationships/character
                        related: https://kitsu.io/api/edge/castings/1/character
                    person:
                      links:
                        self: https://kitsu.io/api/edge/castings/1/relationships/person
                        related: https://kitsu.io/api/edge/castings/1/person
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Producers & Staff
      summary: Castings_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `language` | `Japanese`, `English`

        `featured` | `true`, `false`

        `isCharacter` | `true`, `false`
      operationId: Castings_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Producers & Staff
      summary: Castings_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `mediaId` | | **DEPRECATED** - use `anime_id`, `manga_id` or `drama_id`

        `mediaType` | `anime`, `anime,manga` | **DEPRECATED** - use `kind`

        `language` | `Japanese`, `English`

        `featured` | `true`, `false`

        `isCharacter` | `true`, `false`
      operationId: Castings_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /groups:
    get:
      tags:
      - Groups
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `featured` | `true`, `false`

        `category` |

        `privacy` | `open`, `closed`, `restricted`

        `query` | | Search resource
      operationId: GetFetchCollection123456789101112
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse13'
              example:
                data:
                - id: 1
                  type: groups
                  links:
                    self: https://kitsu.io/api/edge/groups/1
                  attributes:
                    createdAt: 2015-02-17T21:16:53.207Z
                    updatedAt: 2017-10-26T20:51:24.215Z
                    slug: one-piece-group
                    about: Group for fans of the One Piece anime and or manga...
                    locale: 
                    membersCount: 548
                    name: One Piece group
                    nsfw: false
                    privacy: open
                    rules: 
                    rulesFormatted: 
                    leadersCount: 2
                    neighborsCount: 0
                    featured: false
                    tagline: 
                    lastActivityAt: 2017-10-26T17:56:45.259Z
                    avatar:
                      tiny: https://media.kitsu.io/groups/avatars/1/tiny.gif?1424323296
                      small: https://media.kitsu.io/groups/avatars/1/small.gif?1424323296
                      medium: https://media.kitsu.io/groups/avatars/1/medium.gif?1424323296
                      large: https://media.kitsu.io/groups/avatars/1/large.gif?1424323296
                      original: https://media.kitsu.io/groups/avatars/1/original.gif?1424323296
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    coverImage:
                      tiny: https://media.kitsu.io/groups/cover_images/1/tiny.jpg?1424209483
                      small: https://media.kitsu.io/groups/cover_images/1/small.jpg?1424209483
                      large: https://media.kitsu.io/groups/cover_images/1/large.jpg?1424209483
                      original: https://media.kitsu.io/groups/cover_images/1/original.jpeg?1424209483
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                  relationships:
                    members:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/members
                        related: https://kitsu.io/api/edge/groups/1/members
                    neighbors:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/neighbors
                        related: https://kitsu.io/api/edge/groups/1/neighbors
                    tickets:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/tickets
                        related: https://kitsu.io/api/edge/groups/1/tickets
                    invites:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/invites
                        related: https://kitsu.io/api/edge/groups/1/invites
                    reports:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/reports
                        related: https://kitsu.io/api/edge/groups/1/reports
                    leaderChatMessages:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/leader-chat-messages
                        related: https://kitsu.io/api/edge/groups/1/leader-chat-messages
                    actionLogs:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/action-logs
                        related: https://kitsu.io/api/edge/groups/1/action-logs
                    category:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/category
                        related: https://kitsu.io/api/edge/groups/1/category
                    pinnedPost:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/pinned-post
                        related: https://kitsu.io/api/edge/groups/1/pinned-post
                meta:
                  count: 1998
                links:
                  first: https://kitsu.io/api/edge/groups?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/groups?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/groups?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/groups?page%5Blimit%5D=10&page%5Boffset%5D=1988
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `featured` | `true`, `false`

        `category` |

        `privacy` | `open`, `closed`, `restricted`

        `query` | | Search resource
      operationId: PostCreateResource12345678
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /groups/{id}:
    get:
      tags:
      - Groups
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `featured` | `true`, `false`

        `category` |

        `privacy` | `open`, `closed`, `restricted`

        `query` | | Search resource
      operationId: GetFetchResource123456789101112
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse13'
              example:
                data:
                  id: 1
                  type: groups
                  links:
                    self: https://kitsu.io/api/edge/groups/1
                  attributes:
                    createdAt: 2015-02-17T21:16:53.207Z
                    updatedAt: 2017-10-26T20:51:24.215Z
                    slug: one-piece-group
                    about: Group for fans of the One Piece anime and or manga...
                    locale: 
                    membersCount: 548
                    name: One Piece group
                    nsfw: false
                    privacy: open
                    rules: 
                    rulesFormatted: 
                    leadersCount: 2
                    neighborsCount: 0
                    featured: false
                    tagline: 
                    lastActivityAt: 2017-10-26T17:56:45.259Z
                    avatar:
                      tiny: https://media.kitsu.io/groups/avatars/1/tiny.gif?1424323296
                      small: https://media.kitsu.io/groups/avatars/1/small.gif?1424323296
                      medium: https://media.kitsu.io/groups/avatars/1/medium.gif?1424323296
                      large: https://media.kitsu.io/groups/avatars/1/large.gif?1424323296
                      original: https://media.kitsu.io/groups/avatars/1/original.gif?1424323296
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          medium:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                    coverImage:
                      tiny: https://media.kitsu.io/groups/cover_images/1/tiny.jpg?1424209483
                      small: https://media.kitsu.io/groups/cover_images/1/small.jpg?1424209483
                      large: https://media.kitsu.io/groups/cover_images/1/large.jpg?1424209483
                      original: https://media.kitsu.io/groups/cover_images/1/original.jpeg?1424209483
                      meta:
                        dimensions:
                          tiny:
                            width: 
                            height: 
                          small:
                            width: 
                            height: 
                          large:
                            width: 
                            height: 
                  relationships:
                    members:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/members
                        related: https://kitsu.io/api/edge/groups/1/members
                    neighbors:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/neighbors
                        related: https://kitsu.io/api/edge/groups/1/neighbors
                    tickets:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/tickets
                        related: https://kitsu.io/api/edge/groups/1/tickets
                    invites:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/invites
                        related: https://kitsu.io/api/edge/groups/1/invites
                    reports:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/reports
                        related: https://kitsu.io/api/edge/groups/1/reports
                    leaderChatMessages:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/leader-chat-messages
                        related: https://kitsu.io/api/edge/groups/1/leader-chat-messages
                    actionLogs:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/action-logs
                        related: https://kitsu.io/api/edge/groups/1/action-logs
                    category:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/category
                        related: https://kitsu.io/api/edge/groups/1/category
                    pinnedPost:
                      links:
                        self: https://kitsu.io/api/edge/groups/1/relationships/pinned-post
                        related: https://kitsu.io/api/edge/groups/1/pinned-post
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `featured` | `true`, `false`

        `category` |

        `privacy` | `open`, `closed`, `restricted`

        `query` | | Search resource
      operationId: PatchUpdateResource12345678
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `featured` | `true`, `false`

        `category` |

        `privacy` | `open`, `closed`, `restricted`

        `query` | | Search resource
      operationId: DeleteResource123456789
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-action-logs:
    get:
      tags:
      - Groups
      summary: Group Action Logs_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |
      operationId: GroupActionLogs_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 647
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupActionLogs_FetchCollectionresponse'
              example:
                data:
                - id: 647
                  type: groupActionLogs
                  links:
                    self: https://kitsu.io/api/edge/group-action-logs/647
                  attributes:
                    createdAt: 2017-03-12T16:40:59.662Z
                    updatedAt: 2017-03-12T16:40:59.662Z
                    verb: about_changed
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-action-logs/647/relationships/user
                        related: https://kitsu.io/api/edge/group-action-logs/647/user
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-action-logs/647/relationships/group
                        related: https://kitsu.io/api/edge/group-action-logs/647/group
                    target:
                      links:
                        self: https://kitsu.io/api/edge/group-action-logs/647/relationships/target
                        related: https://kitsu.io/api/edge/group-action-logs/647/target
                meta:
                  count: 58
                links:
                  first: https://kitsu.io/api/edge/group-action-logs?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-action-logs?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-action-logs?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-action-logs?page%5Blimit%5D=10&page%5Boffset%5D=48
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-action-logs/{id}:
    get:
      tags:
      - Groups
      summary: Group Action Logs_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |
      operationId: GroupActionLogs_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 647
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupActionLogs_FetchResourceresponse'
              example:
                data:
                  id: 647
                  type: groupActionLogs
                  links:
                    self: https://kitsu.io/api/edge/group-action-logs/647
                  attributes:
                    createdAt: 2017-03-12T16:40:59.662Z
                    updatedAt: 2017-03-12T16:40:59.662Z
                    verb: about_changed
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-action-logs/647/relationships/user
                        related: https://kitsu.io/api/edge/group-action-logs/647/user
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-action-logs/647/relationships/group
                        related: https://kitsu.io/api/edge/group-action-logs/647/group
                    target:
                      links:
                        self: https://kitsu.io/api/edge/group-action-logs/647/relationships/target
                        related: https://kitsu.io/api/edge/group-action-logs/647/target
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-bans:
    get:
      tags:
      - Groups
      summary: Group Bans_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |
      operationId: GroupBans_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupBans_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: groupBans
                  links:
                    self: https://kitsu.io/api/edge/group-bans/1
                  attributes:
                    createdAt: 2017-03-12T16:40:59.662Z
                    updatedAt: 2017-03-12T16:40:59.662Z
                    notes: 
                    notesFormatted: 
                  relationships:
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-bans/1/relationships/group
                        related: https://kitsu.io/api/edge/group-bans/1/group
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-bans/1/relationships/user
                        related: https://kitsu.io/api/edge/group-bans/1/user
                    moderator:
                      links:
                        self: https://kitsu.io/api/edge/group-bans/1/relationships/moderator
                        related: https://kitsu.io/api/edge/group-bans/1/moderator
                meta:
                  count: 1
                links:
                  first: https://kitsu.io/api/edge/group-bans?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-bans?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-bans?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-bans?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Bans_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |
      operationId: GroupBans_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-bans/{id}:
    get:
      tags:
      - Groups
      summary: Group Bans_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |
      operationId: GroupBans_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupBans_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: groupBans
                  links:
                    self: https://kitsu.io/api/edge/group-bans/1
                  attributes:
                    createdAt: 2017-03-12T16:40:59.662Z
                    updatedAt: 2017-03-12T16:40:59.662Z
                    notes: 
                    notesFormatted: 
                  relationships:
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-bans/1/relationships/group
                        related: https://kitsu.io/api/edge/group-bans/1/group
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-bans/1/relationships/user
                        related: https://kitsu.io/api/edge/group-bans/1/user
                    moderator:
                      links:
                        self: https://kitsu.io/api/edge/group-bans/1/relationships/moderator
                        related: https://kitsu.io/api/edge/group-bans/1/moderator
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Group Bans_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |
      operationId: GroupBans_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-categories:
    get:
      tags:
      - Groups
      summary: Group Categories_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: GroupCategories_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupCategories_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: groupCategories
                  links:
                    self: https://kitsu.io/api/edge/group-categories/1
                  attributes:
                    createdAt: 2017-03-12T06:24:28.884Z
                    updatedAt: 2017-03-12T06:24:28.884Z
                    name: Anime & Manga
                    slug: anime-manga
                    description: 
                meta:
                  count: 10
                links:
                  first: https://kitsu.io/api/edge/group-categories?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-categories?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-categories?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-categories?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Categories_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: GroupCategories_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-categories/{id}:
    get:
      tags:
      - Groups
      summary: Group Categories_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: GroupCategories_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupCategories_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: groupCategories
                  links:
                    self: https://kitsu.io/api/edge/group-categories/1
                  attributes:
                    createdAt: 2017-03-12T06:24:28.884Z
                    updatedAt: 2017-03-12T06:24:28.884Z
                    name: Anime & Manga
                    slug: anime-manga
                    description: 
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Group Categories_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: GroupCategories_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Group Categories_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `slug` | |
      operationId: GroupCategories_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-invites:
    get:
      tags:
      - Groups
      summary: Group Invites_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `sender` |

        `user` |

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupInvites_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 28
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupInvites_FetchCollectionresponse'
              example:
                data:
                - id: 28
                  type: groupInvites
                  links:
                    self: https://kitsu.io/api/edge/group-invites/28
                  attributes:
                    createdAt: 2017-03-12T16:55:27.999Z
                    updatedAt: 2017-03-12T19:45:12.292Z
                    acceptedAt: 2017-03-12T19:45:12.186Z
                    declinedAt: 
                    revokedAt: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-invites/28/relationships/user
                        related: https://kitsu.io/api/edge/group-invites/28/user
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-invites/28/relationships/group
                        related: https://kitsu.io/api/edge/group-invites/28/group
                    sender:
                      links:
                        self: https://kitsu.io/api/edge/group-invites/28/relationships/sender
                        related: https://kitsu.io/api/edge/group-invites/28/sender
                meta:
                  count: 1
                links:
                  first: https://kitsu.io/api/edge/group-invites?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-invites?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-invites?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-invites?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Invites_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `sender` |

        `user` |

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupInvites_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 28
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-invites/{id}:
    get:
      tags:
      - Groups
      summary: Group Invites_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `sender` |

        `user` |

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupInvites_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 28
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupInvites_FetchResourceresponse'
              example:
                data:
                  id: 28
                  type: groupInvites
                  links:
                    self: https://kitsu.io/api/edge/group-invites/28
                  attributes:
                    createdAt: 2017-03-12T16:55:27.999Z
                    updatedAt: 2017-03-12T19:45:12.292Z
                    acceptedAt: 2017-03-12T19:45:12.186Z
                    declinedAt: 
                    revokedAt: 
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-invites/28/relationships/user
                        related: https://kitsu.io/api/edge/group-invites/28/user
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-invites/28/relationships/group
                        related: https://kitsu.io/api/edge/group-invites/28/group
                    sender:
                      links:
                        self: https://kitsu.io/api/edge/group-invites/28/relationships/sender
                        related: https://kitsu.io/api/edge/group-invites/28/sender
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Group Invites_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `sender` |

        `user` |

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupInvites_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 28
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Group Invites_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `sender` |

        `user` |

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupInvites_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 28
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-member-notes:
    get:
      tags:
      - Groups
      summary: Group Member Notes_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupMemberNotes_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupMemberNotes_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: groupMemberNotes
                  links:
                    self: https://kitsu.io/api/edge/group-member-notes/1
                  attributes:
                    createdAt: 2017-03-12T16:55:27.999Z
                    updatedAt: 2017-03-12T19:45:12.292Z
                    content: 
                    contentFormatted: 
                  relationships:
                    groupMember:
                      links:
                        self: https://kitsu.io/api/edge/group-member-notes/1/relationships/groupMember
                        related: https://kitsu.io/api/edge/group-member-notes/1/groupMember
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-member-notes/1/relationships/user
                        related: https://kitsu.io/api/edge/group-member-notes/1/user
                meta:
                  count: 1
                links:
                  first: https://kitsu.io/api/edge/group-member-notes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-member-notes?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-member-notes?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-member-notes?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Member Notes_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupMemberNotes_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-member-notes/{id}:
    get:
      tags:
      - Groups
      summary: Group Member Notes_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupMemberNotes_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupMemberNotes_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: groupMemberNotes
                  links:
                    self: https://kitsu.io/api/edge/group-member-notes/1
                  attributes:
                    createdAt: 2017-03-12T16:55:27.999Z
                    updatedAt: 2017-03-12T19:45:12.292Z
                    content: 
                    contentFormatted: 
                  relationships:
                    groupMember:
                      links:
                        self: https://kitsu.io/api/edge/group-member-notes/1/relationships/groupMember
                        related: https://kitsu.io/api/edge/group-member-notes/1/groupMember
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-member-notes/1/relationships/user
                        related: https://kitsu.io/api/edge/group-member-notes/1/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Group Member Notes_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupMemberNotes_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Group Member Notes_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupMemberNotes_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-members:
    get:
      tags:
      - Groups
      summary: Group Members_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `rank` |

        `group` |

        `user` |

        `queryGroup` |

        `queryUser` |

        `queryRank` |

        `groupCategory` |

        `groupName` |

        `query` | | Search resource
      operationId: GroupMembers_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupMembers_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: groupMembers
                  links:
                    self: https://kitsu.io/api/edge/group-members/1
                  attributes:
                    createdAt: 2015-02-17T21:16:53.211Z
                    updatedAt: 2015-02-17T21:16:53.211Z
                    rank: admin
                    unreadCount: 16
                  relationships:
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-members/1/relationships/group
                        related: https://kitsu.io/api/edge/group-members/1/group
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-members/1/relationships/user
                        related: https://kitsu.io/api/edge/group-members/1/user
                    permissions:
                      links:
                        self: https://kitsu.io/api/edge/group-members/1/relationships/permissions
                        related: https://kitsu.io/api/edge/group-members/1/permissions
                    notes:
                      links:
                        self: https://kitsu.io/api/edge/group-members/1/relationships/notes
                        related: https://kitsu.io/api/edge/group-members/1/notes
                meta:
                  count: 264193
                links:
                  first: https://kitsu.io/api/edge/group-members?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-members?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-members?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-members?page%5Blimit%5D=10&page%5Boffset%5D=264183
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Members_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `rank` |

        `group` |

        `user` |

        `queryGroup` |

        `queryUser` |

        `queryRank` |

        `groupCategory` |

        `groupName` |

        `query` | | Search resource
      operationId: GroupMembers_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-members/{id}:
    get:
      tags:
      - Groups
      summary: Group Members_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `rank` |

        `group` |

        `user` |

        `queryGroup` |

        `queryUser` |

        `queryRank` |

        `groupCategory` |

        `groupName` |

        `query` | | Search resource
      operationId: GroupMembers_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupMembers_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: groupMembers
                  links:
                    self: https://kitsu.io/api/edge/group-members/1
                  attributes:
                    createdAt: 2015-02-17T21:16:53.211Z
                    updatedAt: 2015-02-17T21:16:53.211Z
                    rank: admin
                    unreadCount: 16
                  relationships:
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-members/1/relationships/group
                        related: https://kitsu.io/api/edge/group-members/1/group
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-members/1/relationships/user
                        related: https://kitsu.io/api/edge/group-members/1/user
                    permissions:
                      links:
                        self: https://kitsu.io/api/edge/group-members/1/relationships/permissions
                        related: https://kitsu.io/api/edge/group-members/1/permissions
                    notes:
                      links:
                        self: https://kitsu.io/api/edge/group-members/1/relationships/notes
                        related: https://kitsu.io/api/edge/group-members/1/notes
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Group Members_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `rank` |

        `group` |

        `user` |

        `queryGroup` |

        `queryUser` |

        `queryRank` |

        `groupCategory` |

        `groupName` |

        `query` | | Search resource
      operationId: GroupMembers_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Group Members_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `rank` |

        `group` |

        `user` |

        `queryGroup` |

        `queryUser` |

        `queryRank` |

        `groupCategory` |

        `groupName` |

        `query` | | Search resource
      operationId: GroupMembers_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-neighbors:
    get:
      tags:
      - Groups
      summary: Group Neighbors_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `source` |

        `destination` |
      operationId: GroupNeighbors_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupNeighbors_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: groupNeighbors
                  links:
                    self: https://kitsu.io/api/edge/group-neighbors/1
                  attributes:
                    createdAt: 2017-03-12T07:09:00.302Z
                    updatedAt: 2017-03-12T07:09:00.302Z
                  relationships:
                    source:
                      links:
                        self: https://kitsu.io/api/edge/group-neighbors/1/relationships/source
                        related: https://kitsu.io/api/edge/group-neighbors/1/source
                    destination:
                      links:
                        self: https://kitsu.io/api/edge/group-neighbors/1/relationships/destination
                        related: https://kitsu.io/api/edge/group-neighbors/1/destination
                meta:
                  count: 347
                links:
                  first: https://kitsu.io/api/edge/group-neighbors?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-neighbors?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-neighbors?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-neighbors?page%5Blimit%5D=10&page%5Boffset%5D=337
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Neighbors_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `source` |

        `destination` |
      operationId: GroupNeighbors_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-neighbors/{id}:
    get:
      tags:
      - Groups
      summary: Group Neighbors_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `source` |

        `destination` |
      operationId: GroupNeighbors_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupNeighbors_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: groupNeighbors
                  links:
                    self: https://kitsu.io/api/edge/group-neighbors/1
                  attributes:
                    createdAt: 2017-03-12T07:09:00.302Z
                    updatedAt: 2017-03-12T07:09:00.302Z
                  relationships:
                    source:
                      links:
                        self: https://kitsu.io/api/edge/group-neighbors/1/relationships/source
                        related: https://kitsu.io/api/edge/group-neighbors/1/source
                    destination:
                      links:
                        self: https://kitsu.io/api/edge/group-neighbors/1/relationships/destination
                        related: https://kitsu.io/api/edge/group-neighbors/1/destination
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Group Neighbors_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `source` |

        `destination` |
      operationId: GroupNeighbors_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-permissions:
    get:
      tags:
      - Groups
      summary: Group Permissions_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupPermissions_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupPermissions_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: groupPermissions
                  links:
                    self: https://kitsu.io/api/edge/group-permissions/1
                  attributes:
                    createdAt: 2017-03-12T05:12:42.823Z
                    updatedAt: 2017-03-12T05:12:42.823Z
                    permission: community
                  relationships:
                    groupMember:
                      links:
                        self: https://kitsu.io/api/edge/group-permissions/1/relationships/group-member
                        related: https://kitsu.io/api/edge/group-permissions/1/group-member
                meta:
                  count: 5144
                links:
                  first: https://kitsu.io/api/edge/group-permissions?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-permissions?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-permissions?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-permissions?page%5Blimit%5D=10&page%5Boffset%5D=5134
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Permissions_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupPermissions_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-permissions/{id}:
    get:
      tags:
      - Groups
      summary: Group Permissions_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupPermissions_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupPermissions_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: groupPermissions
                  links:
                    self: https://kitsu.io/api/edge/group-permissions/1
                  attributes:
                    createdAt: 2017-03-12T05:12:42.823Z
                    updatedAt: 2017-03-12T05:12:42.823Z
                    permission: community
                  relationships:
                    groupMember:
                      links:
                        self: https://kitsu.io/api/edge/group-permissions/1/relationships/group-member
                        related: https://kitsu.io/api/edge/group-permissions/1/group-member
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Group Permissions_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | Y    | N     | Y

        Yes           | Admin     | Y   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GroupPermissions_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-reports:
    get:
      tags:
      - Groups
      summary: Group Reports_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `user` |

        `naughty` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `reason` | `nsfw`, `spoiler`

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupReports_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupReports_FetchCollectionresponse'
              example:
                data:
                - id: 1
                  type: groupReports
                  links:
                    self: https://kitsu.io/api/edge/group-reports/1
                  attributes:
                    createdAt: 2017-03-12T05:12:42.823Z
                    updatedAt: 2017-03-12T05:12:42.823Z
                    reason: nsfw
                    status: reported
                    explanation: 
                    naughtyType: Comment
                    naughtyId: 1
                  relationships:
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-reports/1/relationships/group
                        related: https://kitsu.io/api/edge/group-reports/1/group
                    naughty:
                      links:
                        self: https://kitsu.io/api/edge/group-reports/1/relationships/naughty
                        related: https://kitsu.io/api/edge/group-reports/1/naughty
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-reports/1/relationships/user
                        related: https://kitsu.io/api/edge/group-reports/1/user
                    moderator:
                      links:
                        self: https://kitsu.io/api/edge/group-reports/1/relationships/moderator
                        related: https://kitsu.io/api/edge/group-reports/1/moderator
                meta:
                  count: 1
                links:
                  first: https://kitsu.io/api/edge/group-reports?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-reports?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-reports?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-reports?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Reports_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `user` |

        `naughty` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `reason` | `nsfw`, `spoiler`

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupReports_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-reports/{id}:
    get:
      tags:
      - Groups
      summary: Group Reports_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `user` |

        `naughty` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `reason` | `nsfw`, `spoiler`

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupReports_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupReports_FetchResourceresponse'
              example:
                data:
                  id: 1
                  type: groupReports
                  links:
                    self: https://kitsu.io/api/edge/group-reports/1
                  attributes:
                    createdAt: 2017-03-12T05:12:42.823Z
                    updatedAt: 2017-03-12T05:12:42.823Z
                    reason: nsfw
                    status: reported
                    explanation: 
                    naughtyType: Comment
                    naughtyId: 1
                  relationships:
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-reports/1/relationships/group
                        related: https://kitsu.io/api/edge/group-reports/1/group
                    naughty:
                      links:
                        self: https://kitsu.io/api/edge/group-reports/1/relationships/naughty
                        related: https://kitsu.io/api/edge/group-reports/1/naughty
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-reports/1/relationships/user
                        related: https://kitsu.io/api/edge/group-reports/1/user
                    moderator:
                      links:
                        self: https://kitsu.io/api/edge/group-reports/1/relationships/moderator
                        related: https://kitsu.io/api/edge/group-reports/1/moderator
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Group Reports_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `user` |

        `naughty` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `reason` | `nsfw`, `spoiler`

        `status` | `current`, `onHold` | Values of the `status` attribute
      operationId: GroupReports_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-ticket-messages:
    get:
      tags:
      - Groups
      summary: Group Ticket Messages_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `ticket` |
      operationId: GroupTicketMessages_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 89
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupTicketMessages_FetchCollectionresponse'
              example:
                data:
                - id: 89
                  type: groupTicketMessages
                  links:
                    self: https://kitsu.io/api/edge/group-ticket-messages/89
                  attributes:
                    createdAt: 2017-06-16T09:11:46.241Z
                    updatedAt: 2017-06-16T09:11:46.241Z
                    kind: message
                    content: Could u please add this recap episode to the series...
                  relationships:
                    ticket:
                      links:
                        self: https://kitsu.io/api/edge/group-ticket-messages/89/relationships/ticket
                        related: https://kitsu.io/api/edge/group-ticket-messages/89/ticket
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-ticket-messages/89/relationships/user
                        related: https://kitsu.io/api/edge/group-ticket-messages/89/user
                meta:
                  count: 2
                links:
                  first: https://kitsu.io/api/edge/group-ticket-messages?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-ticket-messages?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-ticket-messages?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-ticket-messages?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Ticket Messages_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `ticket` |
      operationId: GroupTicketMessages_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 89
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-ticket-messages/{id}:
    get:
      tags:
      - Groups
      summary: Group Ticket Messages_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `ticket` |
      operationId: GroupTicketMessages_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 89
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupTicketMessages_FetchResourceresponse'
              example:
                data:
                  id: 89
                  type: groupTicketMessages
                  links:
                    self: https://kitsu.io/api/edge/group-ticket-messages/89
                  attributes:
                    createdAt: 2017-06-16T09:11:46.241Z
                    updatedAt: 2017-06-16T09:11:46.241Z
                    kind: message
                    content: Could u please add this recap episode to the series...
                  relationships:
                    ticket:
                      links:
                        self: https://kitsu.io/api/edge/group-ticket-messages/89/relationships/ticket
                        related: https://kitsu.io/api/edge/group-ticket-messages/89/ticket
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-ticket-messages/89/relationships/user
                        related: https://kitsu.io/api/edge/group-ticket-messages/89/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Group Ticket Messages_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `ticket` |
      operationId: GroupTicketMessages_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 89
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Group Ticket Messages_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `ticket` |
      operationId: GroupTicketMessages_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 89
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-tickets:
    get:
      tags:
      - Groups
      summary: Group Tickets_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `user` |

        `assignee` |

        `status` | `current`, `onHold` | Values of the `status` attribute

        `queryGroup` |

        `query` | | Search resource
      operationId: GroupTickets_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 41
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupTickets_FetchCollectionresponse'
              example:
                data:
                - id: 41
                  type: groupTickets
                  links:
                    self: https://kitsu.io/api/edge/group-tickets/41
                  attributes:
                    createdAt: 2017-06-16T09:11:46.042Z
                    updatedAt: 2017-07-24T20:02:51.697Z
                    status: resolved
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/user
                        related: https://kitsu.io/api/edge/group-tickets/41/user
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/group
                        related: https://kitsu.io/api/edge/group-tickets/41/group
                    assignee:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/assignee
                        related: https://kitsu.io/api/edge/group-tickets/41/assignee
                    messages:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/messages
                        related: https://kitsu.io/api/edge/group-tickets/41/messages
                    firstMessage:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/firstMessage
                        related: https://kitsu.io/api/edge/group-tickets/41/firstMessage
                meta:
                  count: 2
                links:
                  first: https://kitsu.io/api/edge/group-tickets?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/group-tickets?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/group-tickets?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/group-tickets?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Group Tickets_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `user` |

        `assignee` |

        `status` | `current`, `onHold` | Values of the `status` attribute

        `queryGroup` |

        `query` | | Search resource
      operationId: GroupTickets_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 41
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /group-tickets/{id}:
    get:
      tags:
      - Groups
      summary: Group Tickets_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `user` |

        `assignee` |

        `status` | `current`, `onHold` | Values of the `status` attribute

        `queryGroup` |

        `query` | | Search resource
      operationId: GroupTickets_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 41
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GroupTickets_FetchResourceresponse'
              example:
                data:
                  id: 41
                  type: groupTickets
                  links:
                    self: https://kitsu.io/api/edge/group-tickets/41
                  attributes:
                    createdAt: 2017-06-16T09:11:46.042Z
                    updatedAt: 2017-07-24T20:02:51.697Z
                    status: resolved
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/user
                        related: https://kitsu.io/api/edge/group-tickets/41/user
                    group:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/group
                        related: https://kitsu.io/api/edge/group-tickets/41/group
                    assignee:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/assignee
                        related: https://kitsu.io/api/edge/group-tickets/41/assignee
                    messages:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/messages
                        related: https://kitsu.io/api/edge/group-tickets/41/messages
                    firstMessage:
                      links:
                        self: https://kitsu.io/api/edge/group-tickets/41/relationships/firstMessage
                        related: https://kitsu.io/api/edge/group-tickets/41/firstMessage
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Group Tickets_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | N

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `group` |

        `user` |

        `assignee` |

        `status` | `current`, `onHold` | Values of the `status` attribute

        `queryGroup` |

        `query` | | Search resource
      operationId: GroupTickets_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 41
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /leader-chat-messages:
    get:
      tags:
      - Groups
      summary: Leader Chat Messages_Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `groupId` |
      operationId: LeaderChatMessages_FetchCollection
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 19
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LeaderChatMessages_FetchCollectionresponse'
              example:
                data:
                - id: 19
                  type: leaderChatMessages
                  links:
                    self: https://kitsu.io/api/edge/leader-chat-messages/19
                  attributes:
                    createdAt: 2017-03-12T17:23:36.640Z
                    updatedAt: 2017-03-12T17:23:36.640Z
                    content: Does this work?
                    contentFormatted: <p>Does this work?</p>\n
                    editedAt: 2017-03-12T17:23:36.640Z
                  relationships:
                    group:
                      links:
                        self: https://kitsu.io/api/edge/leader-chat-messages/19/relationships/group
                        related: https://kitsu.io/api/edge/leader-chat-messages/19/group
                    user:
                      links:
                        self: https://kitsu.io/api/edge/leader-chat-messages/19/relationships/user
                        related: https://kitsu.io/api/edge/leader-chat-messages/19/user
                meta:
                  count: 1
                links:
                  first: https://kitsu.io/api/edge/leader-chat-messages?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/leader-chat-messages?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/leader-chat-messages?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/leader-chat-messages?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Groups
      summary: Leader Chat Messages_Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `groupId` |
      operationId: LeaderChatMessages_CreateResource
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 19
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /leader-chat-messages/{id}:
    get:
      tags:
      - Groups
      summary: Leader Chat Messages_Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `groupId` |
      operationId: LeaderChatMessages_FetchResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 19
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LeaderChatMessages_FetchResourceresponse'
              example:
                data:
                  id: 19
                  type: leaderChatMessages
                  links:
                    self: https://kitsu.io/api/edge/leader-chat-messages/19
                  attributes:
                    createdAt: 2017-03-12T17:23:36.640Z
                    updatedAt: 2017-03-12T17:23:36.640Z
                    content: Does this work?
                    contentFormatted: <p>Does this work?</p>\n
                    editedAt: 2017-03-12T17:23:36.640Z
                  relationships:
                    group:
                      links:
                        self: https://kitsu.io/api/edge/leader-chat-messages/19/relationships/group
                        related: https://kitsu.io/api/edge/leader-chat-messages/19/group
                    user:
                      links:
                        self: https://kitsu.io/api/edge/leader-chat-messages/19/relationships/user
                        related: https://kitsu.io/api/edge/leader-chat-messages/19/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Groups
      summary: Leader Chat Messages_Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `groupId` |
      operationId: LeaderChatMessages_UpdateResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 19
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Groups
      summary: Leader Chat Messages_Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | Y   | Y    | Y     | Y

        Yes           | Admin     | N   | N    | N     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `groupId` |
      operationId: LeaderChatMessages_DeleteResource
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 19
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /reports:
    get:
      tags:
      - Reports
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | N   | Y    | Y     | N

        Yes           | Admin     | Y   | N    | Y     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `naughtyId` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `status` | `current`, `onHold` | Values of the `status` attribute

        `reason` | `nsfw`, `spoiler`
      operationId: GetFetchCollection12345678910111213
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse14'
              example:
                data:
                - id: 1
                  type: reports
                  links:
                    self: https://kitsu.io/api/edge/reports/1
                  attributes:
                    createdAt: 2017-05-04T03:53:54.049Z
                    updatedAt: 2017-05-04T03:53:54.049Z
                    reason: bullying
                    status: declined
                    explanation: 
                    naughtyType: Comment
                    naughtyId: 28435305
                  relationships:
                    naughty:
                      links:
                        self: https://kitsu.io/api/edge/reports/1/relationships/naughty
                        related: https://kitsu.io/api/edge/reports/1/naughty
                    user:
                      links:
                        self: https://kitsu.io/api/edge/reports/1/relationships/user
                        related: https://kitsu.io/api/edge/reports/1/user
                    moderator:
                      links:
                        self: https://kitsu.io/api/edge/reports/1/relationships/moderator
                        related: https://kitsu.io/api/edge/reports/1/moderator
                meta:
                  count: 856
                links:
                  first: https://kitsu.io/api/edge/reports?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/reports?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/reports?page%5Blimit%5D=10&page%5Boffset%5D=10
                  last: https://kitsu.io/api/edge/reports?page%5Blimit%5D=10&page%5Boffset%5D=846
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    post:
      tags:
      - Reports
      summary: Create Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | N   | Y    | Y     | N

        Yes           | Admin     | Y   | N    | Y     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `naughtyId` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `status` | `current`, `onHold` | Values of the `status` attribute

        `reason` | `nsfw`, `spoiler`
      operationId: PostCreateResource123456789
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /reports/{id}:
    get:
      tags:
      - Reports
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | N   | Y    | Y     | N

        Yes           | Admin     | Y   | N    | Y     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `naughtyId` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `status` | `current`, `onHold` | Values of the `status` attribute

        `reason` | `nsfw`, `spoiler`
      operationId: GetFetchResource12345678910111213
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse14'
              example:
                data:
                  id: 1
                  type: reports
                  links:
                    self: https://kitsu.io/api/edge/reports/1
                  attributes:
                    createdAt: 2017-05-04T03:53:54.049Z
                    updatedAt: 2017-05-04T03:53:54.049Z
                    reason: bullying
                    status: declined
                    explanation: 
                    naughtyType: Comment
                    naughtyId: 28435305
                  relationships:
                    naughty:
                      links:
                        self: https://kitsu.io/api/edge/reports/1/relationships/naughty
                        related: https://kitsu.io/api/edge/reports/1/naughty
                    user:
                      links:
                        self: https://kitsu.io/api/edge/reports/1/relationships/user
                        related: https://kitsu.io/api/edge/reports/1/user
                    moderator:
                      links:
                        self: https://kitsu.io/api/edge/reports/1/relationships/moderator
                        related: https://kitsu.io/api/edge/reports/1/moderator
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    patch:
      tags:
      - Reports
      summary: Update Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | N   | Y    | Y     | N

        Yes           | Admin     | Y   | N    | Y     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `naughtyId` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `status` | `current`, `onHold` | Values of the `status` attribute

        `reason` | `nsfw`, `spoiler`
      operationId: PatchUpdateResource123456789
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        403:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        409:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
    delete:
      tags:
      - Reports
      summary: Delete Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | N   | N    | N     | N

        Yes           | None      | N   | Y    | Y     | N

        Yes           | Admin     | Y   | N    | Y     | N


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----

        `userId` | `42603`, `2,7`

        `naughtyId` |

        `naughtyType` | `Post`, `Comment`, `Review`, `Reaction`

        `status` | `current`, `onHold` | Values of the `status` attribute

        `reason` | `nsfw`, `spoiler`
      operationId: DeleteResource12345678910
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 1
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: application/vnd.api+json
      responses:
        204:
          description: ''
          headers: {}
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        401:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /site-announcements:
    get:
      tags:
      - Site Announcements
      summary: Fetch Collection
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GetFetchCollection1234567891011121314
      parameters:
      - name: id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 2
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchCollectionresponse15'
              example:
                data:
                - id: 2
                  type: siteAnnouncements
                  links:
                    self: https://kitsu.io/api/edge/site-announcements/2
                  attributes:
                    createdAt: 2017-05-12T02:15:29.309Z
                    updatedAt: 2017-05-12T02:15:29.309Z
                    title: It's update time!
                    description: A new release is upon us. Featuring mostly bug fixes but a few quality of life tweaks!
                    imageUrl: https://media.giphy.com/media/3og0IEXRvwMN0cLSaQ/giphy.gif
                    link: https://medium.com/heykitsu/kitsu-release-notes-may-11th-2017-803bacc10e34
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/site-announcements/2/relationships/user
                        related: https://kitsu.io/api/edge/site-announcements/2/user
                meta:
                  count: 5
                links:
                  first: https://kitsu.io/api/edge/site-announcements?page%5Blimit%5D=10&page%5Boffset%5D=0
                  prev: https://kitsu.io/api/edge/site-announcements?page%5Blimit%5D=10&page%5Boffset%5D=0
                  next: https://kitsu.io/api/edge/site-announcements?page%5Blimit%5D=10&page%5Boffset%5D=0
                  last: https://kitsu.io/api/edge/site-announcements?page%5Blimit%5D=10&page%5Boffset%5D=0
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
  /site-announcements/{id}:
    get:
      tags:
      - Site Announcements
      summary: Fetch Resource
      description: >-
        **Authorisation**


        Authenticated | Role      | GET | POST | PATCH | DELETE

        ------------: | --------: | :-: | :--: | :---: | :----:

        No            | None      | Y   | N    | N     | N

        Yes           | None      | Y   | N    | N     | N

        Yes           | Admin     | Y   | Y    | Y     | Y


        **Filters**


        Filters can be used in `camelCase` or `snake_case` format


        Filter | Example | Notes

        -----: | :------ | :----
      operationId: GetFetchResource1234567891011121314
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: number
          format: double
          example: 2
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FetchResourceresponse15'
              example:
                data:
                  id: 2
                  type: siteAnnouncements
                  links:
                    self: https://kitsu.io/api/edge/site-announcements/2
                  attributes:
                    createdAt: 2017-05-12T02:15:29.309Z
                    updatedAt: 2017-05-12T02:15:29.309Z
                    title: It's update time!
                    description: A new release is upon us. Featuring mostly bug fixes but a few quality of life tweaks!
                    imageUrl: https://media.giphy.com/media/3og0IEXRvwMN0cLSaQ/giphy.gif
                    link: https://medium.com/heykitsu/kitsu-release-notes-may-11th-2017-803bacc10e34
                  relationships:
                    user:
                      links:
                        self: https://kitsu.io/api/edge/site-announcements/2/relationships/user
                        related: https://kitsu.io/api/edge/site-announcements/2/user
        400:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        404:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
        500:
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error406'
              example:
                errors:
                - title: ''
                  detail: ''
                  code: ''
                  status: ''
                  source:
                    pointer: ''
                    parameter: ''
      deprecated: false
components:
  schemas:
    animeCharactersAttributes:
      title: animeCharactersAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        role:
          $ref: '#/components/schemas/role'
    animeCharacters:
      title: animeCharacters
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: animeCharacters
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/animeCharactersAttributes'
        relationships:
          $ref: '#/components/schemas/relationships'
    animeProductionsAttributes:
      title: animeProductionsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        role:
          $ref: '#/components/schemas/role1'
    animeProductions:
      title: animeProductions
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: animeProductions
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/animeProductionsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships1'
    animeStaffAttributes:
      title: animeStaffAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        role:
          type: string
          description: Role of the person (Multiple roles are comma seperated)
          example: Producer
    animeStaff:
      title: animeStaff
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: animeStaff
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/animeStaffAttributes'
        relationships:
          $ref: '#/components/schemas/relationships2'
    castingsAttributes:
      title: castingsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        role:
          type: string
          description: Role of the person (Multiple roles are comma seperated)
          example: producer
        voiceActor:
          type: boolean
          example: false
        featured:
          type: boolean
          example: false
        language:
          type: string
          description: Language casted in
          nullable: true
          example: English
    castings:
      title: castings
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: castings
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/castingsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships3'
    charactersAttributes:
      title: charactersAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        slug:
          type: string
          description: black
          example: jet
        name:
          type: string
          example: Jet Black
        malId:
          type: number
          nullable: true
          example: 3
        description:
          type: string
          nullable: true
          example: Jet, known on his home satellite as the \"Black Dog\"...
        image:
          $ref: '#/components/schemas/image'
    characters:
      title: characters
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: characters
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/charactersAttributes'
        relationships:
          $ref: '#/components/schemas/relationships4'
    mangaCharactersAttributes:
      title: mangaCharactersAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        role:
          $ref: '#/components/schemas/role2'
    mangaCharacters:
      title: mangaCharacters
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: mangaCharacters
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mangaCharactersAttributes'
        relationships:
          $ref: '#/components/schemas/relationships5'
    mangaStaffAttributes:
      title: mangaStaffAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        role:
          type: string
          description: Role of the person (Multiple roles are comma seperated)
          example: producer
    mangaStaff:
      title: mangaStaff
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: mangaStaff
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mangaStaffAttributes'
        relationships:
          $ref: '#/components/schemas/relationships6'
    peopleAttributes:
      title: peopleAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        image:
          type: string
          nullable: true
          example: https://media.kitsu.io/people/images/1/original.jpg?1416260317
        name:
          type: string
          example: Masahiko Minami
        malId:
          type: number
          nullable: true
          example: 6519
    people:
      title: people
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: people
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/peopleAttributes'
        relationships:
          $ref: '#/components/schemas/relationships7'
    producersAttributes:
      title: producersAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        slug:
          type: string
          example: sunrise
        name:
          type: string
          example: Sunrise
    producers:
      title: producers
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: producers
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/producersAttributes'
        relationships:
          $ref: '#/components/schemas/relationships8'
    groupActionLogsAttributes:
      title: groupActionLogsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T16:40:59.662Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T16:40:59.662Z
        verb:
          type: string
          example: about_changed
    groupActionLogs:
      title: groupActionLogs
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 647
        type:
          type: string
          example: groupActionLogs
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupActionLogsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships9'
    groupBansAttributes:
      title: groupBansAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T16:40:59.662Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T16:40:59.662Z
        notes:
          type: string
          nullable: true
        notesFormatted:
          type: string
          nullable: true
    groupBans:
      title: groupBans
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: groupBans
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupBansAttributes'
        relationships:
          $ref: '#/components/schemas/relationships10'
    groupCategoriesAttributes:
      title: groupCategoriesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T06:24:28.884Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T06:24:28.884Z
        name:
          type: string
          example: Anime & Manga
        slug:
          type: string
          example: anime-manga
        description:
          type: string
          nullable: true
    groupCategories:
      title: groupCategories
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: groupCategories
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupCategoriesAttributes'
    groupInvitesAttributes:
      title: groupInvitesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T16:55:27.999Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T19:45:12.292Z
        acceptedAt:
          type: string
          example: 2017-03-12T19:45:12.186Z
        declinedAt:
          type: string
          nullable: true
        revokedAt:
          type: string
          nullable: true
    groupInvites:
      title: groupInvites
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 28
        type:
          type: string
          example: groupInvites
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupInvitesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships11'
    groupMemberNotesAttributes:
      title: groupMemberNotesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T16:55:27.999Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T19:45:12.292Z
        content:
          type: string
          nullable: true
        contentFormatted:
          type: string
          nullable: true
    groupMemberNotes:
      title: groupMemberNotes
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: groupMemberNotes
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupMemberNotesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships12'
    groupMembersAttributes:
      title: groupMembersAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2015-02-17T21:16:53.211Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2015-02-17T21:16:53.211Z
        rank:
          $ref: '#/components/schemas/rank'
        unreadCount:
          type: number
          description: member's unread posts in group
          example: 16
    groupMembers:
      title: groupMembers
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: groupMembers
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupMembersAttributes'
        relationships:
          $ref: '#/components/schemas/relationships13'
    groupNeighborsAttributes:
      title: groupNeighborsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T07:09:00.302Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T07:09:00.302Z
    groupNeighbors:
      title: groupNeighbors
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: groupNeighbors
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupNeighborsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships14'
    groupPermissionsAttributes:
      title: groupPermissionsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T05:12:42.823Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T05:12:42.823Z
        permission:
          $ref: '#/components/schemas/permission'
    groupPermissions:
      title: groupPermissions
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: groupPermissions
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupPermissionsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships15'
    groupReportsAttributes:
      title: groupReportsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T05:12:42.823Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T05:12:42.823Z
        reason:
          $ref: '#/components/schemas/reason'
        status:
          $ref: '#/components/schemas/status'
        explanation:
          type: string
          nullable: true
        naughtyType:
          type: string
          example: Comment
        naughtyId:
          type: number
          example: 1
    groupReports:
      title: groupReports
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: groupReports
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupReportsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships16'
    groupTicketMessagesAttributes:
      title: groupTicketMessagesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-06-16T09:11:46.241Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-06-16T09:11:46.241Z
        kind:
          $ref: '#/components/schemas/kind'
        content:
          type: string
          example: Could u please add this recap episode to the series...
    groupTicketMessages:
      title: groupTicketMessages
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 89
        type:
          type: string
          example: groupTicketMessages
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupTicketMessagesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships17'
    groupTicketsAttributes:
      title: groupTicketsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-06-16T09:11:46.042Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-24T20:02:51.697Z
        status:
          $ref: '#/components/schemas/status1'
    groupTickets:
      title: groupTickets
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 41
        type:
          type: string
          example: groupTickets
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupTicketsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships18'
    groupsAttributes:
      title: groupsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2015-02-17T21:16:53.207Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-10-26T20:51:24.215Z
        slug:
          type: string
          example: one-piece-group
        about:
          type: string
          example: Group for fans of the One Piece anime and or manga...
        locale:
          type: string
          nullable: true
        membersCount:
          type: number
          example: 548
        name:
          type: string
          example: One Piece group
        nsfw:
          type: boolean
          example: false
        privacy:
          $ref: '#/components/schemas/privacy'
        rules:
          type: string
          nullable: true
        rulesFormatted:
          type: string
          nullable: true
        leadersCount:
          type: number
          example: 2
        neighborsCount:
          type: number
          example: 0
        featured:
          type: boolean
          example: false
        tagline:
          type: string
          nullable: true
        lastActivityAt:
          type: string
          example: 2017-10-26T17:56:45.259Z
        avatar:
          $ref: '#/components/schemas/avatar'
        coverImage:
          $ref: '#/components/schemas/coverImage'
    groups:
      title: groups
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: groups
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/groupsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships19'
    leaderChatMessagesAttributes:
      title: leaderChatMessagesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-03-12T17:23:36.640Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-03-12T17:23:36.640Z
        content:
          type: string
          example: Does this work?
        contentFormatted:
          type: string
          example: <p>Does this work?</p>\n
        editedAt:
          type: string
          example: 2017-03-12T17:23:36.640Z
    leaderChatMessages:
      title: leaderChatMessages
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 19
        type:
          type: string
          example: leaderChatMessages
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/leaderChatMessagesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships20'
    animeAttributes:
      title: animeAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-02-20T16:00:13.609Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-12-20T00:00:09.270Z
        slug:
          type: string
          example: cowboy-bebop
        synopsis:
          type: string
          example: In the year 2071, humanity has colonoized several of the planets and moons...
        coverImageTopOffset:
          type: number
          description: Deprecated
          nullable: true
          example: 400
        titles:
          $ref: '#/components/schemas/titles'
        canonicalTitle:
          type: string
          example: Cowboy Bebop
        abbreviatedTitles:
          type: array
          items:
            type: string
          description: ''
        averageRating:
          type: string
          example: 88.55
        ratingFrequencies:
          type: object
          additionalProperties:
            type: string
        userCount:
          type: number
          example: 43409
        favoritesCount:
          type: number
          example: 3485
        startDate:
          type: string
          description: YYYY-MM-DD date
          example: 1998-04-03
        endDate:
          type: string
          description: YYYY-MM-DD date
          example: 1999-04-24
        popularityRank:
          type: number
          example: 10
        ratingRank:
          type: number
          example: 10
        ageRating:
          $ref: '#/components/schemas/ageRating'
        ageRatingGuide:
          type: string
          nullable: true
          example: 17+ (violence & profanity)
        subtype:
          $ref: '#/components/schemas/subtype'
        status:
          $ref: '#/components/schemas/status2'
        tba:
          type: string
        posterImage:
          $ref: '#/components/schemas/posterImage'
        coverImage:
          $ref: '#/components/schemas/coverImage'
        episodeCount:
          type: number
          example: 26
        episodeLength:
          type: number
          description: Length of episode in minutes
          example: 25
        youtubeVideoId:
          type: string
          description: ID of a youtube trailer
          example: qig4KOK2R2g
        showType:
          $ref: '#/components/schemas/showType'
        nsfw:
          type: boolean
          description: NSFW media requires authentication
          example: false
    anime:
      title: anime
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: anime
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/animeAttributes'
        relationships:
          $ref: '#/components/schemas/relationships21'
    categoriesAttributes:
      title: categoriesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-05-31T06:38:31.311Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-05-31T06:39:36.873Z
        title:
          type: string
          example: Elf
        description:
          type: string
          example: The origin of Elves (Norse; álfar(elves), álfr(elf)) can be found in ancient Norse mythology...
        totalMediaCount:
          type: number
          example: 40
        slug:
          type: string
          example: elf
        nsfw:
          type: boolean
          description: NSFW categories requires authentication
          example: false
        childCount:
          type: number
          example: 0
        image:
          $ref: '#/components/schemas/image1'
    categories:
      title: categories
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 10
        type:
          type: string
          example: categories
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/categoriesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships22'
    categoryFavoritesAttributes:
      title: categoryFavoritesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-05-31T13:32:16.323Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-05-31T13:32:16.323Z
    categoryFavorites:
      title: categoryFavorites
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 2
        type:
          type: string
          example: categoryFavorites
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/categoryFavoritesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships23'
    chaptersAttributes:
      title: chaptersAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        titles:
          $ref: '#/components/schemas/titles1'
        canonicalTitle:
          type: string
          example: 'Mission 01: Magical Five'
        volumeNumber:
          type: number
          example: 1
        number:
          type: number
          description: Absolute chapter number
          example: 1
        synopsis:
          type: string
        published:
          type: string
          description: YYYY-MM-DD date
          example: 2015-06-25
        length:
          type: string
          description: Number of pages in chapter
          nullable: true
          example: 80
        thumbnail:
          $ref: '#/components/schemas/thumbnail'
    chapters:
      title: chapters
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 403830
        type:
          type: string
          example: chapters
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/chaptersAttributes'
        relationships:
          $ref: '#/components/schemas/relationships24'
    dramaAttributes:
      title: dramaAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        slug:
          type: string
        synopsis:
          type: string
        coverImageTopOffset:
          type: number
          description: Deprecated
          nullable: true
          example: 400
        titles:
          $ref: '#/components/schemas/titles'
        canonicalTitle:
          type: string
        abbreviatedTitles:
          type: array
          items:
            type: string
          description: ''
        averageRating:
          type: string
        ratingFrequencies:
          type: object
          additionalProperties:
            type: string
        userCount:
          type: number
          example: 40405
        favoritesCount:
          type: number
          example: 3277
        startDate:
          type: string
          description: YYYY-MM-DD date
          example: 1998-04-03
        endDate:
          type: string
          description: YYYY-MM-DD date
          example: 1999-04-04
        popularityRank:
          type: number
          example: 10
        ratingRank:
          type: number
          example: 10
        ageRating:
          $ref: '#/components/schemas/ageRating'
        ageRatingGuide:
          type: string
          nullable: true
          example: 17+ (violence & profanity)
        subtype:
          $ref: '#/components/schemas/subtype1'
        status:
          $ref: '#/components/schemas/status2'
        tba:
          type: string
        posterImage:
          $ref: '#/components/schemas/posterImage'
        coverImage:
          $ref: '#/components/schemas/coverImage'
        episodeCount:
          type: number
          example: 26
        episodeLength:
          type: number
          description: Length of episode in minutes
          example: 24
        youtubeVideoId:
          type: string
          description: ID of a youtube trailer
        nsfw:
          type: boolean
          description: NSFW media requires authentication
          example: false
    drama:
      title: drama
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: drama
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/dramaAttributes'
        relationships:
          $ref: '#/components/schemas/relationships25'
    episodesAttributes:
      title: episodesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-02-20T18:20:39.003Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2014-11-18T16:20:14.856Z
        titles:
          $ref: '#/components/schemas/titles1'
        canonicalTitle:
          type: string
          example: The $$60 Billion Man
        seasonNumber:
          type: number
          example: 1
        number:
          type: number
          example: 1
        relativeNumber:
          type: number
          example: 1
        synopsis:
          type: string
          example: There are many rumors circulating...
        airdate:
          type: string
          description: YYYY-MM-DD date
          example: 1998-04-01
        length:
          type: string
          description: length of episode in minutes
          nullable: true
        thumbnail:
          $ref: '#/components/schemas/thumbnail'
    episodes:
      title: episodes
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 28
        type:
          type: string
          example: episodes
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/episodesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships26'
    franchisesAttributes:
      title: franchisesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-07-07T07:44:54.484Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2013-07-07T07:44:54.484Z
        titles:
          $ref: '#/components/schemas/titles4'
        canonicalTitle:
          type: string
          nullable: true
    franchises:
      title: franchises
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: franchises
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/franchisesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships27'
    genresAttributes:
      title: genresAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-02-20T16:00:15.623Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2016-07-17T19:30:56.164Z
        name:
          type: string
          example: Action
        slug:
          type: string
          example: action
        description:
          type: string
          nullable: true
    genres:
      title: genres
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: genres
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/genresAttributes'
    installmentsAttributes:
      title: installmentsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        tag:
          type: string
          nullable: true
        position:
          type: number
    installments:
      title: installments
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: installments
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/installmentsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships28'
    mangaAttributes:
      title: mangaAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-12-18T13:59:39.232Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-12-24T00:00:19.819Z
        slug:
          type: string
          example: shingeki-no-kyojin
        synopsis:
          type: string
          example: Several hundred years ago...
        coverImageTopOffset:
          type: number
          description: Deprecated
          nullable: true
          example: 112
        titles:
          $ref: '#/components/schemas/titles'
        canonicalTitle:
          type: string
          example: Attack on Titan
        abbreviatedTitles:
          type: array
          items:
            type: string
          description: ''
          nullable: true
        averageRating:
          type: string
          example: 82.47
        ratingFrequencies:
          type: object
          additionalProperties:
            type: string
        userCount:
          type: number
          example: 7137
        favoritesCount:
          type: number
          example: 758
        startDate:
          type: string
          description: YYYY-MM-DD date
          nullable: true
          example: 2009-09-09
        endDate:
          type: string
          description: YYYY-MM-DD date
          nullable: true
        popularityRank:
          type: number
          example: 2
        ratingRank:
          type: number
          example: 138
        ageRating:
          $ref: '#/components/schemas/ageRating'
        ageRatingGuide:
          type: string
          nullable: true
          example: Horror
        subtype:
          $ref: '#/components/schemas/subtype2'
        status:
          $ref: '#/components/schemas/status2'
        tba:
          type: string
        posterImage:
          $ref: '#/components/schemas/posterImage'
        coverImage:
          $ref: '#/components/schemas/coverImage'
        chapterCount:
          type: number
          nullable: true
        volumeCount:
          type: number
          nullable: true
          example: 0
        serialization:
          type: string
          nullable: true
          example: Bessatsu Shounen Magazine
        mangaType:
          $ref: '#/components/schemas/mangaType'
    manga:
      title: manga
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 14916
        type:
          type: string
          example: manga
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mangaAttributes'
        relationships:
          $ref: '#/components/schemas/relationships29'
    mappingsAttributes:
      title: mappingsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        externalSite:
          $ref: '#/components/schemas/externalSite'
        externalId:
          type: string
          example: 31608
    mappings:
      title: mappings
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: mappings
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mappingsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships30'
    mediaAttributeVotesAttributes:
      title: mediaAttributeVotesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        vote:
          type: string
          example: 1
    mediaAttributeVotes:
      title: mediaAttributeVotes
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: mediaAttributeVotes
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mediaAttributeVotesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships31'
    mediaAttributesAttributes:
      title: mediaAttributesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        title:
          type: string
        highTitle:
          type: string
        neutralTitle:
          type: string
        lowTitle:
          type: string
    mediaAttributes:
      title: mediaAttributes
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: mediaAttributes
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mediaAttributesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships32'
    mediaFollows:
      title: mediaFollows
      required:
      - id
      - type
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        id:
          type: string
          example: 1
        type:
          type: string
          example: mediaFollows
        links:
          $ref: '#/components/schemas/links144'
        relationships:
          $ref: '#/components/schemas/relationships33'
    mediaRelationshipsAttributes:
      title: mediaRelationshipsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        role:
          $ref: '#/components/schemas/role3'
    mediaRelationships:
      title: mediaRelationships
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: mediaRelationships
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mediaRelationshipsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships14'
    streamersAttributes:
      title: streamersAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        siteName:
          type: string
          example: Hulu
        streamingLinksCount:
          type: number
          example: 760
        logo:
          type: string
          nullable: true
    streamers:
      title: streamers
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: streamers
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/streamersAttributes'
        relationships:
          $ref: '#/components/schemas/relationships35'
    streamingLinksAttributes:
      title: streamingLinksAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        url:
          type: string
          example: http://www.hulu.com/hacklegend-of-the-twilight
        subs:
          type: array
          items:
            type: string
          description: ''
        dubs:
          type: array
          items:
            type: string
          description: ''
    streamingLinks:
      title: streamingLinks
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: streamingLinks
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/streamingLinksAttributes'
        relationships:
          $ref: '#/components/schemas/relationships36'
    commentLikesAttributes:
      title: commentLikesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2016-12-12T14:42:03.440Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2016-12-12T14:42:03.440Z
    commentLikes:
      title: commentLikes
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 3
        type:
          type: string
          example: commentLikes
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/commentLikesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships37'
    commentsAttributes:
      title: commentsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2014-08-07T19:08:14.364Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2014-08-07T19:08:14.364Z
        content:
          type: string
          example: This is a test.
        contentFormatted:
          type: string
          example: This is a test.
        blocked:
          type: boolean
          example: false
        deletedAt:
          type: string
          nullable: true
        likesCount:
          type: number
          example: 0
        repliesCount:
          type: number
          example: 0
        editedAt:
          type: string
          nullable: true
        embed:
          type: string
          nullable: true
        embedUrl:
          type: string
          nullable: true
    comments:
      title: comments
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 7760392
        type:
          type: string
          example: comments
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/commentsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships38'
    postLikesAttributes:
      title: postLikesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2016-11-02T00:20:19.057Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2016-11-02T00:20:19.057Z
    postLikes:
      title: postLikes
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: postLikes
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/postLikesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships39'
    postFollowsAttributes:
      title: postFollowsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-05-04T03:53:54.049Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-05-04T03:53:54.049Z
    postFollows:
      title: postFollows
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 3
        type:
          type: string
          example: postFollows
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/postFollowsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships39'
    postsAttributes:
      title: postsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-06-21T20:15:54.522Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-06-27T14:08:22.843Z
        content:
          type: string
          example: I like cats. http://i.imgur.com/mJBJfzf.jpg
        contentFormatted:
          type: string
          example: I like cats. <a href="http://i.imgur.com/mJBJfzf.jpg" target="_blank">...
        commentsCount:
          type: number
          example: 13
        postLikesCount:
          type: number
          example: 2
        spoiler:
          type: boolean
          example: false
        nsfw:
          type: boolean
          example: false
        blocked:
          type: boolean
          example: false
        deletedAt:
          type: string
          nullable: true
        topLevelCommentsCount:
          type: number
          example: 12
        editedAt:
          type: string
          nullable: true
        targetInterest:
          type: string
          nullable: true
        embed:
          type: string
          nullable: true
        embedUrl:
          type: string
          nullable: true
    posts:
      title: posts
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 167585
        type:
          type: string
          example: posts
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/postsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships41'
    reportsAttributes:
      title: reportsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-05-04T03:53:54.049Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-05-04T03:53:54.049Z
        reason:
          $ref: '#/components/schemas/reason'
        status:
          $ref: '#/components/schemas/status5'
        explanation:
          type: string
          nullable: true
        naughtyType:
          type: string
          example: Comment
        naughtyId:
          type: number
          example: 28435305
    reports:
      title: reports
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: reports
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/reportsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships42'
    mediaReactionVotesAttributes:
      title: mediaReactionVotesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-25T09:42:00.190Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-25T09:42:00.190Z
    mediaReactionVotes:
      title: mediaReactionVotes
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: mediaReactionVotes
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mediaReactionVotesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships43'
    mediaReactionsAttributes:
      title: mediaReactionsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-25T09:40:43.455Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-25T09:40:43.455Z
        reaction:
          type: string
          example: A well-crafted story of paradoxical pain and suffering. Not as painful however as the slow pace of chapter releases.
        upVotesCount:
          type: number
          example: 4
    mediaReactions:
      title: mediaReactions
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 4
        type:
          type: string
          example: mediaReactions
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/mediaReactionsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships44'
    reviewLikesAttributes:
      title: reviewLikesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2014-01-04T06:21:44.394Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2014-01-04T06:21:44.394Z
    reviewLikes:
      title: reviewLikes
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: reviewLikes
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/reviewLikesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships45'
    reviewsAttributes:
      title: reviewsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-03-04T18:29:01.441Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2016-12-19T08:01:58.532Z
        content:
          type: string
          example: The Anime \"Seinfeld\". Seriously, I love this show. It shines in it's dialog, and if you...
        contentFormatted:
          type: string
          example: <p>The Anime \"Seinfeld\". Seriously, I love this show. It shines in it's dialog, and if you...
        likesCount:
          type: number
          example: 3
        progress:
          type: string
          nullable: true
        rating:
          type: number
          example: 20
        source:
          type: string
          example: hummingbird
        spoiler:
          type: boolean
          example: false
    reviews:
      title: reviews
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 4
        type:
          type: string
          example: reviews
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/reviewsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships46'
    siteAnnouncementsAttributes:
      title: siteAnnouncementsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-05-12T02:15:29.309Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-05-12T02:15:29.309Z
        title:
          type: string
          example: It's update time!
        description:
          type: string
          example: A new release is upon us. Featuring mostly bug fixes but a few quality of life tweaks!
        imageUrl:
          type: string
          example: https://media.giphy.com/media/3og0IEXRvwMN0cLSaQ/giphy.gif
        link:
          type: string
          example: https://medium.com/heykitsu/kitsu-release-notes-may-11th-2017-803bacc10e34
    siteAnnouncements:
      title: siteAnnouncements
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 2
        type:
          type: string
          example: siteAnnouncements
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/siteAnnouncementsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships47'
    libraryEntriesAttributes:
      title: libraryEntriesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-03-03T23:07:42.713Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2016-01-15T05:53:48.037Z
        status:
          $ref: '#/components/schemas/status6'
        progress:
          type: number
          description: Current episode or chapter
          example: 13
        volumesOwned:
          type: number
          description: Manga only
          example: 0
        reconsuming:
          type: boolean
          example: false
        reconsumeCount:
          type: number
          example: 0
        notes:
          type: string
          nullable: true
        private:
          type: boolean
          example: false
        reactionSkipped:
          $ref: '#/components/schemas/reactionSkipped'
        progressedAt:
          type: string
          description: ISO 8601 of last chapter/episode change
          nullable: true
          example: 2016-01-15T05:53:48.037Z
        startedAt:
          type: string
          description: ISO 8601 of when the user consumed the first chapter/episode
          nullable: true
        finishedAt:
          type: string
          description: ISO 8601 of when the user consumed the last chapter/episode
          nullable: true
          example: 2016-01-15T05:53:48.037Z
        rating:
          type: string
          description: Deprecated in favour of `ratingTwenty`
          example: 3.5
        ratingTwenty:
          type: number
          description: 2,3..20 rating scale, displayed as 1,1.5..10
          example: 14
    libraryEntries:
      title: libraryEntries
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1644
        type:
          type: string
          example: libraryEntries
        attributes:
          $ref: '#/components/schemas/libraryEntriesAttributes'
        links:
          $ref: '#/components/schemas/links'
        relationships:
          $ref: '#/components/schemas/relationships48'
    libraryEntryLogsAttributes:
      title: libraryEntryLogsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-09-23T00:00:37.565Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-09-23T00:00:38.677Z
        progress:
          type: number
          example: 8
        rating:
          type: number
          nullable: true
          example: 14
        reconsumeCount:
          type: number
          example: 0
        reconsuming:
          type: boolean
          example: false
        status:
          $ref: '#/components/schemas/status6'
        volumesOwned:
          type: number
          example: 0
        actionPerformed:
          $ref: '#/components/schemas/actionPerformed'
        syncStatus:
          $ref: '#/components/schemas/syncStatus'
        errorMessage:
          type: string
          nullable: true
    libraryEntryLogs:
      title: libraryEntryLogs
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 917564
        type:
          type: string
          example: libraryEntryLogs
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/libraryEntryLogsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships49'
    libraryEventsAttributes:
      title: libraryEventsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-09-23T00:00:37.565Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-09-23T00:00:37.565Z
        notes:
          type: string
          nullable: true
        nsfw:
          type: boolean
          example: false
        private:
          type: boolean
          example: false
        progress:
          type: number
          example: 2
        rating:
          type: number
          nullable: true
          example: 14
        reconsuming:
          type: boolean
          example: false
        reconsumeCount:
          type: number
          example: 0
        volumesOwned:
          type: number
          example: 0
        timeSpent:
          type: number
          example: 0
        status:
          $ref: '#/components/schemas/status6'
        event:
          $ref: '#/components/schemas/event'
        changedData:
          type: object
    libraryEvents:
      title: libraryEvents
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: libraryEvents
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/libraryEventsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships50'
    listImportsAttributes:
      title: listImportsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-08-22T20:37:04.815Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-08-22T20:41:29.814Z
        kind:
          type: string
          example: my-anime-list-xml
        inputText:
          type: string
          nullable: true
        strategy:
          $ref: '#/components/schemas/strategy'
        inputFile:
          $ref: '#/components/schemas/inputFile'
        progress:
          type: number
          example: 388
        status:
          $ref: '#/components/schemas/status9'
        total:
          type: number
          example: 388
        errorMessage:
          type: string
          nullable: true
        errorTrace:
          type: string
          nullable: true
    listImports:
      title: listImports
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 8665
        type:
          type: string
          example: listImports
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/listImportsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships47'
    blocksAttributes:
      title: blocksAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-09-23T00:00:37.565Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-09-23T00:00:37.565Z
    blocks:
      title: blocks
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: blocks
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/blocksAttributes'
        relationships:
          $ref: '#/components/schemas/relationships52'
    favoritesAttributes:
      title: favoritesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-09-06T17:25:17.578Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-02-05T14:15:58.435Z
        favRank:
          type: number
          example: 10
    favorites:
      title: favorites
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: favorites
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/favoritesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships53'
    followsAttributes:
      title: followsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-05-05T18:10:52.800Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2013-05-05T18:10:52.800Z
    follows:
      title: follows
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 3
        type:
          type: string
          example: follows
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/followsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships54'
    linkedAccountsAttributes:
      title: linkedAccountsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-08-22T20:36:46.580Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-08-22T20:36:46.580Z
        kind:
          type: string
          example: my-anime-list
        externalUserId:
          type: string
          example: synthtech
        token:
          $ref: '#/components/schemas/token'
        shareTo:
          type: boolean
          example: false
        shareFrom:
          type: boolean
          example: false
        syncTo:
          type: boolean
          example: true
        disabledReason:
          type: string
          nullable: true
    linkedAccounts:
      title: linkedAccounts
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1911
        type:
          type: string
          example: linkedAccounts
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/linkedAccountsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships55'
    profileLinkSitesAttributes:
      title: profileLinkSitesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-01-11T03:41:35.005Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-02-09T00:03:02.975Z
        name:
          type: string
          example: Twitter
    profileLinkSites:
      title: profileLinkSites
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: profileLinkSites
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/profileLinkSitesAttributes'
    profileLinksAttributes:
      title: profileLinksAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-27T22:21:26.824Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-07-27T22:47:45.129Z
        url:
          type: string
          example: https://github.com/vevix
    profileLinks:
      title: profileLinks
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: profileLinks
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/profileLinksAttributes'
        relationships:
          $ref: '#/components/schemas/relationships56'
    rolesAttributes:
      title: rolesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2016-12-12T14:32:06.707Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2016-12-12T14:32:06.707Z
        name:
          type: string
          example: admin
        resourceId:
          type: string
          nullable: true
        resourceType:
          type: string
          nullable: true
    roles:
      title: roles
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: roles
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/rolesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships57'
    statsAttributes:
      title: statsAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2017-07-28T02:14:07.389Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-10-20T19:07:02.241Z
        kind:
          $ref: '#/components/schemas/kind1'
        statsData:
          $ref: '#/components/schemas/statsData'
    stats:
      title: stats
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 587798
        type:
          type: string
          example: stats
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/statsAttributes'
        relationships:
          $ref: '#/components/schemas/relationships47'
    userRolesAttributes:
      title: userRolesAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2016-12-12T14:32:06.707Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2016-12-12T14:32:06.707Z
    userRoles:
      title: userRoles
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: userRoles
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/userRolesAttributes'
        relationships:
          $ref: '#/components/schemas/relationships59'
    usersAttributes:
      title: usersAttributes
      type: object
      properties:
        createdAt:
          type: string
          description: ISO 8601 date and time
          example: 2013-02-20T16:21:01.289Z
        updatedAt:
          type: string
          description: ISO 8601 of last modification
          example: 2017-06-06T20:17:07.447Z
        name:
          type: string
          example: vikhyat
        pastNames:
          type: array
          items:
            type: string
          description: ''
        slug:
          type: string
          example: vikhyat
        about:
          type: string
          description: Max length of 500 characters
          example: Co-founder of Hummingbird. Obsessed with Gumi.
        location:
          type: string
          example: Seattle, WA
        waifuOrHusbando:
          type: string
          example: Waifu
        followersCount:
          type: number
          example: 1716
        followingCount:
          type: number
          example: 2031
        lifeSpentOnAnime:
          type: number
          description: Deprecated, use the `stats` relationship
          example: 45474
        birthday:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        commentsCount:
          type: number
          example: 0
        favoritesCount:
          type: number
          example: 4
        likesGivenCount:
          type: number
          example: 34
        reviewsCount:
          type: number
          example: 0
        likesReceivedCount:
          type: number
          example: 7
        postsCount:
          type: number
          example: 1
        ratingsCount:
          type: number
          example: 0
        mediaReactionsCount:
          type: number
          example: 0
        proExpiresAt:
          type: string
          example: 2015-01-30T16:49:35.173Z
        title:
          type: string
          nullable: true
        profileCompleted:
          type: boolean
          description: Completed profile onboarding
          example: false
        feedCompleted:
          type: boolean
          description: Completed feeds onboarding
          example: true
        website:
          type: string
          description: Deprecated, use the `profileLinks` relationship
          example: http://twitter.com/vikhyatk
        proTier:
          type: string
          example: pro
        avatar:
          $ref: '#/components/schemas/avatar1'
        coverImage:
          $ref: '#/components/schemas/coverImage4'
        email:
          type: string
          description: Logged in user only
        password:
          type: string
          description: Logged in user only. Used to set new password, always displays null
          nullable: true
        confirmed:
          type: boolean
          description: Logged in user only. Email confirmed
          example: true
        previousEmail:
          type: string
          description: Logged in user only
          nullable: true
        language:
          type: string
          description: Logged in user only
          nullable: true
        timeZone:
          type: string
          description: Logged in user only
          nullable: true
        country:
          type: string
          description: Logged in user only.
          example: US
        shareToGlobal:
          type: boolean
          description: Logged in user only
          example: true
        titleLanguagePreference canonical:
          $ref: '#/components/schemas/titleLanguagePreferencecanonical'
        sfwFilter:
          type: boolean
          description: Logged in user only. Toggle visibility of NSFW media and posts
          example: false
        ratingSystem:
          $ref: '#/components/schemas/ratingSystem'
        theme:
          $ref: '#/components/schemas/theme'
        facebookId:
          type: string
          description: Logged in user only
          nullable: true
        hasPassword:
          type: boolean
          description: Logged in user only
          example: true
        status:
          type: string
          example: registered
        subscribedToNewsletter:
          type: boolean
          example: true
        aoPro:
          type: string
          description: Logged in user only. Aozora user imports that had Aozora Pro - treated as Kitsu Pro
          nullable: true
    users:
      title: users
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          example: 1
        type:
          type: string
          example: users
        links:
          $ref: '#/components/schemas/links'
        attributes:
          $ref: '#/components/schemas/usersAttributes'
        relationships:
          $ref: '#/components/schemas/relationships60'
    Error:
      title: Error
      type: object
      properties:
        title:
          type: string
          description: a short, human-readable summary of the error. It SHOULD NOT change from occurence to occurenace
        detail:
          type: string
          description: a human-readable explanation for this specific error
        code:
          type: string
          description: a unique identifier for this error type
        status:
          type: string
          description: a HTTP status code ([RFC2616](https://tools.ietf.org/html/rfc2616#section-6), Section 6) generated by the origin server
        source:
          $ref: '#/components/schemas/source2'
      description: >-
        Error objects provide additional information about errors

        encountered while performing an operation. See

        [JSON API/#error-objects](http://jsonapi.org/format/#error-objects)
    Error406:
      title: Error406
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: ''
    actionLogs:
      title: actionLogs
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    actionPerformed:
      title: actionPerformed
      enum:
      - create
      - destroy
      - update
      type: string
    activity:
      title: activity
      type: object
      properties:
        id:
          type: number
          example: 231341
        event:
          type: string
          example: updated
        user_id:
          type: number
          example: 18097
        anime_id:
          type: number
          nullable: true
          example: 41
        drama_id:
          type: number
          nullable: true
        manga_id:
          type: number
          nullable: true
        created_at:
          type: string
          example: 2017-06-13T05:12:24.186Z
        updated_at:
          type: string
          example: 2017-06-13T05:12:24.186Z
        changed_data:
          $ref: '#/components/schemas/changed_data'
        library_entry_id:
          type: number
          example: 17413724
    ageRating:
      title: ageRating
      enum:
      - G
      - PG
      - R
      - R18
      type: string
    all_categories:
      title: all_categories
      type: object
      properties:
        war:
          type: number
          example: 13
        asia:
          type: number
          example: 106
        cops:
          type: number
          example: 10
        idol:
          type: number
          example: 4
        mars:
          type: number
          example: 2
        navy:
          type: number
          example: 3
        past:
          type: number
          example: 11
        alien:
          type: number
          example: 21
        angel:
          type: number
          example: 2
        angst:
          type: number
          example: 32
        china:
          type: number
          example: 1
        crime:
          type: number
          example: 10
        deity:
          type: number
          example: 6
        demon:
          type: number
          example: 6
      description: Omitted if not **category-breakdown** kind
    all_time:
      title: all_time
      type: object
      properties:
        total_time:
          type: number
          description: Time in minutes
          example: 144734
        total_media:
          type: number
          example: 273
        total_progress:
          type: number
          description: Total chapters or episodes
          example: 5728
      description: Omitted if not **amount-consumed** kind
    ama:
      title: ama
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    AnimeStaff_FetchCollectionresponse:
      title: AnimeStaff_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/animeStaff'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    AnimeStaff_FetchResourceresponse:
      title: AnimeStaff_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/animeStaff'
    anime1:
      title: anime1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    animeCharacters1:
      title: animeCharacters1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    animeMediaAttribute:
      title: animeMediaAttribute
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    animeProductions1:
      title: animeProductions1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    animeStaff1:
      title: animeStaff1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    application:
      title: application
      type: object
      properties:
        uid:
          type: string
    assignee:
      title: assignee
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    avatar:
      title: avatar
      type: object
      properties:
        tiny:
          type: string
          example: https://media.kitsu.io/groups/avatars/1/tiny.gif?1424323296
        small:
          type: string
          example: https://media.kitsu.io/groups/avatars/1/small.gif?1424323296
        medium:
          type: string
          example: https://media.kitsu.io/groups/avatars/1/medium.gif?1424323296
        large:
          type: string
          example: https://media.kitsu.io/groups/avatars/1/large.gif?1424323296
        original:
          type: string
          example: https://media.kitsu.io/groups/avatars/1/original.gif?1424323296
        meta:
          $ref: '#/components/schemas/meta'
    avatar1:
      title: avatar1
      type: object
      properties:
        tiny:
          type: string
          example: https://media.kitsu.io/users/avatars/1/tiny.jpg?1434087646
        small:
          type: string
          example: https://media.kitsu.io/users/avatars/1/small.jpg?1434087646
        medium:
          type: string
          example: https://media.kitsu.io/users/avatars/1/medium.jpg?1434087646
        large:
          type: string
          example: https://media.kitsu.io/users/avatars/1/large.jpg?1434087646
        original:
          type: string
          example: https://media.kitsu.io/users/avatars/1/original.jpg?1434087646
        meta:
          $ref: '#/components/schemas/meta12'
    blocked:
      title: blocked
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    blocks1:
      title: blocks1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    Castings_FetchCollectionresponse:
      title: Castings_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/castings'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Castings_FetchResourceresponse:
      title: Castings_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/castings'
    castings2:
      title: castings2
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    categories2:
      title: categories2
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    category:
      title: category
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    CategoryFavorites_FetchCollectionresponse:
      title: CategoryFavorites_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/categoryFavorites'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    CategoryFavorites_FetchResourceresponse:
      title: CategoryFavorites_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/categoryFavorites'
    changed_data:
      title: changed_data
      type: object
      properties:
        status:
          type: array
          items:
            type: string
          description: ''
        started_at:
          type: array
          items:
            type: string
          description: ''
        updated_at:
          type: array
          items:
            type: string
          description: ''
    Chapters_FetchCollectionresponse:
      title: Chapters_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/chapters'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Chapters_FetchResourceresponse:
      title: Chapters_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/chapters'
    chapters1:
      title: chapters1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    character:
      title: character
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    Characters_FetchCollectionresponse:
      title: Characters_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/characters'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Characters_FetchResourceresponse:
      title: Characters_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/characters'
    comment:
      title: comment
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    CommentLikes_FetchCollectionresponse:
      title: CommentLikes_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/commentLikes'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    CommentLikes_FetchResourceresponse:
      title: CommentLikes_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/commentLikes'
    comments1:
      title: comments1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    coverImage:
      title: coverImage
      type: object
      properties:
        tiny:
          type: string
          example: https://media.kitsu.io/groups/cover_images/1/tiny.jpg?1424209483
        small:
          type: string
          example: https://media.kitsu.io/groups/cover_images/1/small.jpg?1424209483
        large:
          type: string
          example: https://media.kitsu.io/groups/cover_images/1/large.jpg?1424209483
        original:
          type: string
          example: https://media.kitsu.io/groups/cover_images/1/original.jpeg?1424209483
        meta:
          $ref: '#/components/schemas/meta1'
    coverImage4:
      title: coverImage4
      type: object
      properties:
        tiny:
          type: string
          example: https://media.kitsu.io/users/cover_images/1/small.jpg
        small:
          type: string
          example: https://media.kitsu.io/users/cover_images/1/small.jpg
        large:
          type: string
          example: https://media.kitsu.io/users/cover_images/1/small.jpg
        original:
          type: string
          example: https://media.kitsu.io/users/cover_images/1/original.jpeg
        meta:
          $ref: '#/components/schemas/meta13'
    destination:
      title: destination
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    dimensions:
      title: dimensions
      type: object
      properties:
        tiny:
          $ref: '#/components/schemas/tiny'
        small:
          $ref: '#/components/schemas/small'
        medium:
          $ref: '#/components/schemas/medium'
        large:
          $ref: '#/components/schemas/large'
    dimensions1:
      title: dimensions1
      type: object
      properties:
        tiny:
          $ref: '#/components/schemas/tiny'
        small:
          $ref: '#/components/schemas/small'
        large:
          $ref: '#/components/schemas/large'
    dimensions9:
      title: dimensions9
      type: object
      properties:
        tiny:
          $ref: '#/components/schemas/tiny9'
        small:
          $ref: '#/components/schemas/small9'
        medium:
          $ref: '#/components/schemas/medium5'
        large:
          $ref: '#/components/schemas/large9'
    dimensions10:
      title: dimensions10
      type: object
      properties:
        tiny:
          $ref: '#/components/schemas/tiny9'
        small:
          $ref: '#/components/schemas/small10'
        large:
          $ref: '#/components/schemas/large9'
    drama2:
      title: drama2
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    dramaCharacters:
      title: dramaCharacters
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    dramasMediaAttribute:
      title: dramasMediaAttribute
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    dramaStaff:
      title: dramaStaff
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    Episodes_FetchCollectionresponse:
      title: Episodes_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/episodes'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Episodes_FetchResourceresponse:
      title: Episodes_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/episodes'
    episodes1:
      title: episodes1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    event:
      title: event
      enum:
      - added
      - updated
      type: string
    externalSite:
      title: externalSite
      enum:
      - anidb
      - anilist/anime
      - anilist/manga
      - myanimelist/anime
      - myanimelist/manga
      - thetvdb/season
      - thetvdb/series
      type: string
      description: Non-exaustive list, new sites may be added over time
    Favorites_FetchCollectionresponse:
      title: Favorites_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/favorites'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Favorites_FetchResourceresponse:
      title: Favorites_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/favorites'
    favorites1:
      title: favorites1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    FetchCollectionresponse:
      title: FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/anime'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse1:
      title: FetchCollectionresponse1
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/manga'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse2:
      title: FetchCollectionresponse2
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/categories'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse3:
      title: FetchCollectionresponse3
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mediaRelationships'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse4:
      title: FetchCollectionresponse4
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mediaFollows'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse5:
      title: FetchCollectionresponse5
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/streamers'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse6:
      title: FetchCollectionresponse6
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/blocks'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse7:
      title: FetchCollectionresponse7
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/libraryEntries'
          description: ''
        meta:
          $ref: '#/components/schemas/meta39'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse8:
      title: FetchCollectionresponse8
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mediaReactionVotes'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse9:
      title: FetchCollectionresponse9
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/posts'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse10:
      title: FetchCollectionresponse10
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/comments'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse11:
      title: FetchCollectionresponse11
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/animeCharacters'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse12:
      title: FetchCollectionresponse12
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/animeProductions'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse13:
      title: FetchCollectionresponse13
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groups'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse14:
      title: FetchCollectionresponse14
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/reports'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchCollectionresponse15:
      title: FetchCollectionresponse15
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/siteAnnouncements'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    FetchResourceresponse:
      title: FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/anime'
    FetchResourceresponse1:
      title: FetchResourceresponse1
      type: object
      properties:
        data:
          $ref: '#/components/schemas/manga'
    FetchResourceresponse2:
      title: FetchResourceresponse2
      type: object
      properties:
        data:
          $ref: '#/components/schemas/categories'
    FetchResourceresponse3:
      title: FetchResourceresponse3
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mediaRelationships'
    FetchResourceresponse4:
      title: FetchResourceresponse4
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mediaFollows'
    FetchResourceresponse5:
      title: FetchResourceresponse5
      type: object
      properties:
        data:
          $ref: '#/components/schemas/streamers'
    FetchResourceresponse6:
      title: FetchResourceresponse6
      type: object
      properties:
        data:
          $ref: '#/components/schemas/blocks'
    FetchResourceresponse7:
      title: FetchResourceresponse7
      type: object
      properties:
        data:
          $ref: '#/components/schemas/libraryEntries'
    FetchResourceresponse8:
      title: FetchResourceresponse8
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mediaReactionVotes'
    FetchResourceresponse9:
      title: FetchResourceresponse9
      type: object
      properties:
        data:
          $ref: '#/components/schemas/posts'
    FetchResourceresponse10:
      title: FetchResourceresponse10
      type: object
      properties:
        data:
          $ref: '#/components/schemas/comments'
    FetchResourceresponse11:
      title: FetchResourceresponse11
      type: object
      properties:
        data:
          $ref: '#/components/schemas/animeCharacters'
    FetchResourceresponse12:
      title: FetchResourceresponse12
      type: object
      properties:
        data:
          $ref: '#/components/schemas/animeProductions'
    FetchResourceresponse13:
      title: FetchResourceresponse13
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groups'
    FetchResourceresponse14:
      title: FetchResourceresponse14
      type: object
      properties:
        data:
          $ref: '#/components/schemas/reports'
    FetchResourceresponse15:
      title: FetchResourceresponse15
      type: object
      properties:
        data:
          $ref: '#/components/schemas/siteAnnouncements'
    firstMessage:
      title: firstMessage
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    followed:
      title: followed
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    follower:
      title: follower
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    followers:
      title: followers
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    following:
      title: following
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    Follows_FetchCollectionresponse:
      title: Follows_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/follows'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Follows_FetchResourceresponse:
      title: Follows_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/follows'
    franchise:
      title: franchise
      type: object
      properties:
        media:
          type: object
        links:
          $ref: '#/components/schemas/links1'
    Franchises_FetchCollectionresponse:
      title: Franchises_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/franchises'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Franchises_FetchResourceresponse:
      title: Franchises_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/franchises'
    genres1:
      title: genres1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    group:
      title: group
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    GroupActionLogs_FetchCollectionresponse:
      title: GroupActionLogs_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupActionLogs'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupActionLogs_FetchResourceresponse:
      title: GroupActionLogs_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupActionLogs'
    GroupBans_FetchCollectionresponse:
      title: GroupBans_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupBans'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupBans_FetchResourceresponse:
      title: GroupBans_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupBans'
    GroupCategories_FetchCollectionresponse:
      title: GroupCategories_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupCategories'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupCategories_FetchResourceresponse:
      title: GroupCategories_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupCategories'
    GroupInvites_FetchCollectionresponse:
      title: GroupInvites_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupInvites'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupInvites_FetchResourceresponse:
      title: GroupInvites_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupInvites'
    GroupMemberNotes_FetchCollectionresponse:
      title: GroupMemberNotes_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupMemberNotes'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupMemberNotes_FetchResourceresponse:
      title: GroupMemberNotes_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupMemberNotes'
    GroupMembers_FetchCollectionresponse:
      title: GroupMembers_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupMembers'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupMembers_FetchResourceresponse:
      title: GroupMembers_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupMembers'
    GroupNeighbors_FetchCollectionresponse:
      title: GroupNeighbors_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupNeighbors'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupNeighbors_FetchResourceresponse:
      title: GroupNeighbors_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupNeighbors'
    GroupPermissions_FetchCollectionresponse:
      title: GroupPermissions_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupPermissions'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupPermissions_FetchResourceresponse:
      title: GroupPermissions_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupPermissions'
    GroupReports_FetchCollectionresponse:
      title: GroupReports_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupReports'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupReports_FetchResourceresponse:
      title: GroupReports_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupReports'
    GroupTicketMessages_FetchCollectionresponse:
      title: GroupTicketMessages_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupTicketMessages'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupTicketMessages_FetchResourceresponse:
      title: GroupTicketMessages_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupTicketMessages'
    GroupTickets_FetchCollectionresponse:
      title: GroupTickets_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/groupTickets'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    GroupTickets_FetchResourceresponse:
      title: GroupTickets_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/groupTickets'
    groupMember:
      title: groupMember
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    image:
      title: image
      type: object
      properties:
        original:
          type: string
          nullable: true
          example: https://media.kitsu.io/characters/images/1/original.jpg?1483096805
    image1:
      title: image1
      type: object
      properties:
        tiny:
          type: string
          example: https://media.kitsu.io/categories/images/10/tiny.jpg?1496212711
        small:
          type: string
          example: https://media.kitsu.io/categories/images/10/small.jpg?1496212711
        medium:
          type: string
          example: https://media.kitsu.io/categories/images/10/medium.jpg?1496212711
        large:
          type: string
          example: https://media.kitsu.io/categories/images/10/large.jpg?1496212711
        original:
          type: string
          example: https://media.kitsu.io/categories/images/10/original.jpg?1496212711
        meta:
          $ref: '#/components/schemas/meta'
    inputFile:
      title: inputFile
      type: object
      properties:
        original:
          type: string
          example: https://media.kitsu.io/list_import/my_anime_list_xmls/input_files/8665/original.gz?1503434224
        meta:
          $ref: '#/components/schemas/meta5'
    Installments_FetchCollectionresponse:
      title: Installments_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/installments'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Installments_FetchResourceresponse:
      title: Installments_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/installments'
    installments1:
      title: installments1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    invites:
      title: invites
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    item:
      title: item
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    kind:
      title: kind
      enum:
      - message
      - mod_note
      type: string
    kind1:
      title: kind1
      enum:
      - anime-activity-history
      - anime-amount-consumed
      - anime-category-breakdown
      - anime-favorite-year
      - manga-activity-history
      - manga-amount-consumed
      - manga-category-breakdown
      - manga-favorite-year
      type: string
    large:
      title: large
      type: object
      properties:
        width:
          type: string
          nullable: true
        height:
          type: string
          nullable: true
    large9:
      title: large9
      type: object
      properties:
        width:
          type: number
          example: 200
        height:
          type: number
          example: 200
    LeaderChatMessages_FetchCollectionresponse:
      title: LeaderChatMessages_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/leaderChatMessages'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    LeaderChatMessages_FetchResourceresponse:
      title: LeaderChatMessages_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/leaderChatMessages'
    leaderChatMessages2:
      title: leaderChatMessages2
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    LibraryEntryLogs_FetchCollectionresponse:
      title: LibraryEntryLogs_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/libraryEntryLogs'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    LibraryEntryLogs_FetchResourceresponse:
      title: LibraryEntryLogs_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/libraryEntryLogs'
    LibraryEvents_FetchCollectionresponse:
      title: LibraryEvents_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/libraryEvents'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    LibraryEvents_FetchResourceresponse:
      title: LibraryEvents_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/libraryEvents'
    libraryEntries1:
      title: libraryEntries1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    libraryEntry:
      title: libraryEntry
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    libraryEntryLogs1:
      title: libraryEntryLogs1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    likes:
      title: likes
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    LinkedAccounts_FetchCollectionresponse:
      title: LinkedAccounts_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/linkedAccounts'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    LinkedAccounts_FetchResourceresponse:
      title: LinkedAccounts_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/linkedAccounts'
    linkedAccount:
      title: linkedAccount
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    linkedAccounts1:
      title: linkedAccounts1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    links:
      title: links
      type: object
      properties:
        self:
          type: string
          example: https://kitsu.io/api/edge/anime-characters/1
    links1:
      title: links1
      type: object
      properties:
        self:
          type: string
          example: https://kitsu.io/api/edge/anime-characters/1/relationships/anime
        related:
          type: string
          example: https://kitsu.io/api/edge/anime-characters/1/anime
    links144:
      title: links144
      type: object
      properties:
        self:
          type: string
          description: follows/1
          example: '`https://kitsu.io/api/edge/media'
    links265:
      title: links265
      type: object
      properties:
        first:
          type: string
          example: https://kitsu.io/api/edge/anime?page%5Blimit%5D=10&page%5Boffset%5D=0
        prev:
          type: string
          description: Omitted if on first page
          example: https://kitsu.io/api/edge/anime?page%5Blimit%5D=10&page%5Boffset%5D=0
        next:
          type: string
          description: Omitted if on last page
          example: https://kitsu.io/api/edge/anime?page%5Blimit%5D=10&page%5Boffset%5D=10
        last:
          type: string
          example: https://kitsu.io/api/edge/anime?page%5Blimit%5D=10&page%5Boffset%5D=13787
    ListImports_FetchCollectionresponse:
      title: ListImports_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/listImports'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    ListImports_FetchResourceresponse:
      title: ListImports_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/listImports'
    MangaCharacters_FetchCollectionresponse:
      title: MangaCharacters_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mangaCharacters'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    MangaCharacters_FetchResourceresponse:
      title: MangaCharacters_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mangaCharacters'
    MangaStaff_FetchCollectionresponse:
      title: MangaStaff_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mangaStaff'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    MangaStaff_FetchResourceresponse:
      title: MangaStaff_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mangaStaff'
    manga1:
      title: manga1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    mangaCharacters1:
      title: mangaCharacters1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    mangaMediaAttribute:
      title: mangaMediaAttribute
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    mangaStaff1:
      title: mangaStaff1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    mangaType:
      title: mangaType
      enum:
      - doujin
      - manga
      - manhua
      - manhwa
      - novel
      - oel
      - oneshot
      type: string
      description: Deprecated, use `subtype`
    Mappings_FetchCollectionresponse:
      title: Mappings_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mappings'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Mappings_FetchResourceresponse:
      title: Mappings_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mappings'
    mappings1:
      title: mappings1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    media:
      title: media
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    MediaAttributeVotes_FetchCollectionresponse:
      title: MediaAttributeVotes_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mediaAttributeVotes'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    MediaAttributeVotes_FetchResourceresponse:
      title: MediaAttributeVotes_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mediaAttributeVotes'
    MediaAttributes_FetchCollectionresponse:
      title: MediaAttributes_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mediaAttributes'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    MediaAttributes_FetchResourceresponse:
      title: MediaAttributes_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mediaAttributes'
    MediaReactions_FetchCollectionresponse:
      title: MediaReactions_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/mediaReactions'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    MediaReactions_FetchResourceresponse:
      title: MediaReactions_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/mediaReactions'
    mediaReaction:
      title: mediaReaction
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    mediaRelationships1:
      title: mediaRelationships1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    medium:
      title: medium
      type: object
      properties:
        width:
          type: string
          nullable: true
        height:
          type: string
          nullable: true
    medium5:
      title: medium5
      type: object
      properties:
        width:
          type: number
          example: 100
        height:
          type: number
          example: 100
    members:
      title: members
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    messages:
      title: messages
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    meta:
      title: meta
      type: object
      properties:
        dimensions:
          $ref: '#/components/schemas/dimensions'
    meta1:
      title: meta1
      type: object
      properties:
        dimensions:
          $ref: '#/components/schemas/dimensions1'
    meta5:
      title: meta5
      type: object
      properties:
        dimensions:
          type: object
    meta12:
      title: meta12
      type: object
      properties:
        dimensions:
          $ref: '#/components/schemas/dimensions9'
    meta13:
      title: meta13
      type: object
      properties:
        dimensions:
          $ref: '#/components/schemas/dimensions10'
    meta14:
      title: meta14
      required:
      - count
      type: object
      properties:
        count:
          type: number
          example: 13797
    meta39:
      title: meta39
      required:
      - count
      type: object
      properties:
        statusCounts:
          $ref: '#/components/schemas/statusCounts'
        count:
          type: number
          example: 0
    moderator:
      title: moderator
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    naughty:
      title: naughty
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    neighbors:
      title: neighbors
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    nextUnit:
      title: nextUnit
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    notes:
      title: notes
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    notificationSettings:
      title: notificationSettings
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    oneSignalPlayers:
      title: oneSignalPlayers
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    parent:
      title: parent
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    People_FetchCollectionresponse:
      title: People_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/people'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    People_FetchResourceresponse:
      title: People_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/people'
    permission:
      title: permission
      enum:
      - community
      - content
      - leaders
      - owner
      - tickets
      type: string
    permissions:
      title: permissions
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    person:
      title: person
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    pinnedPost:
      title: pinnedPost
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    post:
      title: post
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    PostFollows_FetchCollectionresponse:
      title: PostFollows_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/postFollows'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    PostFollows_FetchResourceresponse:
      title: PostFollows_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/postFollows'
    PostLikes_FetchCollectionresponse:
      title: PostLikes_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/postLikes'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    PostLikes_FetchResourceresponse:
      title: PostLikes_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/postLikes'
    posterImage:
      title: posterImage
      type: object
      properties:
        tiny:
          type: string
          example: https://media.kitsu.io/anime/poster_images/1/tiny.jpg?1431697256
        small:
          type: string
          example: https://media.kitsu.io/anime/poster_images/1/small.jpg?1431697256
        medium:
          type: string
          example: https://media.kitsu.io/anime/poster_images/1/medium.jpg?1431697256
        large:
          type: string
          example: https://media.kitsu.io/anime/poster_images/1/large.jpg?1431697256
        original:
          type: string
          example: https://media.kitsu.io/anime/poster_images/1/original.jpg?1431697256
        meta:
          $ref: '#/components/schemas/meta'
    postLikes1:
      title: postLikes1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    primaryMedia:
      title: primaryMedia
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    privacy:
      title: privacy
      enum:
      - open
      - closed
      - restricted
      type: string
    producer:
      title: producer
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    Producers_FetchCollectionresponse:
      title: Producers_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/producers'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Producers_FetchResourceresponse:
      title: Producers_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/producers'
    ProfileLinkSites_FetchCollectionresponse:
      title: ProfileLinkSites_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/profileLinkSites'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    ProfileLinkSites_FetchResourceresponse:
      title: ProfileLinkSites_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/profileLinkSites'
    ProfileLinks_FetchCollectionresponse:
      title: ProfileLinks_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/profileLinks'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    ProfileLinks_FetchResourceresponse:
      title: ProfileLinks_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/profileLinks'
    profileLinks1:
      title: profileLinks1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    profileLinkSite:
      title: profileLinkSite
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    rank:
      title: rank
      enum:
      - admin
      - mod
      - pleb
      type: string
    ratingSystem:
      title: ratingSystem
      enum:
      - advanced
      - regular
      - simple
      type: string
      description: Logged in user only
    reactionSkipped:
      title: reactionSkipped
      enum:
      - unskipped
      - skipped
      - ignored
      type: string
    reason:
      title: reason
      enum:
      - nsfw
      - offensive
      - spoiler
      - bullying
      - other
      - spam
      type: string
    relationships:
      title: relationships
      type: object
      properties:
        anime:
          $ref: '#/components/schemas/anime1'
        character:
          type: object
          description: >-
            +links (object)
                + self: `https://kitsu.io/api/edge/anime-characters/1/relationships/character`
                + related: `https://kitsu.io/api/edge/anime-characters/1/character`
        castings:
          $ref: '#/components/schemas/castings2'
    relationships1:
      title: relationships1
      type: object
      properties:
        anime:
          $ref: '#/components/schemas/anime1'
        producer:
          $ref: '#/components/schemas/producer'
    relationships2:
      title: relationships2
      type: object
      properties:
        anime:
          $ref: '#/components/schemas/anime1'
        person:
          $ref: '#/components/schemas/person'
    relationships3:
      title: relationships3
      type: object
      properties:
        media:
          $ref: '#/components/schemas/media'
        character:
          $ref: '#/components/schemas/character'
        person:
          $ref: '#/components/schemas/person'
    relationships4:
      title: relationships4
      type: object
      properties:
        primaryMedia:
          $ref: '#/components/schemas/primaryMedia'
        castings:
          $ref: '#/components/schemas/castings2'
    relationships5:
      title: relationships5
      type: object
      properties:
        manga:
          $ref: '#/components/schemas/manga1'
        character:
          $ref: '#/components/schemas/character'
    relationships6:
      title: relationships6
      type: object
      properties:
        manga:
          $ref: '#/components/schemas/manga1'
        person:
          $ref: '#/components/schemas/person'
    relationships7:
      title: relationships7
      type: object
      properties:
        castings:
          $ref: '#/components/schemas/castings2'
    relationships8:
      title: relationships8
      type: object
      properties:
        animeProductions:
          $ref: '#/components/schemas/animeProductions1'
    relationships9:
      title: relationships9
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        group:
          $ref: '#/components/schemas/group'
        target:
          $ref: '#/components/schemas/target'
    relationships10:
      title: relationships10
      type: object
      properties:
        group:
          $ref: '#/components/schemas/group'
        user:
          $ref: '#/components/schemas/user'
        moderator:
          $ref: '#/components/schemas/moderator'
    relationships11:
      title: relationships11
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        group:
          $ref: '#/components/schemas/group'
        sender:
          $ref: '#/components/schemas/sender'
    relationships12:
      title: relationships12
      type: object
      properties:
        groupMember:
          $ref: '#/components/schemas/groupMember'
        user:
          $ref: '#/components/schemas/user'
    relationships13:
      title: relationships13
      type: object
      properties:
        group:
          $ref: '#/components/schemas/group'
        user:
          $ref: '#/components/schemas/user'
        permissions:
          $ref: '#/components/schemas/permissions'
        notes:
          $ref: '#/components/schemas/notes'
    relationships14:
      title: relationships14
      type: object
      properties:
        source:
          $ref: '#/components/schemas/source'
        destination:
          $ref: '#/components/schemas/destination'
    relationships15:
      title: relationships15
      type: object
      properties:
        groupMember:
          $ref: '#/components/schemas/groupMember'
    relationships16:
      title: relationships16
      type: object
      properties:
        group:
          $ref: '#/components/schemas/group'
        naughty:
          $ref: '#/components/schemas/naughty'
        user:
          $ref: '#/components/schemas/user'
        moderator:
          $ref: '#/components/schemas/moderator'
    relationships17:
      title: relationships17
      type: object
      properties:
        ticket:
          $ref: '#/components/schemas/ticket'
        user:
          $ref: '#/components/schemas/user'
    relationships18:
      title: relationships18
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        group:
          $ref: '#/components/schemas/group'
        assignee:
          $ref: '#/components/schemas/assignee'
        messages:
          $ref: '#/components/schemas/messages'
        firstMessage:
          $ref: '#/components/schemas/firstMessage'
    relationships19:
      title: relationships19
      type: object
      properties:
        members:
          $ref: '#/components/schemas/members'
        neighbors:
          $ref: '#/components/schemas/neighbors'
        tickets:
          $ref: '#/components/schemas/tickets'
        invites:
          $ref: '#/components/schemas/invites'
        reports:
          $ref: '#/components/schemas/reports2'
        leaderChatMessages:
          $ref: '#/components/schemas/leaderChatMessages2'
        actionLogs:
          $ref: '#/components/schemas/actionLogs'
        category:
          $ref: '#/components/schemas/category'
        pinnedPost:
          $ref: '#/components/schemas/pinnedPost'
    relationships20:
      title: relationships20
      type: object
      properties:
        group:
          $ref: '#/components/schemas/group'
        user:
          $ref: '#/components/schemas/user'
    relationships21:
      title: relationships21
      type: object
      properties:
        genres:
          $ref: '#/components/schemas/genres1'
        categories:
          $ref: '#/components/schemas/categories2'
        castings:
          $ref: '#/components/schemas/castings2'
        installments:
          $ref: '#/components/schemas/installments1'
        mappings:
          $ref: '#/components/schemas/mappings1'
        reviews:
          $ref: '#/components/schemas/reviews1'
        mediaRelationships:
          $ref: '#/components/schemas/mediaRelationships1'
        episodes:
          $ref: '#/components/schemas/episodes1'
        streamingLinks:
          $ref: '#/components/schemas/streamingLinks1'
        animeProductions:
          $ref: '#/components/schemas/animeProductions1'
        animeCharacters:
          $ref: '#/components/schemas/animeCharacters1'
        animeStaff:
          $ref: '#/components/schemas/animeStaff1'
    relationships22:
      title: relationships22
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/parent'
        anime:
          $ref: '#/components/schemas/anime1'
        drama:
          $ref: '#/components/schemas/drama2'
        manga:
          $ref: '#/components/schemas/manga1'
    relationships23:
      title: relationships23
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        category:
          $ref: '#/components/schemas/category'
    relationships24:
      title: relationships24
      type: object
      properties:
        manga:
          $ref: '#/components/schemas/manga1'
    relationships25:
      title: relationships25
      type: object
      properties:
        genres:
          $ref: '#/components/schemas/genres1'
        categories:
          $ref: '#/components/schemas/categories2'
        castings:
          $ref: '#/components/schemas/castings2'
        installments:
          $ref: '#/components/schemas/installments1'
        mappings:
          $ref: '#/components/schemas/mappings1'
        reviews:
          $ref: '#/components/schemas/reviews1'
        mediaRelationships:
          $ref: '#/components/schemas/mediaRelationships1'
        episodes:
          $ref: '#/components/schemas/episodes1'
        streamingLinks:
          $ref: '#/components/schemas/streamingLinks1'
        dramaCharacters:
          $ref: '#/components/schemas/dramaCharacters'
        dramaStaff:
          $ref: '#/components/schemas/dramaStaff'
    relationships26:
      title: relationships26
      type: object
      properties:
        media:
          $ref: '#/components/schemas/media'
        videos:
          $ref: '#/components/schemas/videos'
    relationships27:
      title: relationships27
      type: object
      properties:
        installments:
          $ref: '#/components/schemas/installments1'
    relationships28:
      title: relationships28
      type: object
      properties:
        franchise:
          $ref: '#/components/schemas/franchise'
    relationships29:
      title: relationships29
      type: object
      properties:
        genres:
          $ref: '#/components/schemas/genres1'
        categories:
          $ref: '#/components/schemas/categories2'
        castings:
          $ref: '#/components/schemas/castings2'
        installments:
          $ref: '#/components/schemas/installments1'
        mappings:
          $ref: '#/components/schemas/mappings1'
        reviews:
          $ref: '#/components/schemas/reviews1'
        mediaRelationships:
          $ref: '#/components/schemas/mediaRelationships1'
        chapters:
          $ref: '#/components/schemas/chapters1'
        mangaCharacters:
          $ref: '#/components/schemas/mangaCharacters1'
        mangaStaff:
          $ref: '#/components/schemas/mangaStaff1'
    relationships30:
      title: relationships30
      type: object
      properties:
        item:
          $ref: '#/components/schemas/item'
    relationships31:
      title: relationships31
      type: object
      properties:
        animeMediaAttribute:
          $ref: '#/components/schemas/animeMediaAttribute'
        mangaMediaAttribute:
          $ref: '#/components/schemas/mangaMediaAttribute'
        dramasMediaAttribute:
          $ref: '#/components/schemas/dramasMediaAttribute'
        user:
          $ref: '#/components/schemas/user'
    relationships32:
      title: relationships32
      type: object
      properties:
        anime:
          $ref: '#/components/schemas/anime1'
        drama:
          $ref: '#/components/schemas/drama2'
        manga:
          $ref: '#/components/schemas/manga1'
    relationships33:
      title: relationships33
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        media:
          $ref: '#/components/schemas/media'
    relationships35:
      title: relationships35
      type: object
      properties:
        streamingLinks:
          $ref: '#/components/schemas/streamingLinks1'
        videos:
          $ref: '#/components/schemas/videos'
    relationships36:
      title: relationships36
      type: object
      properties:
        streamer:
          $ref: '#/components/schemas/streamer'
        media:
          $ref: '#/components/schemas/media'
    relationships37:
      title: relationships37
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/comment'
        user:
          $ref: '#/components/schemas/user'
    relationships38:
      title: relationships38
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        post:
          $ref: '#/components/schemas/post'
        parent:
          $ref: '#/components/schemas/parent'
        likes:
          $ref: '#/components/schemas/likes'
        replies:
          $ref: '#/components/schemas/replies'
        uploads:
          $ref: '#/components/schemas/uploads'
    relationships39:
      title: relationships39
      type: object
      properties:
        post:
          $ref: '#/components/schemas/post'
        user:
          $ref: '#/components/schemas/user'
    relationships41:
      title: relationships41
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        targetUser:
          $ref: '#/components/schemas/targetUser'
        targetGroup:
          $ref: '#/components/schemas/targetGroup'
        media:
          $ref: '#/components/schemas/media'
        spoiledUnit:
          $ref: '#/components/schemas/spoiledUnit'
        ama:
          $ref: '#/components/schemas/ama'
        postLikes:
          $ref: '#/components/schemas/postLikes1'
        comments:
          $ref: '#/components/schemas/comments1'
        uploads:
          $ref: '#/components/schemas/uploads'
    relationships42:
      title: relationships42
      type: object
      properties:
        naughty:
          $ref: '#/components/schemas/naughty'
        user:
          $ref: '#/components/schemas/user'
        moderator:
          $ref: '#/components/schemas/moderator'
    relationships43:
      title: relationships43
      type: object
      properties:
        mediaReaction:
          $ref: '#/components/schemas/mediaReaction'
        user:
          $ref: '#/components/schemas/user'
    relationships44:
      title: relationships44
      type: object
      properties:
        anime:
          $ref: '#/components/schemas/anime1'
        drama:
          $ref: '#/components/schemas/drama2'
        manga:
          $ref: '#/components/schemas/manga1'
        user:
          $ref: '#/components/schemas/user'
        libraryEntry:
          $ref: '#/components/schemas/libraryEntry'
        votes:
          $ref: '#/components/schemas/votes'
    relationships45:
      title: relationships45
      type: object
      properties:
        review:
          $ref: '#/components/schemas/review'
        user:
          $ref: '#/components/schemas/user'
    relationships46:
      title: relationships46
      type: object
      properties:
        libraryEntry:
          $ref: '#/components/schemas/libraryEntry'
        media:
          $ref: '#/components/schemas/media'
        user:
          $ref: '#/components/schemas/user'
    relationships47:
      title: relationships47
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
    relationships48:
      title: relationships48
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        anime:
          $ref: '#/components/schemas/anime1'
        manga:
          $ref: '#/components/schemas/manga1'
        drama:
          $ref: '#/components/schemas/drama2'
        review:
          $ref: '#/components/schemas/review'
        mediaReaction:
          $ref: '#/components/schemas/mediaReaction'
        media:
          $ref: '#/components/schemas/media'
        unit:
          $ref: '#/components/schemas/unit'
        nextUnit:
          $ref: '#/components/schemas/nextUnit'
    relationships49:
      title: relationships49
      type: object
      properties:
        linkedAccount:
          $ref: '#/components/schemas/linkedAccount'
        media:
          $ref: '#/components/schemas/media'
    relationships50:
      title: relationships50
      type: object
      properties:
        libraryEntry:
          $ref: '#/components/schemas/libraryEntry'
        user:
          $ref: '#/components/schemas/user'
        anime:
          $ref: '#/components/schemas/anime1'
        manga:
          $ref: '#/components/schemas/manga1'
        drama:
          $ref: '#/components/schemas/drama2'
    relationships52:
      title: relationships52
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        blocked:
          $ref: '#/components/schemas/blocked'
    relationships53:
      title: relationships53
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        item:
          $ref: '#/components/schemas/item'
    relationships54:
      title: relationships54
      type: object
      properties:
        follower:
          $ref: '#/components/schemas/follower'
        followed:
          $ref: '#/components/schemas/followed'
    relationships55:
      title: relationships55
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        libraryEntryLogs:
          $ref: '#/components/schemas/libraryEntryLogs1'
    relationships56:
      title: relationships56
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        profileLinkSite:
          $ref: '#/components/schemas/profileLinkSite'
    relationships57:
      title: relationships57
      type: object
      properties:
        userRoles:
          $ref: '#/components/schemas/userRoles2'
        resource:
          $ref: '#/components/schemas/resource'
    relationships59:
      title: relationships59
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        role:
          $ref: '#/components/schemas/role4'
    relationships60:
      title: relationships60
      type: object
      properties:
        waifu:
          $ref: '#/components/schemas/waifu'
        pinnedPost:
          $ref: '#/components/schemas/pinnedPost'
        followers:
          $ref: '#/components/schemas/followers'
        following:
          $ref: '#/components/schemas/following'
        blocks:
          $ref: '#/components/schemas/blocks1'
        linkedAccounts:
          $ref: '#/components/schemas/linkedAccounts1'
        profileLinks:
          $ref: '#/components/schemas/profileLinks1'
        userRoles:
          $ref: '#/components/schemas/userRoles2'
        libraryEntries:
          $ref: '#/components/schemas/libraryEntries1'
        favorites:
          $ref: '#/components/schemas/favorites1'
        reviews:
          $ref: '#/components/schemas/reviews1'
        stats:
          $ref: '#/components/schemas/stats1'
        notificationSettings:
          $ref: '#/components/schemas/notificationSettings'
        oneSignalPlayers:
          $ref: '#/components/schemas/oneSignalPlayers'
    replies:
      title: replies
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    reports2:
      title: reports2
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    resource:
      title: resource
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    review:
      title: review
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    ReviewLikes_FetchCollectionresponse:
      title: ReviewLikes_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/reviewLikes'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    ReviewLikes_FetchResourceresponse:
      title: ReviewLikes_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/reviewLikes'
    Reviews_FetchCollectionresponse:
      title: Reviews_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/reviews'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Reviews_FetchResourceresponse:
      title: Reviews_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/reviews'
    reviews1:
      title: reviews1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    role:
      title: role
      enum:
      - main
      - supporting
      type: string
      description: Role the character plays in the anime
    role1:
      title: role1
      enum:
      - licensor
      - producer
      - studio
      type: string
      description: role of the producer
    role2:
      title: role2
      enum:
      - main
      - supporting
      type: string
      description: Role the character plays in the manga
    role3:
      title: role3
      enum:
      - adaptation
      - alternative_setting
      - alternative_version
      - character
      - full_story
      - other
      - parent_story
      - prequel
      - sequel
      - side_story
      - spinoff
      - summary
      type: string
      description: Relation to the source media
    role4:
      title: role4
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    Roles_FetchCollectionresponse:
      title: Roles_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/roles'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Roles_FetchResourceresponse:
      title: Roles_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/roles'
    sender:
      title: sender
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    showType:
      title: showType
      enum:
      - ONA
      - OVA
      - TV
      - movie
      - music
      - special
      type: string
      description: Deprecated, use `subtype`
    small:
      title: small
      type: object
      properties:
        width:
          type: string
          nullable: true
        height:
          type: string
          nullable: true
    small9:
      title: small9
      type: object
      properties:
        width:
          type: number
          example: 64
        height 64:
          type: number
    small10:
      title: small10
      type: object
      properties:
        width:
          type: number
          example: 1680
        height:
          type: number
          example: 400
    source:
      title: source
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    source2:
      title: source2
      type: object
      properties:
        pointer:
          type: string
          description: a JSON Pointer [RFC6901](https://tools.ietf.org/html/rfc6901) to the associated entity in the request
        parameter:
          type: string
          description: indicates which URI query parameter caused the error
      description: an object containing references to the source of the error
    spoiledUnit:
      title: spoiledUnit
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    Stats_FetchCollectionresponse:
      title: Stats_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/stats'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Stats_FetchResourceresponse:
      title: Stats_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/stats'
    stats1:
      title: stats1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    statsData:
      title: statsData
      type: object
      properties:
        total:
          type: number
          description: Total media in collection. Omitted for **amount-consumed** kinds
          example: 1500
        total_media:
          type: number
          description: Omitted if not **category-breakdown** or **favorite-year** kind
          example: 343
        activity:
          type: array
          items:
            $ref: '#/components/schemas/activity'
          description: Omitted if not **activity-history** kind
        all_categories:
          $ref: '#/components/schemas/all_categories'
        all_time:
          $ref: '#/components/schemas/all_time'
        all_years:
          type: object
          additionalProperties:
            type: number
    status:
      title: status
      enum:
      - reported
      - resolved
      - declined
      - escalated
      type: string
    status1:
      title: status1
      enum:
      - created
      - assigned
      - resolved
      type: string
    status2:
      title: status2
      enum:
      - current
      - finished
      - tba
      - unreleased
      - upcoming
      type: string
    status5:
      title: status5
      enum:
      - reported
      - resolved
      - declined
      type: string
    status6:
      title: status6
      enum:
      - completed
      - current
      - dropped
      - on_hold
      - planned
      type: string
    status9:
      title: status9
      enum:
      - queued
      - running
      - failed
      - completed
      type: string
    statusCounts:
      title: statusCounts
      type: object
      properties:
        current:
          type: number
          example: 102
        planned:
          type: number
          example: 346
        completed:
          type: number
          example: 266
        onHold:
          type: number
          example: 130
        dropped:
          type: number
          example: 3
    strategy:
      title: strategy
      enum:
      - greater
      - obliterate
      type: string
    streamer:
      title: streamer
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    StreamingLinks_FetchCollectionresponse:
      title: StreamingLinks_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/streamingLinks'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    StreamingLinks_FetchResourceresponse:
      title: StreamingLinks_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/streamingLinks'
    streamingLinks1:
      title: streamingLinks1
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    subtype:
      title: subtype
      enum:
      - ONA
      - OVA
      - TV
      - movie
      - music
      - special
      type: string
    subtype1:
      title: subtype1
      enum:
      - ONA
      - TV
      - movie
      - music
      - special
      type: string
    subtype2:
      title: subtype2
      enum:
      - doujin
      - manga
      - manhua
      - manhwa
      - novel
      - oel
      - oneshot
      type: string
    syncStatus:
      title: syncStatus
      enum:
      - pending
      - success
      - error
      type: string
    target:
      title: target
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    targetGroup:
      title: targetGroup
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    targetUser:
      title: targetUser
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    theme:
      title: theme
      enum:
      - dark
      - light
      type: string
      description: Logged in user only
    thumbnail:
      title: thumbnail
      type: object
      properties:
        original:
          type: string
          example: https://media.kitsu.io/chapters/thumbnails/403830/original.jpg?1501195665
        meta:
          $ref: '#/components/schemas/meta5'
    ticket:
      title: ticket
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    tickets:
      title: tickets
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    tiny:
      title: tiny
      type: object
      properties:
        width:
          type: string
          nullable: true
        height:
          type: string
          nullable: true
    tiny9:
      title: tiny9
      type: object
      properties:
        width:
          type: number
          example: 40
        height:
          type: number
          example: 40
    titleLanguagePreferencecanonical:
      title: titleLanguagePreferencecanonical
      enum:
      - canonical
      - romanized
      - english
      type: string
      description: Logged in user only
    titles:
      title: titles
      type: object
      properties:
        en:
          type: string
          nullable: true
          example: Cowboy Bebop
        en_jp:
          type: string
          nullable: true
          example: Cowbop Bebop
        ja_jp:
          type: string
          nullable: true
          example: カウボーイビバップ
      description: Titles in different languages. Other languages will be listed if they exist.
    titles1:
      title: titles1
      type: object
      properties:
        en_jp:
          type: string
          example: 'Mission 01: Magical Five'
    titles4:
      title: titles4
      type: object
      properties:
        en:
          type: string
          nullable: true
          example: Darker than Black
        en_jp:
          type: string
          nullable: true
    token:
      title: token
      type: object
      properties:
        resource_owner_id:
          type: number
          example: 29629
        scopes:
          type: array
          items:
            type: string
          description: ''
        expires_in_seconds:
          type: number
          example: 2592000
        application:
          $ref: '#/components/schemas/application'
        created_at:
          type: number
          example: 1508818017
    TrendingAnime_FetchCollectionresponse:
      title: TrendingAnime_FetchCollectionresponse
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/anime'
          description: ''
    TrendingManga_FetchCollectionresponse:
      title: TrendingManga_FetchCollectionresponse
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/manga'
          description: ''
    unit:
      title: unit
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    uploads:
      title: uploads
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    user:
      title: user
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    UserRoles_FetchCollectionresponse:
      title: UserRoles_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/userRoles'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    UserRoles_FetchResourceresponse:
      title: UserRoles_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/userRoles'
    userRoles2:
      title: userRoles2
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    Users_FetchCollectionresponse:
      title: Users_FetchCollectionresponse
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/users'
          description: ''
        meta:
          $ref: '#/components/schemas/meta14'
        links:
          $ref: '#/components/schemas/links265'
    Users_FetchResourceresponse:
      title: Users_FetchResourceresponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/users'
    videos:
      title: videos
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    votes:
      title: votes
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
    waifu:
      title: waifu
      type: object
      properties:
        links:
          $ref: '#/components/schemas/links1'
tags:
- name: Authentication
  description: >-
    Kitsu uses OAuth 2 for authentication. It is not required to send

    authenticated requests for most endpoints.


    After registering your app, you will receieve a client ID and a

    client secret. The client ID is considered public information and is

    used to build login URLs or included in source code. The client

    secret **must** be kept confidential.


    **NOTE:** Application registration has not yet been implemented, so

    for now all requests should be made with the following client ID

    and secret:


    ```

    CLIENT_ID: dd031b32d2f56c990b1425efe6c42ad847e7fe3ab46bf1299f05ecd856bdb7dd

    CLIENT_SECRET: 54d7307928f63414defd96399fc31ba847961ceaecef3a5fd93144e960c0e151

    ```


    OAuth2 path: `https://kitsu.io/api/oauth`


    # Grant Types


    OAuth 2 provides several grant types for different use cases. The

    grant types defined are:


    - **Authorization Code** for apps running on a web server,

    browser-based and mobile apps


    - **Password** for logging in with a username and Password


    - **Client Credentials** for application access


    # Getting the Access Token


    It is advised to use an oAuth2 client for the language you're using, however it is not required.


    ## Authorization Code Grant


    Not yet implemented


    ## Password Grant


    Send a `POST` request to `https://kitsu.io/api/oauth/token` with a body containing:


    ```

    grant_type=password&username=<email>&password=<password>

    ```


    If the authorization was successful, the request will respond with the following data:


    ```json5

    {
        access_token: "abc123", // Token used in Authorization header
        created_at: 1518235801,
        expires_in: 2591963, // Seconds until the access_token expires (30 days default)
        refresh_token: "123abc", // Token used to get a new access_token
        scope: "public",
        token_type: "bearer"
    }

    ```


    ## Client Credentials Grant


    Not yet implemented


    # Using the Access Token


    Once you've obtained the `access_token`, you can add it to the `Authorization` header of all API requests: `Authorization: Bearer <access_token>`
- name: Anime
  description: ''
- name: Manga
  description: ''
- name: Categories
  description: ''
- name: Media Relations
  description: ''
- name: Media Follows
  description: ''
- name: Streamers
  description: ''
- name: Users
  description: ''
- name: User Libraries
  description: ''
- name: Reactions
  description: ''
- name: Posts
  description: ''
- name: Comments
  description: ''
- name: Characters
  description: ''
- name: Producers & Staff
  description: ''
- name: Groups
  description: ''
- name: Reports
  description: ''
- name: Site Announcements
  description: ''
